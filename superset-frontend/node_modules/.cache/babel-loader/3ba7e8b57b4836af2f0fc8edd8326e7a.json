{"ast":null,"code":"import \"core-js/modules/es.string.replace.js\";import \"core-js/modules/web.dom-collections.iterator.js\";import _findInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/find\";import _Set from \"@babel/runtime-corejs3/core-js-stable/set\";import _mapInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/map\";import _indexOfInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/index-of\";import _trimInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/trim\";import _forEachInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/for-each\";import _bindInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/bind\";var _jsxFileName = \"/Users/frankhe/projects/superset/superset-frontend/src/SqlLab/components/SqlEditor.jsx\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint-disable jsx-a11y/anchor-is-valid */\n/* eslint-disable jsx-a11y/no-static-element-interactions */\nimport React from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport Split from 'react-split';\nimport { t, styled, supersetTheme, withTheme } from '@superset-ui/core';\nimport debounce from 'lodash/debounce';\nimport throttle from 'lodash/throttle';\nimport StyledModal from 'src/components/Modal';\nimport Mousetrap from 'mousetrap';\nimport Button from 'src/components/Button';\nimport Timer from 'src/components/Timer';\nimport {\nDropdown,\nMenu as AntdMenu,\nMenu,\nSwitch,\nInput } from\n'src/common/components';\nimport Icons from 'src/components/Icons';\nimport { detectOS } from 'src/utils/common';\nimport {\naddQueryEditor,\nCtasEnum,\nestimateQueryCost,\npersistEditorHeight,\npostStopQuery,\nqueryEditorSetAutorun,\nqueryEditorSetQueryLimit,\nqueryEditorSetSql,\nqueryEditorSetTemplateParams,\nrunQuery,\nsaveQuery,\nscheduleQuery,\nsetActiveSouthPaneTab,\nupdateSavedQuery,\nvalidateQuery } from\n'src/SqlLab/actions/sqlLab';\nimport {\nSTATE_TYPE_MAP,\nSQL_EDITOR_GUTTER_HEIGHT,\nSQL_EDITOR_GUTTER_MARGIN,\nSQL_TOOLBAR_HEIGHT } from\n'src/SqlLab/constants';\nimport { FeatureFlag, isFeatureEnabled } from 'src/featureFlags';\nimport TemplateParamsEditor from './TemplateParamsEditor';\nimport ConnectedSouthPane from './SouthPane/state';\nimport SaveQuery from './SaveQuery';\nimport ScheduleQueryButton from './ScheduleQueryButton';\nimport EstimateQueryCostButton from './EstimateQueryCostButton';\nimport ShareSqlLabQuery from './ShareSqlLabQuery';\nimport SqlEditorLeftBar from './SqlEditorLeftBar';\nimport AceEditorWrapper from './AceEditorWrapper';\nimport RunQueryActionButton from './RunQueryActionButton';import { jsx as ___EmotionJSX } from \"@emotion/react\";\n\nconst LIMIT_DROPDOWN = [10, 100, 1000, 10000, 100000];\nconst SQL_EDITOR_PADDING = 10;\nconst INITIAL_NORTH_PERCENT = 30;\nconst INITIAL_SOUTH_PERCENT = 70;\nconst SET_QUERY_EDITOR_SQL_DEBOUNCE_MS = 2000;\nconst VALIDATION_DEBOUNCE_MS = 600;\nconst WINDOW_RESIZE_THROTTLE_MS = 100;\n\nconst LimitSelectStyled = styled.span`\n  .ant-dropdown-trigger {\n    align-items: center;\n    color: black;\n    display: flex;\n    font-size: 12px;\n    margin-right: ${({ theme }) => theme.gridUnit * 2}px;\n    text-decoration: none;\n    span {\n      display: inline-block;\n      margin-right: ${({ theme }) => theme.gridUnit * 2}px;\n      &:last-of-type: {\n        margin-right: ${({ theme }) => theme.gridUnit * 4}px;\n      }\n    }\n  }\n`;\n\nconst StyledToolbar = styled.div`\n  padding: ${({ theme }) => theme.gridUnit * 2}px;\n  background-color: @lightest;\n  display: flex;\n  justify-content: space-between;\n  border: 1px solid ${supersetTheme.colors.grayscale.light2};\n  border-top: 0;\n\n  form {\n    margin-block-end: 0;\n  }\n\n  .leftItems,\n  .rightItems {\n    display: flex;\n    align-items: center;\n    & > span {\n      margin-right: ${({ theme }) => theme.gridUnit * 2}px;\n      display: inline-block;\n\n      &:last-child {\n        margin-right: 0;\n      }\n    }\n  }\n`;\n\nconst propTypes = {\n  actions: PropTypes.object.isRequired,\n  database: PropTypes.object,\n  latestQuery: PropTypes.object,\n  tables: PropTypes.array.isRequired,\n  editorQueries: PropTypes.array.isRequired,\n  dataPreviewQueries: PropTypes.array.isRequired,\n  queryEditorId: PropTypes.string.isRequired,\n  hideLeftBar: PropTypes.bool,\n  defaultQueryLimit: PropTypes.number.isRequired,\n  maxRow: PropTypes.number.isRequired,\n  displayLimit: PropTypes.number.isRequired,\n  saveQueryWarning: PropTypes.string,\n  scheduleQueryWarning: PropTypes.string };\n\n\nconst defaultProps = {\n  database: null,\n  latestQuery: null,\n  hideLeftBar: false,\n  scheduleQueryWarning: null };\n\n\nclass SqlEditor extends React.PureComponent {\n  constructor(props) {var _context, _context2, _context3, _context4, _context5, _context6, _context7, _context8, _context9, _context10, _context11, _context12, _context13, _context14, _context15, _context16, _context17, _context18;\n    super(props);this.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    handleToggleAutocompleteEnabled = () => {\n      this.setState((prevState) => ({\n        autocompleteEnabled: !prevState.autocompleteEnabled }));\n\n    };this.state = { autorun: props.queryEditor.autorun, ctas: '', northPercent: props.queryEditor.northPercent || INITIAL_NORTH_PERCENT, southPercent: props.queryEditor.southPercent || INITIAL_SOUTH_PERCENT, autocompleteEnabled: true, showCreateAsModal: false, createAs: '' };this.sqlEditorRef = /*#__PURE__*/React.createRef();this.northPaneRef = /*#__PURE__*/React.createRef();this.elementStyle = _bindInstanceProperty(_context = this.elementStyle).call(_context, this);this.onResizeStart = _bindInstanceProperty(_context2 = this.onResizeStart).call(_context2, this);this.onResizeEnd = _bindInstanceProperty(_context3 = this.onResizeEnd).call(_context3, this);this.canValidateQuery = _bindInstanceProperty(_context4 = this.canValidateQuery).call(_context4, this);this.runQuery = _bindInstanceProperty(_context5 = this.runQuery).call(_context5, this);this.stopQuery = _bindInstanceProperty(_context6 = this.stopQuery).call(_context6, this);this.onSqlChanged = _bindInstanceProperty(_context7 = this.onSqlChanged).call(_context7, this);this.setQueryEditorSql = _bindInstanceProperty(_context8 = this.setQueryEditorSql).call(_context8, this);this.setQueryEditorSqlWithDebounce = debounce(_bindInstanceProperty(_context9 = this.setQueryEditorSql).call(_context9, this), SET_QUERY_EDITOR_SQL_DEBOUNCE_MS);this.queryPane = _bindInstanceProperty(_context10 = this.queryPane).call(_context10, this);this.renderQueryLimit = _bindInstanceProperty(_context11 = this.renderQueryLimit).call(_context11, this);this.getAceEditorAndSouthPaneHeights = _bindInstanceProperty(_context12 = this.getAceEditorAndSouthPaneHeights).call(_context12, this);this.getSqlEditorHeight = _bindInstanceProperty(_context13 = this.getSqlEditorHeight).call(_context13, this);this.requestValidation = debounce(_bindInstanceProperty(_context14 = this.requestValidation).call(_context14, this), VALIDATION_DEBOUNCE_MS);this.getQueryCostEstimate = _bindInstanceProperty(_context15 = this.getQueryCostEstimate).call(_context15, this);this.handleWindowResize = throttle(_bindInstanceProperty(_context16 = this.handleWindowResize).call(_context16, this), WINDOW_RESIZE_THROTTLE_MS);this.onBeforeUnload = _bindInstanceProperty(_context17 = this.onBeforeUnload).call(_context17, this);this.renderDropdown = _bindInstanceProperty(_context18 = this.renderDropdown).call(_context18, this);}UNSAFE_componentWillMount() {if (this.state.autorun) {this.setState({ autorun: false });this.props.queryEditorSetAutorun(this.props.queryEditor, false);this.startQuery();}}componentDidMount() {// We need to measure the height of the sql editor post render to figure the height of\n    // the south pane so it gets rendered properly\n    // eslint-disable-next-line react/no-did-mount-set-state\n    this.setState({ height: this.getSqlEditorHeight() });window.addEventListener('resize', this.handleWindowResize);window.addEventListener('beforeunload', this.onBeforeUnload); // setup hotkeys\n    const hotkeys = this.getHotkeyConfig();_forEachInstanceProperty(hotkeys).call(hotkeys, (keyConfig) => {_bindInstanceProperty(Mousetrap).call(Mousetrap, [keyConfig.key], keyConfig.func);});}componentWillUnmount() {window.removeEventListener('resize', this.handleWindowResize);window.removeEventListener('beforeunload', this.onBeforeUnload);}onResizeStart() {// Set the heights on the ace editor and the ace content area after drag starts\n    // to smooth out the visual transition to the new heights when drag ends\n    document.getElementsByClassName('ace_content')[0].style.height = '100%';}onResizeEnd([northPercent, southPercent]) {this.setState({ northPercent, southPercent });if (this.northPaneRef.current && this.northPaneRef.current.clientHeight) {this.props.persistEditorHeight(this.props.queryEditor, northPercent, southPercent);}}onBeforeUnload(event) {var _this$props$database, _this$props$database$, _this$props$latestQue;if ((_this$props$database = this.props.database) != null && (_this$props$database$ = _this$props$database.extra_json) != null && _this$props$database$.cancel_query_on_windows_unload && ((_this$props$latestQue = this.props.latestQuery) == null ? void 0 : _this$props$latestQue.state) === 'running') {event.preventDefault();this.stopQuery();}}onSqlChanged(sql) {this.setQueryEditorSqlWithDebounce(sql); // Request server-side validation of the query text\n    if (this.canValidateQuery()) {// NB. requestValidation is debounced\n      this.requestValidation();}} // One layer of abstraction for easy spying in unit tests\n  getSqlEditorHeight() {return this.sqlEditorRef.current ? this.sqlEditorRef.current.clientHeight - SQL_EDITOR_PADDING * 2 : 0;} // Return the heights for the ace editor and the south pane as an object\n  // given the height of the sql editor, north pane percent and south pane percent.\n  getAceEditorAndSouthPaneHeights(height, northPercent, southPercent) {return { aceEditorHeight: height * northPercent / 100 - (SQL_EDITOR_GUTTER_HEIGHT / 2 + SQL_EDITOR_GUTTER_MARGIN) - SQL_TOOLBAR_HEIGHT, southPaneHeight: height * southPercent / 100 - (SQL_EDITOR_GUTTER_HEIGHT / 2 + SQL_EDITOR_GUTTER_MARGIN) };}getHotkeyConfig() {// Get the user's OS\n    const userOS = detectOS();return [{ name: 'runQuery1', key: 'ctrl+r', descr: t('Run query'), func: () => {var _context19;if (_trimInstanceProperty(_context19 = this.props.queryEditor.sql).call(_context19) !== '') {this.runQuery();}} }, { name: 'runQuery2', key: 'ctrl+enter', descr: t('Run query'), func: () => {var _context20;if (_trimInstanceProperty(_context20 = this.props.queryEditor.sql).call(_context20) !== '') {this.runQuery();}} }, { name: 'newTab', key: userOS === 'Windows' ? 'ctrl+q' : 'ctrl+t', descr: t('New tab'), func: () => {this.props.addQueryEditor({ ...this.props.queryEditor, title: t('Untitled query'), sql: '' });} }, { name: 'stopQuery', key: 'ctrl+x', descr: t('Stop query'), func: this.stopQuery }];}setQueryEditorSql(sql) {this.props.queryEditorSetSql(this.props.queryEditor, sql);}setQueryLimit(queryLimit) {this.props.queryEditorSetQueryLimit(this.props.queryEditor, queryLimit);}getQueryCostEstimate() {if (this.props.database) {const qe = this.props.queryEditor;const query = { dbId: qe.dbId, sql: qe.selectedText ? qe.selectedText : this.props.queryEditor.sql, sqlEditorId: qe.id, schema: qe.schema, templateParams: qe.templateParams };this.props.estimateQueryCost(query);}}handleWindowResize() {this.setState({ height: this.getSqlEditorHeight() });}elementStyle(dimension, elementSize, gutterSize) {return { [dimension]: `calc(${elementSize}% - ${gutterSize + SQL_EDITOR_GUTTER_MARGIN}px)` };}\n\n  requestValidation() {\n    if (this.props.database) {\n      const qe = this.props.queryEditor;\n      const query = {\n        dbId: qe.dbId,\n        sql: this.props.queryEditor.sql,\n        sqlEditorId: qe.id,\n        schema: qe.schema,\n        templateParams: qe.templateParams };\n\n      this.props.validateQuery(query);\n    }\n  }\n\n  canValidateQuery() {\n    // Check whether or not we can validate the current query based on whether\n    // or not the backend has a validator configured for it.\n    const validatorMap = window.featureFlags.SQL_VALIDATORS_BY_ENGINE;\n    if (this.props.database && validatorMap != null) {\n      return validatorMap.hasOwnProperty(this.props.database.backend);\n    }\n    return false;\n  }\n\n  runQuery() {\n    if (this.props.database) {\n      this.startQuery();\n    }\n  }\n\n  convertToNumWithSpaces(num) {\n    return num.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1 ');\n  }\n\n  startQuery(ctas = false, ctas_method = CtasEnum.TABLE) {\n    const qe = this.props.queryEditor;\n    const query = {\n      dbId: qe.dbId,\n      sql: qe.selectedText ? qe.selectedText : this.props.queryEditor.sql,\n      sqlEditorId: qe.id,\n      tab: qe.title,\n      schema: qe.schema,\n      tempTable: ctas ? this.state.ctas : '',\n      templateParams: qe.templateParams,\n      queryLimit: qe.queryLimit || this.props.defaultQueryLimit,\n      runAsync: this.props.database ?\n      this.props.database.allow_run_async :\n      false,\n      ctas,\n      ctas_method,\n      updateTabState: !qe.selectedText };\n\n    this.props.runQuery(query);\n    this.props.setActiveSouthPaneTab('Results');\n  }\n\n  stopQuery() {var _context21;\n    if (\n    this.props.latestQuery &&\n    _indexOfInstanceProperty(_context21 = ['running', 'pending']).call(_context21, this.props.latestQuery.state) >= 0)\n    {\n      this.props.postStopQuery(this.props.latestQuery);\n    }\n  }\n\n  createTableAs() {\n    this.startQuery(true, CtasEnum.TABLE);\n    this.setState({ showCreateAsModal: false, ctas: '' });\n  }\n\n  createViewAs() {\n    this.startQuery(true, CtasEnum.VIEW);\n    this.setState({ showCreateAsModal: false, ctas: '' });\n  }\n\n  ctasChanged(event) {\n    this.setState({ ctas: event.target.value });\n  }\n\n  queryPane() {\n    const hotkeys = this.getHotkeyConfig();\n    const {\n      aceEditorHeight,\n      southPaneHeight } =\n    this.getAceEditorAndSouthPaneHeights(\n    this.state.height,\n    this.state.northPercent,\n    this.state.southPercent);\n\n    return (\n      ___EmotionJSX(Split, {\n        expandToMin: true,\n        className: \"queryPane\",\n        sizes: [this.state.northPercent, this.state.southPercent],\n        elementStyle: this.elementStyle,\n        minSize: 200,\n        direction: \"vertical\",\n        gutterSize: SQL_EDITOR_GUTTER_HEIGHT,\n        onDragStart: this.onResizeStart,\n        onDragEnd: this.onResizeEnd, __self: this, __source: { fileName: _jsxFileName, lineNumber: 462, columnNumber: 7 } },\n\n      ___EmotionJSX(\"div\", { ref: this.northPaneRef, className: \"north-pane\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 473, columnNumber: 9 } },\n      ___EmotionJSX(AceEditorWrapper, {\n        actions: this.props.actions,\n        autocomplete: this.state.autocompleteEnabled,\n        onBlur: this.setQueryEditorSql,\n        onChange: this.onSqlChanged,\n        queryEditor: this.props.queryEditor,\n        sql: this.props.queryEditor.sql,\n        schemas: this.props.queryEditor.schemaOptions,\n        tables: this.props.queryEditor.tableOptions,\n        functionNames: this.props.queryEditor.functionNames,\n        extendedTables: this.props.tables,\n        height: `${aceEditorHeight}px`,\n        hotkeys: hotkeys, __self: this, __source: { fileName: _jsxFileName, lineNumber: 474, columnNumber: 11 } }),\n\n      this.renderEditorBottomBar(hotkeys)),\n\n      ___EmotionJSX(ConnectedSouthPane, {\n        editorQueries: this.props.editorQueries,\n        latestQueryId: this.props.latestQuery && this.props.latestQuery.id,\n        dataPreviewQueries: this.props.dataPreviewQueries,\n        actions: this.props.actions,\n        height: southPaneHeight,\n        displayLimit: this.props.displayLimit,\n        defaultQueryLimit: this.props.defaultQueryLimit, __self: this, __source: { fileName: _jsxFileName, lineNumber: 490, columnNumber: 9 } })));\n\n\n\n  }\n\n  renderDropdown() {var _this$props$latestQue2;\n    const qe = this.props.queryEditor;\n    const successful = ((_this$props$latestQue2 = this.props.latestQuery) == null ? void 0 : _this$props$latestQue2.state) === 'success';\n    const scheduleToolTip = successful ?\n    t('Schedule the query periodically') :\n    t('You must run the query successfully first');\n    return (\n      ___EmotionJSX(Menu, { onClick: this.handleMenuClick, style: { width: 176 }, __self: this, __source: { fileName: _jsxFileName, lineNumber: 510, columnNumber: 7 } },\n      ___EmotionJSX(Menu.Item, { style: { display: 'flex', justifyContent: 'space-between' }, __self: this, __source: { fileName: _jsxFileName, lineNumber: 511, columnNumber: 9 } },\n      ' ',\n      ___EmotionJSX(\"span\", { __self: this, __source: { fileName: _jsxFileName, lineNumber: 513, columnNumber: 11 } }, t('Autocomplete')), ' ',\n      ___EmotionJSX(Switch, {\n        checked: this.state.autocompleteEnabled,\n        onChange: this.handleToggleAutocompleteEnabled,\n        name: \"autocomplete-switch\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 514, columnNumber: 11 } }),\n      ' '),\n\n      isFeatureEnabled(FeatureFlag.ENABLE_TEMPLATE_PROCESSING) &&\n      ___EmotionJSX(Menu.Item, { __self: this, __source: { fileName: _jsxFileName, lineNumber: 521, columnNumber: 11 } },\n      ___EmotionJSX(TemplateParamsEditor, {\n        language: \"json\",\n        onChange: (params) => {\n          this.props.actions.queryEditorSetTemplateParams(qe, params);\n        },\n        code: qe.templateParams, __self: this, __source: { fileName: _jsxFileName, lineNumber: 522, columnNumber: 13 } })),\n\n\n\n      isFeatureEnabled(FeatureFlag.SCHEDULED_QUERIES) &&\n      ___EmotionJSX(Menu.Item, { __self: this, __source: { fileName: _jsxFileName, lineNumber: 532, columnNumber: 11 } },\n      ___EmotionJSX(ScheduleQueryButton, {\n        defaultLabel: qe.title,\n        sql: qe.sql,\n        onSchedule: this.props.actions.scheduleQuery,\n        schema: qe.schema,\n        dbId: qe.dbId,\n        scheduleQueryWarning: this.props.scheduleQueryWarning,\n        tooltip: scheduleToolTip,\n        disabled: !successful, __self: this, __source: { fileName: _jsxFileName, lineNumber: 533, columnNumber: 13 } }))));\n\n\n\n\n\n  }\n\n  renderQueryLimit() {var _context22;\n    // Adding SQL_MAX_ROW value to dropdown\n    const { maxRow } = this.props;\n    LIMIT_DROPDOWN.push(maxRow);\n\n    return (\n      ___EmotionJSX(AntdMenu, { __self: this, __source: { fileName: _jsxFileName, lineNumber: 555, columnNumber: 7 } },\n      _mapInstanceProperty(_context22 = [...new _Set(LIMIT_DROPDOWN)]).call(_context22, (limit) =>\n      ___EmotionJSX(AntdMenu.Item, {\n        key: `${limit}`,\n        onClick: () => this.setQueryLimit(limit), __self: this, __source: { fileName: _jsxFileName, lineNumber: 557, columnNumber: 11 } },\n\n\n      ___EmotionJSX(\"a\", { role: \"button\", styling: \"link\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 562, columnNumber: 13 } },\n      this.convertToNumWithSpaces(limit)),\n      ' '))));\n\n\n\n\n  }\n\n  renderEditorBottomBar() {var _this$props$latestQue3;\n    const { queryEditor: qe } = this.props;\n\n    const { allow_ctas: allowCTAS, allow_cvas: allowCVAS } =\n    this.props.database || {};\n\n    const showMenu = allowCTAS || allowCVAS;\n    const { theme } = this.props;\n    const runMenuBtn =\n    ___EmotionJSX(Menu, { __self: this, __source: { fileName: _jsxFileName, lineNumber: 580, columnNumber: 7 } },\n    allowCTAS &&\n    ___EmotionJSX(Menu.Item, {\n      onClick: () => {\n        this.setState({\n          showCreateAsModal: true,\n          createAs: CtasEnum.TABLE });\n\n      },\n      key: \"1\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 582, columnNumber: 11 } },\n\n    t('CREATE TABLE AS')),\n\n\n    allowCVAS &&\n    ___EmotionJSX(Menu.Item, {\n      onClick: () => {\n        this.setState({\n          showCreateAsModal: true,\n          createAs: CtasEnum.VIEW });\n\n      },\n      key: \"2\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 595, columnNumber: 11 } },\n\n    t('CREATE VIEW AS')));\n\n\n\n\n    return (\n      ___EmotionJSX(StyledToolbar, { className: \"sql-toolbar\", id: \"js-sql-toolbar\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 610, columnNumber: 7 } },\n      ___EmotionJSX(\"div\", { className: \"leftItems\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 611, columnNumber: 9 } },\n      ___EmotionJSX(\"span\", { __self: this, __source: { fileName: _jsxFileName, lineNumber: 612, columnNumber: 11 } },\n      ___EmotionJSX(RunQueryActionButton, {\n        allowAsync:\n        this.props.database ?\n        this.props.database.allow_run_async :\n        false,\n\n        queryState: (_this$props$latestQue3 = this.props.latestQuery) == null ? void 0 : _this$props$latestQue3.state,\n        runQuery: this.runQuery,\n        selectedText: qe.selectedText,\n        stopQuery: this.stopQuery,\n        sql: this.props.queryEditor.sql,\n        overlayCreateAsMenu: showMenu ? runMenuBtn : null, __self: this, __source: { fileName: _jsxFileName, lineNumber: 613, columnNumber: 13 } })),\n\n\n      isFeatureEnabled(FeatureFlag.ESTIMATE_QUERY_COST) &&\n      this.props.database &&\n      this.props.database.allows_cost_estimate &&\n      ___EmotionJSX(\"span\", { __self: this, __source: { fileName: _jsxFileName, lineNumber: 630, columnNumber: 15 } },\n      ___EmotionJSX(EstimateQueryCostButton, {\n        dbId: qe.dbId,\n        schema: qe.schema,\n        sql: qe.sql,\n        getEstimate: this.getQueryCostEstimate,\n        queryCostEstimate: qe.queryCostEstimate,\n        selectedText: qe.selectedText,\n        tooltip: t('Estimate the cost before running a query'), __self: this, __source: { fileName: _jsxFileName, lineNumber: 631, columnNumber: 17 } })),\n\n\n\n      ___EmotionJSX(\"span\", { __self: this, __source: { fileName: _jsxFileName, lineNumber: 642, columnNumber: 11 } },\n      ___EmotionJSX(LimitSelectStyled, { __self: this, __source: { fileName: _jsxFileName, lineNumber: 643, columnNumber: 13 } },\n      ___EmotionJSX(Dropdown, { overlay: this.renderQueryLimit(), trigger: \"click\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 644, columnNumber: 15 } },\n      ___EmotionJSX(\"a\", { onClick: (e) => e.preventDefault(), __self: this, __source: { fileName: _jsxFileName, lineNumber: 645, columnNumber: 17 } },\n      ___EmotionJSX(\"span\", { __self: this, __source: { fileName: _jsxFileName, lineNumber: 646, columnNumber: 19 } }, \"LIMIT:\"),\n      ___EmotionJSX(\"span\", { __self: this, __source: { fileName: _jsxFileName, lineNumber: 647, columnNumber: 19 } },\n      this.convertToNumWithSpaces(\n      this.props.queryEditor.queryLimit ||\n      this.props.defaultQueryLimit)),\n\n\n      ___EmotionJSX(Icons.TriangleDown, { iconColor: theme.colors.grayscale.base, __self: this, __source: { fileName: _jsxFileName, lineNumber: 653, columnNumber: 19 } }))))),\n\n\n\n\n      this.props.latestQuery &&\n      ___EmotionJSX(Timer, {\n        startTime: this.props.latestQuery.startDttm,\n        endTime: this.props.latestQuery.endDttm,\n        state: STATE_TYPE_MAP[this.props.latestQuery.state],\n        isRunning: this.props.latestQuery.state === 'running', __self: this, __source: { fileName: _jsxFileName, lineNumber: 659, columnNumber: 13 } })),\n\n\n\n      ___EmotionJSX(\"div\", { className: \"rightItems\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 667, columnNumber: 9 } },\n      ___EmotionJSX(\"span\", { __self: this, __source: { fileName: _jsxFileName, lineNumber: 668, columnNumber: 11 } },\n      ___EmotionJSX(SaveQuery, {\n        query: qe,\n        defaultLabel: qe.title || qe.description,\n        onSave: this.props.actions.saveQuery,\n        onUpdate: this.props.actions.updateSavedQuery,\n        saveQueryWarning: this.props.saveQueryWarning, __self: this, __source: { fileName: _jsxFileName, lineNumber: 669, columnNumber: 13 } })),\n\n\n      ___EmotionJSX(\"span\", { __self: this, __source: { fileName: _jsxFileName, lineNumber: 677, columnNumber: 11 } },\n      ___EmotionJSX(ShareSqlLabQuery, { queryEditor: qe, __self: this, __source: { fileName: _jsxFileName, lineNumber: 678, columnNumber: 13 } })),\n\n      ___EmotionJSX(Dropdown, { overlay: this.renderDropdown(), trigger: \"click\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 680, columnNumber: 11 } },\n      ___EmotionJSX(Icons.MoreHoriz, { iconColor: theme.colors.grayscale.base, __self: this, __source: { fileName: _jsxFileName, lineNumber: 681, columnNumber: 13 } })))));\n\n\n\n\n  }\n\n  render() {var _context23, _context24, _context25;\n    const createViewModalTitle =\n    this.state.createAs === CtasEnum.VIEW ?\n    'CREATE VIEW AS' :\n    'CREATE TABLE AS';\n\n    const createModalPlaceHolder =\n    this.state.createAs === CtasEnum.VIEW ?\n    'Specify name to CREATE VIEW AS schema in: public' :\n    'Specify name to CREATE TABLE AS schema in: public';\n\n    const leftBarStateClass = this.props.hideLeftBar ?\n    'schemaPane-exit-done' :\n    'schemaPane-enter-done';\n    return (\n      ___EmotionJSX(\"div\", { ref: this.sqlEditorRef, className: \"SqlEditor\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 703, columnNumber: 7 } },\n      ___EmotionJSX(CSSTransition, {\n        classNames: \"schemaPane\",\n        in: !this.props.hideLeftBar,\n        timeout: 300, __self: this, __source: { fileName: _jsxFileName, lineNumber: 704, columnNumber: 9 } },\n\n      ___EmotionJSX(\"div\", { className: `schemaPane ${leftBarStateClass}`, __self: this, __source: { fileName: _jsxFileName, lineNumber: 709, columnNumber: 11 } },\n      ___EmotionJSX(SqlEditorLeftBar, {\n        database: this.props.database,\n        queryEditor: this.props.queryEditor,\n        tables: this.props.tables,\n        actions: this.props.actions, __self: this, __source: { fileName: _jsxFileName, lineNumber: 710, columnNumber: 13 } }))),\n\n\n\n      this.queryPane(),\n      ___EmotionJSX(StyledModal, {\n        visible: this.state.showCreateAsModal,\n        title: t(createViewModalTitle),\n        onHide: () => {\n          this.setState({ showCreateAsModal: false });\n        },\n        footer:\n        ___EmotionJSX(React.Fragment, null,\n        ___EmotionJSX(Button, {\n          onClick: () => this.setState({ showCreateAsModal: false }), __self: this, __source: { fileName: _jsxFileName, lineNumber: 727, columnNumber: 15 } }, \"Cancel\"),\n\n\n\n        this.state.createAs === CtasEnum.TABLE &&\n        ___EmotionJSX(Button, {\n          buttonStyle: \"primary\",\n          disabled: this.state.ctas.length === 0,\n          onClick: _bindInstanceProperty(_context23 = this.createTableAs).call(_context23, this), __self: this, __source: { fileName: _jsxFileName, lineNumber: 733, columnNumber: 17 } }, \"Create\"),\n\n\n\n\n        this.state.createAs === CtasEnum.VIEW &&\n        ___EmotionJSX(Button, {\n          buttonStyle: \"primary\",\n          disabled: this.state.ctas.length === 0,\n          onClick: _bindInstanceProperty(_context24 = this.createViewAs).call(_context24, this), __self: this, __source: { fileName: _jsxFileName, lineNumber: 742, columnNumber: 17 } }, \"Create\")), __self: this, __source: { fileName: _jsxFileName, lineNumber: 719, columnNumber: 9 } },\n\n\n\n\n\n\n\n      ___EmotionJSX(\"span\", { __self: this, __source: { fileName: _jsxFileName, lineNumber: 753, columnNumber: 11 } }, \"Name\"),\n      ___EmotionJSX(Input, {\n        placeholder: createModalPlaceHolder,\n        onChange: _bindInstanceProperty(_context25 = this.ctasChanged).call(_context25, this), __self: this, __source: { fileName: _jsxFileName, lineNumber: 754, columnNumber: 11 } }))));\n\n\n\n\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}}SqlEditor.defaultProps = defaultProps;\nSqlEditor.propTypes = propTypes;\n\nfunction mapStateToProps(state, props) {var _context26;\n  const { sqlLab } = state;\n  const queryEditor = _findInstanceProperty(_context26 = sqlLab.queryEditors).call(_context26,\n  (editor) => editor.id === props.queryEditorId);\n\n\n  return { sqlLab, ...props, queryEditor };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators(\n  {\n    addQueryEditor,\n    estimateQueryCost,\n    persistEditorHeight,\n    postStopQuery,\n    queryEditorSetAutorun,\n    queryEditorSetQueryLimit,\n    queryEditorSetSql,\n    queryEditorSetTemplateParams,\n    runQuery,\n    saveQuery,\n    scheduleQuery,\n    setActiveSouthPaneTab,\n    updateSavedQuery,\n    validateQuery },\n\n  dispatch);\n\n}\n\nconst themedSqlEditor = withTheme(SqlEditor);const _default =\nconnect(mapStateToProps, mapDispatchToProps)(themedSqlEditor);export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(LIMIT_DROPDOWN, \"LIMIT_DROPDOWN\", \"/Users/frankhe/projects/superset/superset-frontend/src/SqlLab/components/SqlEditor.jsx\");reactHotLoader.register(SQL_EDITOR_PADDING, \"SQL_EDITOR_PADDING\", \"/Users/frankhe/projects/superset/superset-frontend/src/SqlLab/components/SqlEditor.jsx\");reactHotLoader.register(INITIAL_NORTH_PERCENT, \"INITIAL_NORTH_PERCENT\", \"/Users/frankhe/projects/superset/superset-frontend/src/SqlLab/components/SqlEditor.jsx\");reactHotLoader.register(INITIAL_SOUTH_PERCENT, \"INITIAL_SOUTH_PERCENT\", \"/Users/frankhe/projects/superset/superset-frontend/src/SqlLab/components/SqlEditor.jsx\");reactHotLoader.register(SET_QUERY_EDITOR_SQL_DEBOUNCE_MS, \"SET_QUERY_EDITOR_SQL_DEBOUNCE_MS\", \"/Users/frankhe/projects/superset/superset-frontend/src/SqlLab/components/SqlEditor.jsx\");reactHotLoader.register(VALIDATION_DEBOUNCE_MS, \"VALIDATION_DEBOUNCE_MS\", \"/Users/frankhe/projects/superset/superset-frontend/src/SqlLab/components/SqlEditor.jsx\");reactHotLoader.register(WINDOW_RESIZE_THROTTLE_MS, \"WINDOW_RESIZE_THROTTLE_MS\", \"/Users/frankhe/projects/superset/superset-frontend/src/SqlLab/components/SqlEditor.jsx\");reactHotLoader.register(LimitSelectStyled, \"LimitSelectStyled\", \"/Users/frankhe/projects/superset/superset-frontend/src/SqlLab/components/SqlEditor.jsx\");reactHotLoader.register(StyledToolbar, \"StyledToolbar\", \"/Users/frankhe/projects/superset/superset-frontend/src/SqlLab/components/SqlEditor.jsx\");reactHotLoader.register(propTypes, \"propTypes\", \"/Users/frankhe/projects/superset/superset-frontend/src/SqlLab/components/SqlEditor.jsx\");reactHotLoader.register(defaultProps, \"defaultProps\", \"/Users/frankhe/projects/superset/superset-frontend/src/SqlLab/components/SqlEditor.jsx\");reactHotLoader.register(SqlEditor, \"SqlEditor\", \"/Users/frankhe/projects/superset/superset-frontend/src/SqlLab/components/SqlEditor.jsx\");reactHotLoader.register(mapStateToProps, \"mapStateToProps\", \"/Users/frankhe/projects/superset/superset-frontend/src/SqlLab/components/SqlEditor.jsx\");reactHotLoader.register(mapDispatchToProps, \"mapDispatchToProps\", \"/Users/frankhe/projects/superset/superset-frontend/src/SqlLab/components/SqlEditor.jsx\");reactHotLoader.register(themedSqlEditor, \"themedSqlEditor\", \"/Users/frankhe/projects/superset/superset-frontend/src/SqlLab/components/SqlEditor.jsx\");reactHotLoader.register(_default, \"default\", \"/Users/frankhe/projects/superset/superset-frontend/src/SqlLab/components/SqlEditor.jsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/Users/frankhe/projects/superset/superset-frontend/src/SqlLab/components/SqlEditor.jsx"],"names":["React","CSSTransition","connect","bindActionCreators","PropTypes","Split","t","styled","supersetTheme","withTheme","debounce","throttle","StyledModal","Mousetrap","Button","Timer","Dropdown","Menu","AntdMenu","Switch","Input","Icons","detectOS","addQueryEditor","CtasEnum","estimateQueryCost","persistEditorHeight","postStopQuery","queryEditorSetAutorun","queryEditorSetQueryLimit","queryEditorSetSql","queryEditorSetTemplateParams","runQuery","saveQuery","scheduleQuery","setActiveSouthPaneTab","updateSavedQuery","validateQuery","STATE_TYPE_MAP","SQL_EDITOR_GUTTER_HEIGHT","SQL_EDITOR_GUTTER_MARGIN","SQL_TOOLBAR_HEIGHT","FeatureFlag","isFeatureEnabled","TemplateParamsEditor","ConnectedSouthPane","SaveQuery","ScheduleQueryButton","EstimateQueryCostButton","ShareSqlLabQuery","SqlEditorLeftBar","AceEditorWrapper","RunQueryActionButton","LIMIT_DROPDOWN","SQL_EDITOR_PADDING","INITIAL_NORTH_PERCENT","INITIAL_SOUTH_PERCENT","SET_QUERY_EDITOR_SQL_DEBOUNCE_MS","VALIDATION_DEBOUNCE_MS","WINDOW_RESIZE_THROTTLE_MS","LimitSelectStyled","span","theme","gridUnit","StyledToolbar","div","colors","grayscale","light2","propTypes","actions","object","isRequired","database","latestQuery","tables","array","editorQueries","dataPreviewQueries","queryEditorId","string","hideLeftBar","bool","defaultQueryLimit","number","maxRow","displayLimit","saveQueryWarning","scheduleQueryWarning","defaultProps","SqlEditor","PureComponent","constructor","props","handleToggleAutocompleteEnabled","setState","prevState","autocompleteEnabled","state","autorun","queryEditor","ctas","northPercent","southPercent","showCreateAsModal","createAs","sqlEditorRef","createRef","northPaneRef","elementStyle","onResizeStart","onResizeEnd","canValidateQuery","stopQuery","onSqlChanged","setQueryEditorSql","setQueryEditorSqlWithDebounce","queryPane","renderQueryLimit","getAceEditorAndSouthPaneHeights","getSqlEditorHeight","requestValidation","getQueryCostEstimate","handleWindowResize","onBeforeUnload","renderDropdown","UNSAFE_componentWillMount","startQuery","componentDidMount","height","window","addEventListener","hotkeys","getHotkeyConfig","keyConfig","key","func","componentWillUnmount","removeEventListener","document","getElementsByClassName","style","current","clientHeight","event","extra_json","cancel_query_on_windows_unload","preventDefault","sql","aceEditorHeight","southPaneHeight","userOS","name","descr","title","setQueryLimit","queryLimit","qe","query","dbId","selectedText","sqlEditorId","id","schema","templateParams","dimension","elementSize","gutterSize","validatorMap","featureFlags","SQL_VALIDATORS_BY_ENGINE","hasOwnProperty","backend","convertToNumWithSpaces","num","toString","replace","ctas_method","TABLE","tab","tempTable","runAsync","allow_run_async","updateTabState","createTableAs","createViewAs","VIEW","ctasChanged","target","value","schemaOptions","tableOptions","functionNames","renderEditorBottomBar","successful","scheduleToolTip","handleMenuClick","width","display","justifyContent","ENABLE_TEMPLATE_PROCESSING","params","SCHEDULED_QUERIES","push","limit","allow_ctas","allowCTAS","allow_cvas","allowCVAS","showMenu","runMenuBtn","ESTIMATE_QUERY_COST","allows_cost_estimate","queryCostEstimate","e","base","startDttm","endDttm","description","render","createViewModalTitle","createModalPlaceHolder","leftBarStateClass","length","mapStateToProps","sqlLab","queryEditors","editor","mapDispatchToProps","dispatch","themedSqlEditor"],"mappings":"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","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint-disable jsx-a11y/anchor-is-valid */\n/* eslint-disable jsx-a11y/no-static-element-interactions */\nimport React from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport Split from 'react-split';\nimport { t, styled, supersetTheme, withTheme } from '@superset-ui/core';\nimport debounce from 'lodash/debounce';\nimport throttle from 'lodash/throttle';\nimport StyledModal from 'src/components/Modal';\nimport Mousetrap from 'mousetrap';\nimport Button from 'src/components/Button';\nimport Timer from 'src/components/Timer';\nimport {\n  Dropdown,\n  Menu as AntdMenu,\n  Menu,\n  Switch,\n  Input,\n} from 'src/common/components';\nimport Icons from 'src/components/Icons';\nimport { detectOS } from 'src/utils/common';\nimport {\n  addQueryEditor,\n  CtasEnum,\n  estimateQueryCost,\n  persistEditorHeight,\n  postStopQuery,\n  queryEditorSetAutorun,\n  queryEditorSetQueryLimit,\n  queryEditorSetSql,\n  queryEditorSetTemplateParams,\n  runQuery,\n  saveQuery,\n  scheduleQuery,\n  setActiveSouthPaneTab,\n  updateSavedQuery,\n  validateQuery,\n} from 'src/SqlLab/actions/sqlLab';\nimport {\n  STATE_TYPE_MAP,\n  SQL_EDITOR_GUTTER_HEIGHT,\n  SQL_EDITOR_GUTTER_MARGIN,\n  SQL_TOOLBAR_HEIGHT,\n} from 'src/SqlLab/constants';\nimport { FeatureFlag, isFeatureEnabled } from 'src/featureFlags';\nimport TemplateParamsEditor from './TemplateParamsEditor';\nimport ConnectedSouthPane from './SouthPane/state';\nimport SaveQuery from './SaveQuery';\nimport ScheduleQueryButton from './ScheduleQueryButton';\nimport EstimateQueryCostButton from './EstimateQueryCostButton';\nimport ShareSqlLabQuery from './ShareSqlLabQuery';\nimport SqlEditorLeftBar from './SqlEditorLeftBar';\nimport AceEditorWrapper from './AceEditorWrapper';\nimport RunQueryActionButton from './RunQueryActionButton';\n\nconst LIMIT_DROPDOWN = [10, 100, 1000, 10000, 100000];\nconst SQL_EDITOR_PADDING = 10;\nconst INITIAL_NORTH_PERCENT = 30;\nconst INITIAL_SOUTH_PERCENT = 70;\nconst SET_QUERY_EDITOR_SQL_DEBOUNCE_MS = 2000;\nconst VALIDATION_DEBOUNCE_MS = 600;\nconst WINDOW_RESIZE_THROTTLE_MS = 100;\n\nconst LimitSelectStyled = styled.span`\n  .ant-dropdown-trigger {\n    align-items: center;\n    color: black;\n    display: flex;\n    font-size: 12px;\n    margin-right: ${({ theme }) => theme.gridUnit * 2}px;\n    text-decoration: none;\n    span {\n      display: inline-block;\n      margin-right: ${({ theme }) => theme.gridUnit * 2}px;\n      &:last-of-type: {\n        margin-right: ${({ theme }) => theme.gridUnit * 4}px;\n      }\n    }\n  }\n`;\n\nconst StyledToolbar = styled.div`\n  padding: ${({ theme }) => theme.gridUnit * 2}px;\n  background-color: @lightest;\n  display: flex;\n  justify-content: space-between;\n  border: 1px solid ${supersetTheme.colors.grayscale.light2};\n  border-top: 0;\n\n  form {\n    margin-block-end: 0;\n  }\n\n  .leftItems,\n  .rightItems {\n    display: flex;\n    align-items: center;\n    & > span {\n      margin-right: ${({ theme }) => theme.gridUnit * 2}px;\n      display: inline-block;\n\n      &:last-child {\n        margin-right: 0;\n      }\n    }\n  }\n`;\n\nconst propTypes = {\n  actions: PropTypes.object.isRequired,\n  database: PropTypes.object,\n  latestQuery: PropTypes.object,\n  tables: PropTypes.array.isRequired,\n  editorQueries: PropTypes.array.isRequired,\n  dataPreviewQueries: PropTypes.array.isRequired,\n  queryEditorId: PropTypes.string.isRequired,\n  hideLeftBar: PropTypes.bool,\n  defaultQueryLimit: PropTypes.number.isRequired,\n  maxRow: PropTypes.number.isRequired,\n  displayLimit: PropTypes.number.isRequired,\n  saveQueryWarning: PropTypes.string,\n  scheduleQueryWarning: PropTypes.string,\n};\n\nconst defaultProps = {\n  database: null,\n  latestQuery: null,\n  hideLeftBar: false,\n  scheduleQueryWarning: null,\n};\n\nclass SqlEditor extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      autorun: props.queryEditor.autorun,\n      ctas: '',\n      northPercent: props.queryEditor.northPercent || INITIAL_NORTH_PERCENT,\n      southPercent: props.queryEditor.southPercent || INITIAL_SOUTH_PERCENT,\n      autocompleteEnabled: true,\n      showCreateAsModal: false,\n      createAs: '',\n    };\n    this.sqlEditorRef = React.createRef();\n    this.northPaneRef = React.createRef();\n\n    this.elementStyle = this.elementStyle.bind(this);\n    this.onResizeStart = this.onResizeStart.bind(this);\n    this.onResizeEnd = this.onResizeEnd.bind(this);\n    this.canValidateQuery = this.canValidateQuery.bind(this);\n    this.runQuery = this.runQuery.bind(this);\n    this.stopQuery = this.stopQuery.bind(this);\n    this.onSqlChanged = this.onSqlChanged.bind(this);\n    this.setQueryEditorSql = this.setQueryEditorSql.bind(this);\n    this.setQueryEditorSqlWithDebounce = debounce(\n      this.setQueryEditorSql.bind(this),\n      SET_QUERY_EDITOR_SQL_DEBOUNCE_MS,\n    );\n    this.queryPane = this.queryPane.bind(this);\n    this.renderQueryLimit = this.renderQueryLimit.bind(this);\n    this.getAceEditorAndSouthPaneHeights = this.getAceEditorAndSouthPaneHeights.bind(\n      this,\n    );\n    this.getSqlEditorHeight = this.getSqlEditorHeight.bind(this);\n    this.requestValidation = debounce(\n      this.requestValidation.bind(this),\n      VALIDATION_DEBOUNCE_MS,\n    );\n    this.getQueryCostEstimate = this.getQueryCostEstimate.bind(this);\n    this.handleWindowResize = throttle(\n      this.handleWindowResize.bind(this),\n      WINDOW_RESIZE_THROTTLE_MS,\n    );\n\n    this.onBeforeUnload = this.onBeforeUnload.bind(this);\n    this.renderDropdown = this.renderDropdown.bind(this);\n  }\n\n  UNSAFE_componentWillMount() {\n    if (this.state.autorun) {\n      this.setState({ autorun: false });\n      this.props.queryEditorSetAutorun(this.props.queryEditor, false);\n      this.startQuery();\n    }\n  }\n\n  componentDidMount() {\n    // We need to measure the height of the sql editor post render to figure the height of\n    // the south pane so it gets rendered properly\n    // eslint-disable-next-line react/no-did-mount-set-state\n    this.setState({ height: this.getSqlEditorHeight() });\n\n    window.addEventListener('resize', this.handleWindowResize);\n    window.addEventListener('beforeunload', this.onBeforeUnload);\n\n    // setup hotkeys\n    const hotkeys = this.getHotkeyConfig();\n    hotkeys.forEach(keyConfig => {\n      Mousetrap.bind([keyConfig.key], keyConfig.func);\n    });\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleWindowResize);\n    window.removeEventListener('beforeunload', this.onBeforeUnload);\n  }\n\n  onResizeStart() {\n    // Set the heights on the ace editor and the ace content area after drag starts\n    // to smooth out the visual transition to the new heights when drag ends\n    document.getElementsByClassName('ace_content')[0].style.height = '100%';\n  }\n\n  onResizeEnd([northPercent, southPercent]) {\n    this.setState({ northPercent, southPercent });\n\n    if (this.northPaneRef.current && this.northPaneRef.current.clientHeight) {\n      this.props.persistEditorHeight(\n        this.props.queryEditor,\n        northPercent,\n        southPercent,\n      );\n    }\n  }\n\n  onBeforeUnload(event) {\n    if (\n      this.props.database?.extra_json?.cancel_query_on_windows_unload &&\n      this.props.latestQuery?.state === 'running'\n    ) {\n      event.preventDefault();\n      this.stopQuery();\n    }\n  }\n\n  onSqlChanged(sql) {\n    this.setQueryEditorSqlWithDebounce(sql);\n    // Request server-side validation of the query text\n    if (this.canValidateQuery()) {\n      // NB. requestValidation is debounced\n      this.requestValidation();\n    }\n  }\n\n  // One layer of abstraction for easy spying in unit tests\n  getSqlEditorHeight() {\n    return this.sqlEditorRef.current\n      ? this.sqlEditorRef.current.clientHeight - SQL_EDITOR_PADDING * 2\n      : 0;\n  }\n\n  // Return the heights for the ace editor and the south pane as an object\n  // given the height of the sql editor, north pane percent and south pane percent.\n  getAceEditorAndSouthPaneHeights(height, northPercent, southPercent) {\n    return {\n      aceEditorHeight:\n        (height * northPercent) / 100 -\n        (SQL_EDITOR_GUTTER_HEIGHT / 2 + SQL_EDITOR_GUTTER_MARGIN) -\n        SQL_TOOLBAR_HEIGHT,\n      southPaneHeight:\n        (height * southPercent) / 100 -\n        (SQL_EDITOR_GUTTER_HEIGHT / 2 + SQL_EDITOR_GUTTER_MARGIN),\n    };\n  }\n\n  getHotkeyConfig() {\n    // Get the user's OS\n    const userOS = detectOS();\n    return [\n      {\n        name: 'runQuery1',\n        key: 'ctrl+r',\n        descr: t('Run query'),\n        func: () => {\n          if (this.props.queryEditor.sql.trim() !== '') {\n            this.runQuery();\n          }\n        },\n      },\n      {\n        name: 'runQuery2',\n        key: 'ctrl+enter',\n        descr: t('Run query'),\n        func: () => {\n          if (this.props.queryEditor.sql.trim() !== '') {\n            this.runQuery();\n          }\n        },\n      },\n      {\n        name: 'newTab',\n        key: userOS === 'Windows' ? 'ctrl+q' : 'ctrl+t',\n        descr: t('New tab'),\n        func: () => {\n          this.props.addQueryEditor({\n            ...this.props.queryEditor,\n            title: t('Untitled query'),\n            sql: '',\n          });\n        },\n      },\n      {\n        name: 'stopQuery',\n        key: 'ctrl+x',\n        descr: t('Stop query'),\n        func: this.stopQuery,\n      },\n    ];\n  }\n\n  setQueryEditorSql(sql) {\n    this.props.queryEditorSetSql(this.props.queryEditor, sql);\n  }\n\n  setQueryLimit(queryLimit) {\n    this.props.queryEditorSetQueryLimit(this.props.queryEditor, queryLimit);\n  }\n\n  getQueryCostEstimate() {\n    if (this.props.database) {\n      const qe = this.props.queryEditor;\n      const query = {\n        dbId: qe.dbId,\n        sql: qe.selectedText ? qe.selectedText : this.props.queryEditor.sql,\n        sqlEditorId: qe.id,\n        schema: qe.schema,\n        templateParams: qe.templateParams,\n      };\n      this.props.estimateQueryCost(query);\n    }\n  }\n\n  handleToggleAutocompleteEnabled = () => {\n    this.setState(prevState => ({\n      autocompleteEnabled: !prevState.autocompleteEnabled,\n    }));\n  };\n\n  handleWindowResize() {\n    this.setState({ height: this.getSqlEditorHeight() });\n  }\n\n  elementStyle(dimension, elementSize, gutterSize) {\n    return {\n      [dimension]: `calc(${elementSize}% - ${\n        gutterSize + SQL_EDITOR_GUTTER_MARGIN\n      }px)`,\n    };\n  }\n\n  requestValidation() {\n    if (this.props.database) {\n      const qe = this.props.queryEditor;\n      const query = {\n        dbId: qe.dbId,\n        sql: this.props.queryEditor.sql,\n        sqlEditorId: qe.id,\n        schema: qe.schema,\n        templateParams: qe.templateParams,\n      };\n      this.props.validateQuery(query);\n    }\n  }\n\n  canValidateQuery() {\n    // Check whether or not we can validate the current query based on whether\n    // or not the backend has a validator configured for it.\n    const validatorMap = window.featureFlags.SQL_VALIDATORS_BY_ENGINE;\n    if (this.props.database && validatorMap != null) {\n      return validatorMap.hasOwnProperty(this.props.database.backend);\n    }\n    return false;\n  }\n\n  runQuery() {\n    if (this.props.database) {\n      this.startQuery();\n    }\n  }\n\n  convertToNumWithSpaces(num) {\n    return num.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1 ');\n  }\n\n  startQuery(ctas = false, ctas_method = CtasEnum.TABLE) {\n    const qe = this.props.queryEditor;\n    const query = {\n      dbId: qe.dbId,\n      sql: qe.selectedText ? qe.selectedText : this.props.queryEditor.sql,\n      sqlEditorId: qe.id,\n      tab: qe.title,\n      schema: qe.schema,\n      tempTable: ctas ? this.state.ctas : '',\n      templateParams: qe.templateParams,\n      queryLimit: qe.queryLimit || this.props.defaultQueryLimit,\n      runAsync: this.props.database\n        ? this.props.database.allow_run_async\n        : false,\n      ctas,\n      ctas_method,\n      updateTabState: !qe.selectedText,\n    };\n    this.props.runQuery(query);\n    this.props.setActiveSouthPaneTab('Results');\n  }\n\n  stopQuery() {\n    if (\n      this.props.latestQuery &&\n      ['running', 'pending'].indexOf(this.props.latestQuery.state) >= 0\n    ) {\n      this.props.postStopQuery(this.props.latestQuery);\n    }\n  }\n\n  createTableAs() {\n    this.startQuery(true, CtasEnum.TABLE);\n    this.setState({ showCreateAsModal: false, ctas: '' });\n  }\n\n  createViewAs() {\n    this.startQuery(true, CtasEnum.VIEW);\n    this.setState({ showCreateAsModal: false, ctas: '' });\n  }\n\n  ctasChanged(event) {\n    this.setState({ ctas: event.target.value });\n  }\n\n  queryPane() {\n    const hotkeys = this.getHotkeyConfig();\n    const {\n      aceEditorHeight,\n      southPaneHeight,\n    } = this.getAceEditorAndSouthPaneHeights(\n      this.state.height,\n      this.state.northPercent,\n      this.state.southPercent,\n    );\n    return (\n      <Split\n        expandToMin\n        className=\"queryPane\"\n        sizes={[this.state.northPercent, this.state.southPercent]}\n        elementStyle={this.elementStyle}\n        minSize={200}\n        direction=\"vertical\"\n        gutterSize={SQL_EDITOR_GUTTER_HEIGHT}\n        onDragStart={this.onResizeStart}\n        onDragEnd={this.onResizeEnd}\n      >\n        <div ref={this.northPaneRef} className=\"north-pane\">\n          <AceEditorWrapper\n            actions={this.props.actions}\n            autocomplete={this.state.autocompleteEnabled}\n            onBlur={this.setQueryEditorSql}\n            onChange={this.onSqlChanged}\n            queryEditor={this.props.queryEditor}\n            sql={this.props.queryEditor.sql}\n            schemas={this.props.queryEditor.schemaOptions}\n            tables={this.props.queryEditor.tableOptions}\n            functionNames={this.props.queryEditor.functionNames}\n            extendedTables={this.props.tables}\n            height={`${aceEditorHeight}px`}\n            hotkeys={hotkeys}\n          />\n          {this.renderEditorBottomBar(hotkeys)}\n        </div>\n        <ConnectedSouthPane\n          editorQueries={this.props.editorQueries}\n          latestQueryId={this.props.latestQuery && this.props.latestQuery.id}\n          dataPreviewQueries={this.props.dataPreviewQueries}\n          actions={this.props.actions}\n          height={southPaneHeight}\n          displayLimit={this.props.displayLimit}\n          defaultQueryLimit={this.props.defaultQueryLimit}\n        />\n      </Split>\n    );\n  }\n\n  renderDropdown() {\n    const qe = this.props.queryEditor;\n    const successful = this.props.latestQuery?.state === 'success';\n    const scheduleToolTip = successful\n      ? t('Schedule the query periodically')\n      : t('You must run the query successfully first');\n    return (\n      <Menu onClick={this.handleMenuClick} style={{ width: 176 }}>\n        <Menu.Item style={{ display: 'flex', justifyContent: 'space-between' }}>\n          {' '}\n          <span>{t('Autocomplete')}</span>{' '}\n          <Switch\n            checked={this.state.autocompleteEnabled}\n            onChange={this.handleToggleAutocompleteEnabled}\n            name=\"autocomplete-switch\"\n          />{' '}\n        </Menu.Item>\n        {isFeatureEnabled(FeatureFlag.ENABLE_TEMPLATE_PROCESSING) && (\n          <Menu.Item>\n            <TemplateParamsEditor\n              language=\"json\"\n              onChange={params => {\n                this.props.actions.queryEditorSetTemplateParams(qe, params);\n              }}\n              code={qe.templateParams}\n            />\n          </Menu.Item>\n        )}\n        {isFeatureEnabled(FeatureFlag.SCHEDULED_QUERIES) && (\n          <Menu.Item>\n            <ScheduleQueryButton\n              defaultLabel={qe.title}\n              sql={qe.sql}\n              onSchedule={this.props.actions.scheduleQuery}\n              schema={qe.schema}\n              dbId={qe.dbId}\n              scheduleQueryWarning={this.props.scheduleQueryWarning}\n              tooltip={scheduleToolTip}\n              disabled={!successful}\n            />\n          </Menu.Item>\n        )}\n      </Menu>\n    );\n  }\n\n  renderQueryLimit() {\n    // Adding SQL_MAX_ROW value to dropdown\n    const { maxRow } = this.props;\n    LIMIT_DROPDOWN.push(maxRow);\n\n    return (\n      <AntdMenu>\n        {[...new Set(LIMIT_DROPDOWN)].map(limit => (\n          <AntdMenu.Item\n            key={`${limit}`}\n            onClick={() => this.setQueryLimit(limit)}\n          >\n            {/* // eslint-disable-line no-use-before-define */}\n            <a role=\"button\" styling=\"link\">\n              {this.convertToNumWithSpaces(limit)}\n            </a>{' '}\n          </AntdMenu.Item>\n        ))}\n      </AntdMenu>\n    );\n  }\n\n  renderEditorBottomBar() {\n    const { queryEditor: qe } = this.props;\n\n    const { allow_ctas: allowCTAS, allow_cvas: allowCVAS } =\n      this.props.database || {};\n\n    const showMenu = allowCTAS || allowCVAS;\n    const { theme } = this.props;\n    const runMenuBtn = (\n      <Menu>\n        {allowCTAS && (\n          <Menu.Item\n            onClick={() => {\n              this.setState({\n                showCreateAsModal: true,\n                createAs: CtasEnum.TABLE,\n              });\n            }}\n            key=\"1\"\n          >\n            {t('CREATE TABLE AS')}\n          </Menu.Item>\n        )}\n        {allowCVAS && (\n          <Menu.Item\n            onClick={() => {\n              this.setState({\n                showCreateAsModal: true,\n                createAs: CtasEnum.VIEW,\n              });\n            }}\n            key=\"2\"\n          >\n            {t('CREATE VIEW AS')}\n          </Menu.Item>\n        )}\n      </Menu>\n    );\n    return (\n      <StyledToolbar className=\"sql-toolbar\" id=\"js-sql-toolbar\">\n        <div className=\"leftItems\">\n          <span>\n            <RunQueryActionButton\n              allowAsync={\n                this.props.database\n                  ? this.props.database.allow_run_async\n                  : false\n              }\n              queryState={this.props.latestQuery?.state}\n              runQuery={this.runQuery}\n              selectedText={qe.selectedText}\n              stopQuery={this.stopQuery}\n              sql={this.props.queryEditor.sql}\n              overlayCreateAsMenu={showMenu ? runMenuBtn : null}\n            />\n          </span>\n          {isFeatureEnabled(FeatureFlag.ESTIMATE_QUERY_COST) &&\n            this.props.database &&\n            this.props.database.allows_cost_estimate && (\n              <span>\n                <EstimateQueryCostButton\n                  dbId={qe.dbId}\n                  schema={qe.schema}\n                  sql={qe.sql}\n                  getEstimate={this.getQueryCostEstimate}\n                  queryCostEstimate={qe.queryCostEstimate}\n                  selectedText={qe.selectedText}\n                  tooltip={t('Estimate the cost before running a query')}\n                />\n              </span>\n            )}\n          <span>\n            <LimitSelectStyled>\n              <Dropdown overlay={this.renderQueryLimit()} trigger=\"click\">\n                <a onClick={e => e.preventDefault()}>\n                  <span>LIMIT:</span>\n                  <span>\n                    {this.convertToNumWithSpaces(\n                      this.props.queryEditor.queryLimit ||\n                        this.props.defaultQueryLimit,\n                    )}\n                  </span>\n                  <Icons.TriangleDown iconColor={theme.colors.grayscale.base} />\n                </a>\n              </Dropdown>\n            </LimitSelectStyled>\n          </span>\n          {this.props.latestQuery && (\n            <Timer\n              startTime={this.props.latestQuery.startDttm}\n              endTime={this.props.latestQuery.endDttm}\n              state={STATE_TYPE_MAP[this.props.latestQuery.state]}\n              isRunning={this.props.latestQuery.state === 'running'}\n            />\n          )}\n        </div>\n        <div className=\"rightItems\">\n          <span>\n            <SaveQuery\n              query={qe}\n              defaultLabel={qe.title || qe.description}\n              onSave={this.props.actions.saveQuery}\n              onUpdate={this.props.actions.updateSavedQuery}\n              saveQueryWarning={this.props.saveQueryWarning}\n            />\n          </span>\n          <span>\n            <ShareSqlLabQuery queryEditor={qe} />\n          </span>\n          <Dropdown overlay={this.renderDropdown()} trigger=\"click\">\n            <Icons.MoreHoriz iconColor={theme.colors.grayscale.base} />\n          </Dropdown>\n        </div>\n      </StyledToolbar>\n    );\n  }\n\n  render() {\n    const createViewModalTitle =\n      this.state.createAs === CtasEnum.VIEW\n        ? 'CREATE VIEW AS'\n        : 'CREATE TABLE AS';\n\n    const createModalPlaceHolder =\n      this.state.createAs === CtasEnum.VIEW\n        ? 'Specify name to CREATE VIEW AS schema in: public'\n        : 'Specify name to CREATE TABLE AS schema in: public';\n\n    const leftBarStateClass = this.props.hideLeftBar\n      ? 'schemaPane-exit-done'\n      : 'schemaPane-enter-done';\n    return (\n      <div ref={this.sqlEditorRef} className=\"SqlEditor\">\n        <CSSTransition\n          classNames=\"schemaPane\"\n          in={!this.props.hideLeftBar}\n          timeout={300}\n        >\n          <div className={`schemaPane ${leftBarStateClass}`}>\n            <SqlEditorLeftBar\n              database={this.props.database}\n              queryEditor={this.props.queryEditor}\n              tables={this.props.tables}\n              actions={this.props.actions}\n            />\n          </div>\n        </CSSTransition>\n        {this.queryPane()}\n        <StyledModal\n          visible={this.state.showCreateAsModal}\n          title={t(createViewModalTitle)}\n          onHide={() => {\n            this.setState({ showCreateAsModal: false });\n          }}\n          footer={\n            <>\n              <Button\n                onClick={() => this.setState({ showCreateAsModal: false })}\n              >\n                Cancel\n              </Button>\n              {this.state.createAs === CtasEnum.TABLE && (\n                <Button\n                  buttonStyle=\"primary\"\n                  disabled={this.state.ctas.length === 0}\n                  onClick={this.createTableAs.bind(this)}\n                >\n                  Create\n                </Button>\n              )}\n              {this.state.createAs === CtasEnum.VIEW && (\n                <Button\n                  buttonStyle=\"primary\"\n                  disabled={this.state.ctas.length === 0}\n                  onClick={this.createViewAs.bind(this)}\n                >\n                  Create\n                </Button>\n              )}\n            </>\n          }\n        >\n          <span>Name</span>\n          <Input\n            placeholder={createModalPlaceHolder}\n            onChange={this.ctasChanged.bind(this)}\n          />\n        </StyledModal>\n      </div>\n    );\n  }\n}\nSqlEditor.defaultProps = defaultProps;\nSqlEditor.propTypes = propTypes;\n\nfunction mapStateToProps(state, props) {\n  const { sqlLab } = state;\n  const queryEditor = sqlLab.queryEditors.find(\n    editor => editor.id === props.queryEditorId,\n  );\n\n  return { sqlLab, ...props, queryEditor };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators(\n    {\n      addQueryEditor,\n      estimateQueryCost,\n      persistEditorHeight,\n      postStopQuery,\n      queryEditorSetAutorun,\n      queryEditorSetQueryLimit,\n      queryEditorSetSql,\n      queryEditorSetTemplateParams,\n      runQuery,\n      saveQuery,\n      scheduleQuery,\n      setActiveSouthPaneTab,\n      updateSavedQuery,\n      validateQuery,\n    },\n    dispatch,\n  );\n}\n\nconst themedSqlEditor = withTheme(SqlEditor);\nexport default connect(mapStateToProps, mapDispatchToProps)(themedSqlEditor);\n"]},"metadata":{},"sourceType":"module"}