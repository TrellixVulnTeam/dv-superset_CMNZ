{"ast":null,"code":"import \"core-js/modules/web.dom-collections.iterator.js\";import _mapInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/map\";import { css as _css } from \"@emotion/react\";var _jsxFileName = \"/Users/frankhe/projects/superset/superset-frontend/src/dashboard/components/FiltersBadge/DetailsPanel/index.tsx\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useEffect, useState } from 'react';\nimport { Global, css } from '@emotion/react';\nimport { t, useTheme } from '@superset-ui/core';\nimport { MinusCircleFilled, CheckCircleFilled, ExclamationCircleFilled } from '@ant-design/icons';\nimport Popover from 'src/components/Popover';\nimport Collapse from 'src/components/Collapse';\nimport Icons from 'src/components/Icons';\nimport { Indent, Panel, Reset, Title } from 'src/dashboard/components/FiltersBadge/Styles';\nimport FilterIndicator from 'src/dashboard/components/FiltersBadge/FilterIndicator';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst DetailsPanelPopover = ({ appliedCrossFilterIndicators = [], appliedIndicators = [], incompatibleIndicators = [], unsetIndicators = [], onHighlightFilterSource, children }) => {\n  const [visible, setVisible] = useState(false);\n  const theme = useTheme();\n  // we don't need to clean up useEffect, setting { once: true } removes the event listener after handle function is called\n  useEffect(() => {\n    if (visible) {\n      window.addEventListener('resize', () => setVisible(false), {\n        once: true });\n\n    }\n  }, [visible]);\n  const getDefaultActivePanel = () => {\n    const result = [];\n    if (appliedCrossFilterIndicators.length) {\n      result.push('appliedCrossFilters');\n    }\n    if (appliedIndicators.length) {\n      result.push('applied');\n    }\n    if (incompatibleIndicators.length) {\n      result.push('incompatible');\n    }\n    if (result.length) {\n      return result;\n    }\n    return ['unset'];\n  };\n  const [activePanels, setActivePanels] = useState(() => [\n  ...getDefaultActivePanel()]);\n\n  function handlePopoverStatus(isOpen) {\n    setVisible(isOpen);\n    // every time the popover opens, make sure the most relevant panel is active\n    if (isOpen) {\n      setActivePanels(getDefaultActivePanel());\n    }\n  }\n  function handleActivePanelChange(panels) {\n    // need to convert to an array so that handlePopoverStatus will work\n    if (typeof panels === 'string') {\n      setActivePanels([panels]);\n    } else\n    {\n      setActivePanels(panels);\n    }\n  }\n  const indicatorKey = (indicator) => `${indicator.column} - ${indicator.name}`;\n  const content = ___EmotionJSX(Panel, { __self: this, __source: { fileName: _jsxFileName, lineNumber: 75, columnNumber: 22 } },\n  ___EmotionJSX(Global, { styles: /*#__PURE__*/css(\".filterStatusPopover{.ant-popover-inner{background-color:\",\n\n\n    theme.colors.grayscale.dark2, \"cc;.ant-popover-inner-content{padding-top:0;padding-bottom:0;}}&.ant-popover-placement-bottom,&.ant-popover-placement-bottomLeft,&.ant-popover-placement-bottomRight{&>.ant-popover-content>.ant-popover-arrow{border-top-color:\",\n\n\n\n\n\n\n\n\n\n    theme.colors.grayscale.dark2, \"cc;border-left-color:\",\n    theme.colors.grayscale.dark2, \"cc;}}&.ant-popover-placement-top,&.ant-popover-placement-topLeft,&.ant-popover-placement-topRight{&>.ant-popover-content>.ant-popover-arrow{border-bottom-color:\",\n\n\n\n\n\n\n    theme.colors.grayscale.dark2, \"cc;border-right-color:\",\n    theme.colors.grayscale.dark2, \"cc;}}&.ant-popover-placement-left,&.ant-popover-placement-leftTop,&.ant-popover-placement-leftBottom{&>.ant-popover-content>.ant-popover-arrow{border-top-color:\",\n\n\n\n\n\n\n    theme.colors.grayscale.dark2, \"cc;border-right-color:\",\n    theme.colors.grayscale.dark2, \"cc;}}&.ant-popover-placement-right,&.ant-popover-placement-rightTop,&.ant-popover-placement-rightBottom{&>.ant-popover-content>.ant-popover-arrow{border-bottom-color:\",\n\n\n\n\n\n\n    theme.colors.grayscale.dark2, \"cc;border-left-color:\",\n    theme.colors.grayscale.dark2, \"cc;}}&.ant-popover{color:\",\n\n\n\n    theme.colors.grayscale.light4, \";z-index:99;}}\" + (process.env.NODE_ENV === \"production\" ? \"\" : \";label:content;\"), process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"), __self: this, __source: { fileName: _jsxFileName, lineNumber: 76, columnNumber: 7 } }),\n\n\n\n\n  ___EmotionJSX(Reset, { __self: this, __source: { fileName: _jsxFileName, lineNumber: 123, columnNumber: 7 } },\n  ___EmotionJSX(Collapse, { ghost: true, light: true, activeKey: activePanels, onChange: handleActivePanelChange, __self: this, __source: { fileName: _jsxFileName, lineNumber: 124, columnNumber: 9 } },\n  appliedCrossFilterIndicators.length ? ___EmotionJSX(Collapse.Panel, { key: \"appliedCrossFilters\", header: ___EmotionJSX(Title, { bold: true, color: theme.colors.primary.light1, __self: this, __source: { fileName: _jsxFileName, lineNumber: 125, columnNumber: 101 } },\n    ___EmotionJSX(Icons.CursorTarget, { css: /*#__PURE__*/_css({ fill: theme.colors.primary.light1 }, process.env.NODE_ENV === \"production\" ? \"\" : \";label:content;\", process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"), iconSize: \"xl\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 126, columnNumber: 19 } }),\n    t('Applied Cross Filters (%d)', appliedCrossFilterIndicators.length)), __self: this, __source: { fileName: _jsxFileName, lineNumber: 125, columnNumber: 51 } },\n\n  ___EmotionJSX(Indent, { css: /*#__PURE__*/_css({ paddingBottom: theme.gridUnit * 3 }, process.env.NODE_ENV === \"production\" ? \"\" : \";label:content;\", process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"), __self: this, __source: { fileName: _jsxFileName, lineNumber: 129, columnNumber: 15 } },\n  _mapInstanceProperty(appliedCrossFilterIndicators).call(appliedCrossFilterIndicators, (indicator) => ___EmotionJSX(FilterIndicator, { key: indicatorKey(indicator), indicator: indicator, onClick: onHighlightFilterSource, __self: this, __source: { fileName: _jsxFileName, lineNumber: 130, columnNumber: 65 } })))) :\n\n  null,\n  appliedIndicators.length ? ___EmotionJSX(Collapse.Panel, { key: \"applied\", header: ___EmotionJSX(Title, { bold: true, color: theme.colors.success.base, __self: this, __source: { fileName: _jsxFileName, lineNumber: 133, columnNumber: 78 } },\n    ___EmotionJSX(CheckCircleFilled, { __self: this, __source: { fileName: _jsxFileName, lineNumber: 134, columnNumber: 19 } }), ' ',\n    t('Applied Filters (%d)', appliedIndicators.length)), __self: this, __source: { fileName: _jsxFileName, lineNumber: 133, columnNumber: 40 } },\n\n  ___EmotionJSX(Indent, { css: /*#__PURE__*/_css({ paddingBottom: theme.gridUnit * 3 }, process.env.NODE_ENV === \"production\" ? \"\" : \";label:content;\", process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9mcmFua2hlL3Byb2plY3RzL3N1cGVyc2V0L3N1cGVyc2V0LWZyb250ZW5kL3NyYy9kYXNoYm9hcmQvY29tcG9uZW50cy9GaWx0ZXJzQmFkZ2UvRGV0YWlsc1BhbmVsL2luZGV4LnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUF3SXNCIiwiZmlsZSI6Ii9Vc2Vycy9mcmFua2hlL3Byb2plY3RzL3N1cGVyc2V0L3N1cGVyc2V0LWZyb250ZW5kL3NyYy9kYXNoYm9hcmQvY29tcG9uZW50cy9GaWx0ZXJzQmFkZ2UvRGV0YWlsc1BhbmVsL2luZGV4LnRzeCIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogTGljZW5zZWQgdG8gdGhlIEFwYWNoZSBTb2Z0d2FyZSBGb3VuZGF0aW9uIChBU0YpIHVuZGVyIG9uZVxuICogb3IgbW9yZSBjb250cmlidXRvciBsaWNlbnNlIGFncmVlbWVudHMuICBTZWUgdGhlIE5PVElDRSBmaWxlXG4gKiBkaXN0cmlidXRlZCB3aXRoIHRoaXMgd29yayBmb3IgYWRkaXRpb25hbCBpbmZvcm1hdGlvblxuICogcmVnYXJkaW5nIGNvcHlyaWdodCBvd25lcnNoaXAuICBUaGUgQVNGIGxpY2Vuc2VzIHRoaXMgZmlsZVxuICogdG8geW91IHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZVxuICogXCJMaWNlbnNlXCIpOyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlXG4gKiB3aXRoIHRoZSBMaWNlbnNlLiAgWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsXG4gKiBzb2Z0d2FyZSBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhblxuICogXCJBUyBJU1wiIEJBU0lTLCBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTllcbiAqIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuICBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZVxuICogc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZCBsaW1pdGF0aW9uc1xuICogdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbmltcG9ydCBSZWFjdCwgeyB1c2VFZmZlY3QsIHVzZVN0YXRlIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgR2xvYmFsLCBjc3MgfSBmcm9tICdAZW1vdGlvbi9yZWFjdCc7XG5pbXBvcnQgeyB0LCB1c2VUaGVtZSB9IGZyb20gJ0BzdXBlcnNldC11aS9jb3JlJztcbmltcG9ydCB7IE1pbnVzQ2lyY2xlRmlsbGVkLCBDaGVja0NpcmNsZUZpbGxlZCwgRXhjbGFtYXRpb25DaXJjbGVGaWxsZWQsIH0gZnJvbSAnQGFudC1kZXNpZ24vaWNvbnMnO1xuaW1wb3J0IFBvcG92ZXIgZnJvbSAnc3JjL2NvbXBvbmVudHMvUG9wb3Zlcic7XG5pbXBvcnQgQ29sbGFwc2UgZnJvbSAnc3JjL2NvbXBvbmVudHMvQ29sbGFwc2UnO1xuaW1wb3J0IEljb25zIGZyb20gJ3NyYy9jb21wb25lbnRzL0ljb25zJztcbmltcG9ydCB7IEluZGVudCwgUGFuZWwsIFJlc2V0LCBUaXRsZSwgfSBmcm9tICdzcmMvZGFzaGJvYXJkL2NvbXBvbmVudHMvRmlsdGVyc0JhZGdlL1N0eWxlcyc7XG5pbXBvcnQgRmlsdGVySW5kaWNhdG9yIGZyb20gJ3NyYy9kYXNoYm9hcmQvY29tcG9uZW50cy9GaWx0ZXJzQmFkZ2UvRmlsdGVySW5kaWNhdG9yJztcbmNvbnN0IERldGFpbHNQYW5lbFBvcG92ZXIgPSAoeyBhcHBsaWVkQ3Jvc3NGaWx0ZXJJbmRpY2F0b3JzID0gW10sIGFwcGxpZWRJbmRpY2F0b3JzID0gW10sIGluY29tcGF0aWJsZUluZGljYXRvcnMgPSBbXSwgdW5zZXRJbmRpY2F0b3JzID0gW10sIG9uSGlnaGxpZ2h0RmlsdGVyU291cmNlLCBjaGlsZHJlbiwgfSkgPT4ge1xuICAgIGNvbnN0IFt2aXNpYmxlLCBzZXRWaXNpYmxlXSA9IHVzZVN0YXRlKGZhbHNlKTtcbiAgICBjb25zdCB0aGVtZSA9IHVzZVRoZW1lKCk7XG4gICAgLy8gd2UgZG9uJ3QgbmVlZCB0byBjbGVhbiB1cCB1c2VFZmZlY3QsIHNldHRpbmcgeyBvbmNlOiB0cnVlIH0gcmVtb3ZlcyB0aGUgZXZlbnQgbGlzdGVuZXIgYWZ0ZXIgaGFuZGxlIGZ1bmN0aW9uIGlzIGNhbGxlZFxuICAgIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgICAgIGlmICh2aXNpYmxlKSB7XG4gICAgICAgICAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigncmVzaXplJywgKCkgPT4gc2V0VmlzaWJsZShmYWxzZSksIHtcbiAgICAgICAgICAgICAgICBvbmNlOiB0cnVlLFxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICB9LCBbdmlzaWJsZV0pO1xuICAgIGNvbnN0IGdldERlZmF1bHRBY3RpdmVQYW5lbCA9ICgpID0+IHtcbiAgICAgICAgY29uc3QgcmVzdWx0ID0gW107XG4gICAgICAgIGlmIChhcHBsaWVkQ3Jvc3NGaWx0ZXJJbmRpY2F0b3JzLmxlbmd0aCkge1xuICAgICAgICAgICAgcmVzdWx0LnB1c2goJ2FwcGxpZWRDcm9zc0ZpbHRlcnMnKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoYXBwbGllZEluZGljYXRvcnMubGVuZ3RoKSB7XG4gICAgICAgICAgICByZXN1bHQucHVzaCgnYXBwbGllZCcpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChpbmNvbXBhdGlibGVJbmRpY2F0b3JzLmxlbmd0aCkge1xuICAgICAgICAgICAgcmVzdWx0LnB1c2goJ2luY29tcGF0aWJsZScpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChyZXN1bHQubGVuZ3RoKSB7XG4gICAgICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBbJ3Vuc2V0J107XG4gICAgfTtcbiAgICBjb25zdCBbYWN0aXZlUGFuZWxzLCBzZXRBY3RpdmVQYW5lbHNdID0gdXNlU3RhdGUoKCkgPT4gW1xuICAgICAgICAuLi5nZXREZWZhdWx0QWN0aXZlUGFuZWwoKSxcbiAgICBdKTtcbiAgICBmdW5jdGlvbiBoYW5kbGVQb3BvdmVyU3RhdHVzKGlzT3Blbikge1xuICAgICAgICBzZXRWaXNpYmxlKGlzT3Blbik7XG4gICAgICAgIC8vIGV2ZXJ5IHRpbWUgdGhlIHBvcG92ZXIgb3BlbnMsIG1ha2Ugc3VyZSB0aGUgbW9zdCByZWxldmFudCBwYW5lbCBpcyBhY3RpdmVcbiAgICAgICAgaWYgKGlzT3Blbikge1xuICAgICAgICAgICAgc2V0QWN0aXZlUGFuZWxzKGdldERlZmF1bHRBY3RpdmVQYW5lbCgpKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBmdW5jdGlvbiBoYW5kbGVBY3RpdmVQYW5lbENoYW5nZShwYW5lbHMpIHtcbiAgICAgICAgLy8gbmVlZCB0byBjb252ZXJ0IHRvIGFuIGFycmF5IHNvIHRoYXQgaGFuZGxlUG9wb3ZlclN0YXR1cyB3aWxsIHdvcmtcbiAgICAgICAgaWYgKHR5cGVvZiBwYW5lbHMgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICBzZXRBY3RpdmVQYW5lbHMoW3BhbmVsc10pO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgc2V0QWN0aXZlUGFuZWxzKHBhbmVscyk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgY29uc3QgaW5kaWNhdG9yS2V5ID0gKGluZGljYXRvcikgPT4gYCR7aW5kaWNhdG9yLmNvbHVtbn0gLSAke2luZGljYXRvci5uYW1lfWA7XG4gICAgY29uc3QgY29udGVudCA9ICg8UGFuZWw+XG4gICAgICA8R2xvYmFsIHN0eWxlcz17Y3NzIGBcbiAgICAgICAgICAuZmlsdGVyU3RhdHVzUG9wb3ZlciB7XG4gICAgICAgICAgICAuYW50LXBvcG92ZXItaW5uZXIge1xuICAgICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke3RoZW1lLmNvbG9ycy5ncmF5c2NhbGUuZGFyazJ9Y2M7XG4gICAgICAgICAgICAgIC5hbnQtcG9wb3Zlci1pbm5lci1jb250ZW50IHtcbiAgICAgICAgICAgICAgICBwYWRkaW5nLXRvcDogMDtcbiAgICAgICAgICAgICAgICBwYWRkaW5nLWJvdHRvbTogMDtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgJi5hbnQtcG9wb3Zlci1wbGFjZW1lbnQtYm90dG9tLFxuICAgICAgICAgICAgJi5hbnQtcG9wb3Zlci1wbGFjZW1lbnQtYm90dG9tTGVmdCxcbiAgICAgICAgICAgICYuYW50LXBvcG92ZXItcGxhY2VtZW50LWJvdHRvbVJpZ2h0IHtcbiAgICAgICAgICAgICAgJiA+IC5hbnQtcG9wb3Zlci1jb250ZW50ID4gLmFudC1wb3BvdmVyLWFycm93IHtcbiAgICAgICAgICAgICAgICBib3JkZXItdG9wLWNvbG9yOiAke3RoZW1lLmNvbG9ycy5ncmF5c2NhbGUuZGFyazJ9Y2M7XG4gICAgICAgICAgICAgICAgYm9yZGVyLWxlZnQtY29sb3I6ICR7dGhlbWUuY29sb3JzLmdyYXlzY2FsZS5kYXJrMn1jYztcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgJi5hbnQtcG9wb3Zlci1wbGFjZW1lbnQtdG9wLFxuICAgICAgICAgICAgJi5hbnQtcG9wb3Zlci1wbGFjZW1lbnQtdG9wTGVmdCxcbiAgICAgICAgICAgICYuYW50LXBvcG92ZXItcGxhY2VtZW50LXRvcFJpZ2h0IHtcbiAgICAgICAgICAgICAgJiA+IC5hbnQtcG9wb3Zlci1jb250ZW50ID4gLmFudC1wb3BvdmVyLWFycm93IHtcbiAgICAgICAgICAgICAgICBib3JkZXItYm90dG9tLWNvbG9yOiAke3RoZW1lLmNvbG9ycy5ncmF5c2NhbGUuZGFyazJ9Y2M7XG4gICAgICAgICAgICAgICAgYm9yZGVyLXJpZ2h0LWNvbG9yOiAke3RoZW1lLmNvbG9ycy5ncmF5c2NhbGUuZGFyazJ9Y2M7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgICYuYW50LXBvcG92ZXItcGxhY2VtZW50LWxlZnQsXG4gICAgICAgICAgICAmLmFudC1wb3BvdmVyLXBsYWNlbWVudC1sZWZ0VG9wLFxuICAgICAgICAgICAgJi5hbnQtcG9wb3Zlci1wbGFjZW1lbnQtbGVmdEJvdHRvbSB7XG4gICAgICAgICAgICAgICYgPiAuYW50LXBvcG92ZXItY29udGVudCA+IC5hbnQtcG9wb3Zlci1hcnJvdyB7XG4gICAgICAgICAgICAgICAgYm9yZGVyLXRvcC1jb2xvcjogJHt0aGVtZS5jb2xvcnMuZ3JheXNjYWxlLmRhcmsyfWNjO1xuICAgICAgICAgICAgICAgIGJvcmRlci1yaWdodC1jb2xvcjogJHt0aGVtZS5jb2xvcnMuZ3JheXNjYWxlLmRhcmsyfWNjO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAmLmFudC1wb3BvdmVyLXBsYWNlbWVudC1yaWdodCxcbiAgICAgICAgICAgICYuYW50LXBvcG92ZXItcGxhY2VtZW50LXJpZ2h0VG9wLFxuICAgICAgICAgICAgJi5hbnQtcG9wb3Zlci1wbGFjZW1lbnQtcmlnaHRCb3R0b20ge1xuICAgICAgICAgICAgICAmID4gLmFudC1wb3BvdmVyLWNvbnRlbnQgPiAuYW50LXBvcG92ZXItYXJyb3cge1xuICAgICAgICAgICAgICAgIGJvcmRlci1ib3R0b20tY29sb3I6ICR7dGhlbWUuY29sb3JzLmdyYXlzY2FsZS5kYXJrMn1jYztcbiAgICAgICAgICAgICAgICBib3JkZXItbGVmdC1jb2xvcjogJHt0aGVtZS5jb2xvcnMuZ3JheXNjYWxlLmRhcmsyfWNjO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAmLmFudC1wb3BvdmVyIHtcbiAgICAgICAgICAgICAgY29sb3I6ICR7dGhlbWUuY29sb3JzLmdyYXlzY2FsZS5saWdodDR9O1xuICAgICAgICAgICAgICB6LWluZGV4OiA5OTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIGB9Lz5cbiAgICAgIDxSZXNldD5cbiAgICAgICAgPENvbGxhcHNlIGdob3N0IGxpZ2h0IGFjdGl2ZUtleT17YWN0aXZlUGFuZWxzfSBvbkNoYW5nZT17aGFuZGxlQWN0aXZlUGFuZWxDaGFuZ2V9PlxuICAgICAgICAgIHthcHBsaWVkQ3Jvc3NGaWx0ZXJJbmRpY2F0b3JzLmxlbmd0aCA/ICg8Q29sbGFwc2UuUGFuZWwga2V5PVwiYXBwbGllZENyb3NzRmlsdGVyc1wiIGhlYWRlcj17PFRpdGxlIGJvbGQgY29sb3I9e3RoZW1lLmNvbG9ycy5wcmltYXJ5LmxpZ2h0MX0+XG4gICAgICAgICAgICAgICAgICA8SWNvbnMuQ3Vyc29yVGFyZ2V0IGNzcz17eyBmaWxsOiB0aGVtZS5jb2xvcnMucHJpbWFyeS5saWdodDEgfX0gaWNvblNpemU9XCJ4bFwiLz5cbiAgICAgICAgICAgICAgICAgIHt0KCdBcHBsaWVkIENyb3NzIEZpbHRlcnMgKCVkKScsIGFwcGxpZWRDcm9zc0ZpbHRlckluZGljYXRvcnMubGVuZ3RoKX1cbiAgICAgICAgICAgICAgICA8L1RpdGxlPn0+XG4gICAgICAgICAgICAgIDxJbmRlbnQgY3NzPXt7IHBhZGRpbmdCb3R0b206IHRoZW1lLmdyaWRVbml0ICogMyB9fT5cbiAgICAgICAgICAgICAgICB7YXBwbGllZENyb3NzRmlsdGVySW5kaWNhdG9ycy5tYXAoaW5kaWNhdG9yID0+ICg8RmlsdGVySW5kaWNhdG9yIGtleT17aW5kaWNhdG9yS2V5KGluZGljYXRvcil9IGluZGljYXRvcj17aW5kaWNhdG9yfSBvbkNsaWNrPXtvbkhpZ2hsaWdodEZpbHRlclNvdXJjZX0vPikpfVxuICAgICAgICAgICAgICA8L0luZGVudD5cbiAgICAgICAgICAgIDwvQ29sbGFwc2UuUGFuZWw+KSA6IG51bGx9XG4gICAgICAgICAge2FwcGxpZWRJbmRpY2F0b3JzLmxlbmd0aCA/ICg8Q29sbGFwc2UuUGFuZWwga2V5PVwiYXBwbGllZFwiIGhlYWRlcj17PFRpdGxlIGJvbGQgY29sb3I9e3RoZW1lLmNvbG9ycy5zdWNjZXNzLmJhc2V9PlxuICAgICAgICAgICAgICAgICAgPENoZWNrQ2lyY2xlRmlsbGVkIC8+eycgJ31cbiAgICAgICAgICAgICAgICAgIHt0KCdBcHBsaWVkIEZpbHRlcnMgKCVkKScsIGFwcGxpZWRJbmRpY2F0b3JzLmxlbmd0aCl9XG4gICAgICAgICAgICAgICAgPC9UaXRsZT59PlxuICAgICAgICAgICAgICA8SW5kZW50IGNzcz17eyBwYWRkaW5nQm90dG9tOiB0aGVtZS5ncmlkVW5pdCAqIDMgfX0+XG4gICAgICAgICAgICAgICAge2FwcGxpZWRJbmRpY2F0b3JzLm1hcChpbmRpY2F0b3IgPT4gKDxGaWx0ZXJJbmRpY2F0b3Iga2V5PXtpbmRpY2F0b3JLZXkoaW5kaWNhdG9yKX0gaW5kaWNhdG9yPXtpbmRpY2F0b3J9IG9uQ2xpY2s9e29uSGlnaGxpZ2h0RmlsdGVyU291cmNlfS8+KSl9XG4gICAgICAgICAgICAgIDwvSW5kZW50PlxuICAgICAgICAgICAgPC9Db2xsYXBzZS5QYW5lbD4pIDogbnVsbH1cbiAgICAgICAgICB7aW5jb21wYXRpYmxlSW5kaWNhdG9ycy5sZW5ndGggPyAoPENvbGxhcHNlLlBhbmVsIGtleT1cImluY29tcGF0aWJsZVwiIGhlYWRlcj17PFRpdGxlIGJvbGQgY29sb3I9e3RoZW1lLmNvbG9ycy5hbGVydC5iYXNlfT5cbiAgICAgICAgICAgICAgICAgIDxFeGNsYW1hdGlvbkNpcmNsZUZpbGxlZCAvPnsnICd9XG4gICAgICAgICAgICAgICAgICB7dCgnSW5jb21wYXRpYmxlIEZpbHRlcnMgKCVkKScsIGluY29tcGF0aWJsZUluZGljYXRvcnMubGVuZ3RoKX1cbiAgICAgICAgICAgICAgICA8L1RpdGxlPn0+XG4gICAgICAgICAgICAgIDxJbmRlbnQgY3NzPXt7IHBhZGRpbmdCb3R0b206IHRoZW1lLmdyaWRVbml0ICogMyB9fT5cbiAgICAgICAgICAgICAgICB7aW5jb21wYXRpYmxlSW5kaWNhdG9ycy5tYXAoaW5kaWNhdG9yID0+ICg8RmlsdGVySW5kaWNhdG9yIGtleT17aW5kaWNhdG9yS2V5KGluZGljYXRvcil9IGluZGljYXRvcj17aW5kaWNhdG9yfSBvbkNsaWNrPXtvbkhpZ2hsaWdodEZpbHRlclNvdXJjZX0vPikpfVxuICAgICAgICAgICAgICA8L0luZGVudD5cbiAgICAgICAgICAgIDwvQ29sbGFwc2UuUGFuZWw+KSA6IG51bGx9XG4gICAgICAgICAge3Vuc2V0SW5kaWNhdG9ycy5sZW5ndGggPyAoPENvbGxhcHNlLlBhbmVsIGtleT1cInVuc2V0XCIgaGVhZGVyPXs8VGl0bGUgYm9sZCBjb2xvcj17dGhlbWUuY29sb3JzLmdyYXlzY2FsZS5saWdodDF9PlxuICAgICAgICAgICAgICAgICAgPE1pbnVzQ2lyY2xlRmlsbGVkIC8+eycgJ31cbiAgICAgICAgICAgICAgICAgIHt0KCdVbnNldCBGaWx0ZXJzICglZCknLCB1bnNldEluZGljYXRvcnMubGVuZ3RoKX1cbiAgICAgICAgICAgICAgICA8L1RpdGxlPn0gZGlzYWJsZWQ9eyF1bnNldEluZGljYXRvcnMubGVuZ3RofT5cbiAgICAgICAgICAgICAgPEluZGVudCBjc3M9e3sgcGFkZGluZ0JvdHRvbTogdGhlbWUuZ3JpZFVuaXQgKiAzIH19PlxuICAgICAgICAgICAgICAgIHt1bnNldEluZGljYXRvcnMubWFwKGluZGljYXRvciA9PiAoPEZpbHRlckluZGljYXRvciBrZXk9e2luZGljYXRvcktleShpbmRpY2F0b3IpfSBpbmRpY2F0b3I9e2luZGljYXRvcn0gb25DbGljaz17b25IaWdobGlnaHRGaWx0ZXJTb3VyY2V9Lz4pKX1cbiAgICAgICAgICAgICAgPC9JbmRlbnQ+XG4gICAgICAgICAgICA8L0NvbGxhcHNlLlBhbmVsPikgOiBudWxsfVxuICAgICAgICA8L0NvbGxhcHNlPlxuICAgICAgPC9SZXNldD5cbiAgICA8L1BhbmVsPik7XG4gICAgcmV0dXJuICg8UG9wb3ZlciBvdmVybGF5Q2xhc3NOYW1lPVwiZmlsdGVyU3RhdHVzUG9wb3ZlclwiIGNvbnRlbnQ9e2NvbnRlbnR9IHZpc2libGU9e3Zpc2libGV9IG9uVmlzaWJsZUNoYW5nZT17aGFuZGxlUG9wb3ZlclN0YXR1c30gcGxhY2VtZW50PVwiYm90dG9tXCIgdHJpZ2dlcj1cImNsaWNrXCI+XG4gICAgICB7Y2hpbGRyZW59XG4gICAgPC9Qb3BvdmVyPik7XG59O1xuZXhwb3J0IGRlZmF1bHQgRGV0YWlsc1BhbmVsUG9wb3ZlcjtcbiJdfQ== */\"), __self: this, __source: { fileName: _jsxFileName, lineNumber: 137, columnNumber: 15 } },\n  _mapInstanceProperty(appliedIndicators).call(appliedIndicators, (indicator) => ___EmotionJSX(FilterIndicator, { key: indicatorKey(indicator), indicator: indicator, onClick: onHighlightFilterSource, __self: this, __source: { fileName: _jsxFileName, lineNumber: 138, columnNumber: 54 } })))) :\n\n  null,\n  incompatibleIndicators.length ? ___EmotionJSX(Collapse.Panel, { key: \"incompatible\", header: ___EmotionJSX(Title, { bold: true, color: theme.colors.alert.base, __self: this, __source: { fileName: _jsxFileName, lineNumber: 141, columnNumber: 88 } },\n    ___EmotionJSX(ExclamationCircleFilled, { __self: this, __source: { fileName: _jsxFileName, lineNumber: 142, columnNumber: 19 } }), ' ',\n    t('Incompatible Filters (%d)', incompatibleIndicators.length)), __self: this, __source: { fileName: _jsxFileName, lineNumber: 141, columnNumber: 45 } },\n\n  ___EmotionJSX(Indent, { css: /*#__PURE__*/_css({ paddingBottom: theme.gridUnit * 3 }, process.env.NODE_ENV === \"production\" ? \"\" : \";label:content;\", process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"), __self: this, __source: { fileName: _jsxFileName, lineNumber: 145, columnNumber: 15 } },\n  _mapInstanceProperty(incompatibleIndicators).call(incompatibleIndicators, (indicator) => ___EmotionJSX(FilterIndicator, { key: indicatorKey(indicator), indicator: indicator, onClick: onHighlightFilterSource, __self: this, __source: { fileName: _jsxFileName, lineNumber: 146, columnNumber: 59 } })))) :\n\n  null,\n  unsetIndicators.length ? ___EmotionJSX(Collapse.Panel, { key: \"unset\", header: ___EmotionJSX(Title, { bold: true, color: theme.colors.grayscale.light1, __self: this, __source: { fileName: _jsxFileName, lineNumber: 149, columnNumber: 74 } },\n    ___EmotionJSX(MinusCircleFilled, { __self: this, __source: { fileName: _jsxFileName, lineNumber: 150, columnNumber: 19 } }), ' ',\n    t('Unset Filters (%d)', unsetIndicators.length)),\n    disabled: !unsetIndicators.length, __self: this, __source: { fileName: _jsxFileName, lineNumber: 149, columnNumber: 38 } },\n  ___EmotionJSX(Indent, { css: /*#__PURE__*/_css({ paddingBottom: theme.gridUnit * 3 }, process.env.NODE_ENV === \"production\" ? \"\" : \";label:content;\", process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"), __self: this, __source: { fileName: _jsxFileName, lineNumber: 153, columnNumber: 15 } },\n  _mapInstanceProperty(unsetIndicators).call(unsetIndicators, (indicator) => ___EmotionJSX(FilterIndicator, { key: indicatorKey(indicator), indicator: indicator, onClick: onHighlightFilterSource, __self: this, __source: { fileName: _jsxFileName, lineNumber: 154, columnNumber: 52 } })))) :\n\n  null)));\n\n\n\n  return ___EmotionJSX(Popover, { overlayClassName: \"filterStatusPopover\", content: content, visible: visible, onVisibleChange: handlePopoverStatus, placement: \"bottom\", trigger: \"click\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 160, columnNumber: 13 } },\n  children);\n\n};__signature__(DetailsPanelPopover, \"useState{[visible, setVisible](false)}\\nuseTheme{theme}\\nuseEffect{}\\nuseState{[activePanels, setActivePanels](() => [\\n        ...getDefaultActivePanel(),\\n    ])}\", () => [useTheme]);const _default =\nDetailsPanelPopover;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(DetailsPanelPopover, \"DetailsPanelPopover\", \"/Users/frankhe/projects/superset/superset-frontend/src/dashboard/components/FiltersBadge/DetailsPanel/index.tsx\");reactHotLoader.register(_default, \"default\", \"/Users/frankhe/projects/superset/superset-frontend/src/dashboard/components/FiltersBadge/DetailsPanel/index.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/Users/frankhe/projects/superset/superset-frontend/src/dashboard/components/FiltersBadge/DetailsPanel/index.tsx"],"names":[],"mappings":"ymBAAA;;;;;;;;;;;;;;;;;AAiBG;AACH,OAAO,KAAP,IAAgB,SAAhB,EAA2B,QAA3B,QAA2C,OAA3C;AACA,SAAS,MAAT,EAAiB,GAAjB,QAA4B,gBAA5B;AACA,SAAS,CAAT,EAAY,QAAZ,QAA4B,mBAA5B;AACA,SACE,iBADF,EAEE,iBAFF,EAGE,uBAHF,QAIO,mBAJP;AAKA,OAAO,OAAP,MAAoB,wBAApB;AACA,OAAO,QAAP,MAAqB,yBAArB;AACA,OAAO,KAAP,MAAkB,sBAAlB;AACA,SACE,MADF,EAEE,KAFF,EAGE,KAHF,EAIE,KAJF,QAKO,8CALP;AAOA,OAAO,eAAP,MAA4B,uDAA5B,C;AAWA,MAAM,mBAAmB,GAAG,CAAC,EAC3B,4BAA4B,GAAG,EADJ,EAE3B,iBAAiB,GAAG,EAFO,EAG3B,sBAAsB,GAAG,EAHE,EAI3B,eAAe,GAAG,EAJS,EAK3B,uBAL2B,EAM3B,QAN2B,EAAD,KAOJ;AACtB,QAAM,CAAC,OAAD,EAAU,UAAV,IAAwB,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,KAAK,GAAG,QAAQ,EAAtB;AAEA;AACA,EAAA,SAAS,CAAC,MAAK;AACb,QAAI,OAAJ,EAAa;AACX,MAAA,MAAM,CAAC,gBAAP,CAAwB,QAAxB,EAAkC,MAAM,UAAU,CAAC,KAAD,CAAlD,EAA2D;AACzD,QAAA,IAAI,EAAE,IADmD,EAA3D;;AAGD;AACF,GANQ,EAMN,CAAC,OAAD,CANM,CAAT;AAQA,QAAM,qBAAqB,GAAG,MAAK;AACjC,UAAM,MAAM,GAAG,EAAf;AACA,QAAI,4BAA4B,CAAC,MAAjC,EAAyC;AACvC,MAAA,MAAM,CAAC,IAAP,CAAY,qBAAZ;AACD;AACD,QAAI,iBAAiB,CAAC,MAAtB,EAA8B;AAC5B,MAAA,MAAM,CAAC,IAAP,CAAY,SAAZ;AACD;AACD,QAAI,sBAAsB,CAAC,MAA3B,EAAmC;AACjC,MAAA,MAAM,CAAC,IAAP,CAAY,cAAZ;AACD;AACD,QAAI,MAAM,CAAC,MAAX,EAAmB;AACjB,aAAO,MAAP;AACD;AACD,WAAO,CAAC,OAAD,CAAP;AACD,GAfD;AAiBA,QAAM,CAAC,YAAD,EAAe,eAAf,IAAkC,QAAQ,CAAW,MAAM;AAC/D,KAAG,qBAAqB,EADuC,CAAjB,CAAhD;;AAIA,WAAS,mBAAT,CAA6B,MAA7B,EAA4C;AAC1C,IAAA,UAAU,CAAC,MAAD,CAAV;AACA;AACA,QAAI,MAAJ,EAAY;AACV,MAAA,eAAe,CAAC,qBAAqB,EAAtB,CAAf;AACD;AACF;AAED,WAAS,uBAAT,CAAiC,MAAjC,EAA0D;AACxD;AACA,QAAI,OAAO,MAAP,KAAkB,QAAtB,EAAgC;AAC9B,MAAA,eAAe,CAAC,CAAC,MAAD,CAAD,CAAf;AACD,KAFD;AAEO;AACL,MAAA,eAAe,CAAC,MAAD,CAAf;AACD;AACF;AAED,QAAM,YAAY,GAAG,CAAC,SAAD,KACnB,GAAG,SAAS,CAAC,MAAM,MAAM,SAAS,CAAC,IAAI,EADzC;AAGA,QAAM,OAAO,GACX,cAAC,KAAD;AACE,gBAAC,MAAD,IACE,MAAM,eAAE,GAAF;;;AAGoB,IAAA,KAAK,CAAC,MAAN,CAAa,SAAb,CAAuB,KAH3C;;;;;;;;;;AAasB,IAAA,KAAK,CAAC,MAAN,CAAa,SAAb,CAAuB,KAb7C;AAcuB,IAAA,KAAK,CAAC,MAAN,CAAa,SAAb,CAAuB,KAd9C;;;;;;;AAqByB,IAAA,KAAK,CAAC,MAAN,CAAa,SAAb,CAAuB,KArBhD;AAsBwB,IAAA,KAAK,CAAC,MAAN,CAAa,SAAb,CAAuB,KAtB/C;;;;;;;AA6BsB,IAAA,KAAK,CAAC,MAAN,CAAa,SAAb,CAAuB,KA7B7C;AA8BwB,IAAA,KAAK,CAAC,MAAN,CAAa,SAAb,CAAuB,KA9B/C;;;;;;;AAqCyB,IAAA,KAAK,CAAC,MAAN,CAAa,SAAb,CAAuB,KArChD;AAsCuB,IAAA,KAAK,CAAC,MAAN,CAAa,SAAb,CAAuB,KAtC9C;;;;AA0CS,IAAA,KAAK,CAAC,MAAN,CAAa,SAAb,CAAuB,MA1ChC,0nWADR,wFADF;;;;;AAkDE,gBAAC,KAAD;AACE,gBAAC,QAAD,IACE,KAAK,MADP,EAEE,KAAK,MAFP,EAGE,SAAS,EAAE,YAHb,EAIE,QAAQ,EAAE,uBAJZ;AAMG,EAAA,4BAA4B,CAAC,MAA7B,GACC,cAAC,QAAD,CAAU,KAAV,IACE,GAAG,EAAC,qBADN,EAEE,MAAM,EACJ,cAAC,KAAD,IAAO,IAAI,MAAX,EAAY,KAAK,EAAE,KAAK,CAAC,MAAN,CAAa,OAAb,CAAqB,MAAxC;AACE,kBAAC,KAAD,CAAO,YAAP,IACE,GAAG,oBAAE,EAAE,IAAI,EAAE,KAAK,CAAC,MAAN,CAAa,OAAb,CAAqB,MAA7B,EAAF,qmWADL,EAEE,QAAQ,EAAC,IAFX,0FADF;AAKG,IAAA,CAAC,CACA,4BADA,EAEA,4BAA4B,CAAC,MAF7B,CALJ,CAHJ;;AAeE,gBAAC,MAAD,IAAQ,GAAG,oBAAE,EAAE,aAAa,EAAE,KAAK,CAAC,QAAN,GAAiB,CAAlC,EAAF,qmWAAX;AACG,uBAAA,4BAA4B,MAA5B,CAAA,4BAA4B,EAAK,CAAA,SAAS,KACzC,cAAC,eAAD,IACE,GAAG,EAAE,YAAY,CAAC,SAAD,CADnB,EAEE,SAAS,EAAE,SAFb,EAGE,OAAO,EAAE,uBAHX,0FAD2B,CAD/B,CAfF,CADD;;AA0BG,MAhCN;AAiCG,EAAA,iBAAiB,CAAC,MAAlB,GACC,cAAC,QAAD,CAAU,KAAV,IACE,GAAG,EAAC,SADN,EAEE,MAAM,EACJ,cAAC,KAAD,IAAO,IAAI,MAAX,EAAY,KAAK,EAAE,KAAK,CAAC,MAAN,CAAa,OAAb,CAAqB,IAAxC;AACE,kBAAC,iBAAD,4FADF,EACwB,GADxB;AAEG,IAAA,CAAC,CAAC,sBAAD,EAAyB,iBAAiB,CAAC,MAA3C,CAFJ,CAHJ;;AASE,gBAAC,MAAD,IAAQ,GAAG,oBAAE,EAAE,aAAa,EAAE,KAAK,CAAC,QAAN,GAAiB,CAAlC,EAAF,qmWAAX;AACG,uBAAA,iBAAiB,MAAjB,CAAA,iBAAiB,EAAK,CAAA,SAAS,KAC9B,cAAC,eAAD,IACE,GAAG,EAAE,YAAY,CAAC,SAAD,CADnB,EAEE,SAAS,EAAE,SAFb,EAGE,OAAO,EAAE,uBAHX,0FADgB,CADpB,CATF,CADD;;AAoBG,MArDN;AAsDG,EAAA,sBAAsB,CAAC,MAAvB,GACC,cAAC,QAAD,CAAU,KAAV,IACE,GAAG,EAAC,cADN,EAEE,MAAM,EACJ,cAAC,KAAD,IAAO,IAAI,MAAX,EAAY,KAAK,EAAE,KAAK,CAAC,MAAN,CAAa,KAAb,CAAmB,IAAtC;AACE,kBAAC,uBAAD,4FADF,EAC8B,GAD9B;AAEG,IAAA,CAAC,CACA,2BADA,EAEA,sBAAsB,CAAC,MAFvB,CAFJ,CAHJ;;AAYE,gBAAC,MAAD,IAAQ,GAAG,oBAAE,EAAE,aAAa,EAAE,KAAK,CAAC,QAAN,GAAiB,CAAlC,EAAF,qmWAAX;AACG,uBAAA,sBAAsB,MAAtB,CAAA,sBAAsB,EAAK,CAAA,SAAS,KACnC,cAAC,eAAD,IACE,GAAG,EAAE,YAAY,CAAC,SAAD,CADnB,EAEE,SAAS,EAAE,SAFb,EAGE,OAAO,EAAE,uBAHX,0FADqB,CADzB,CAZF,CADD;;AAuBG,MA7EN;AA8EG,EAAA,eAAe,CAAC,MAAhB,GACC,cAAC,QAAD,CAAU,KAAV,IACE,GAAG,EAAC,OADN,EAEE,MAAM,EACJ,cAAC,KAAD,IAAO,IAAI,MAAX,EAAY,KAAK,EAAE,KAAK,CAAC,MAAN,CAAa,SAAb,CAAuB,MAA1C;AACE,kBAAC,iBAAD,4FADF,EACwB,GADxB;AAEG,IAAA,CAAC,CAAC,oBAAD,EAAuB,eAAe,CAAC,MAAvC,CAFJ,CAHJ;AAQE,IAAA,QAAQ,EAAE,CAAC,eAAe,CAAC,MAR7B;AAUE,gBAAC,MAAD,IAAQ,GAAG,oBAAE,EAAE,aAAa,EAAE,KAAK,CAAC,QAAN,GAAiB,CAAlC,EAAF,qmWAAX;AACG,uBAAA,eAAe,MAAf,CAAA,eAAe,EAAK,CAAA,SAAS,KAC5B,cAAC,eAAD,IACE,GAAG,EAAE,YAAY,CAAC,SAAD,CADnB,EAEE,SAAS,EAAE,SAFb,EAGE,OAAO,EAAE,uBAHX,0FADc,CADlB,CAVF,CADD;;AAqBG,MAnGN,CADF,CAlDF,CADF;;;;AA6JA,SACE,cAAC,OAAD,IACE,gBAAgB,EAAC,qBADnB,EAEE,OAAO,EAAE,OAFX,EAGE,OAAO,EAAE,OAHX,EAIE,eAAe,EAAE,mBAJnB,EAKE,SAAS,EAAC,QALZ,EAME,OAAO,EAAC,OANV;AAQG,EAAA,QARH,CADF;;AAYD,CAtOD,C,cAAM,mB,iLASU,Q;AA+ND,mB,CAAf,wB,iLAxOM,mB","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useEffect, useState } from 'react';\nimport { Global, css } from '@emotion/react';\nimport { t, useTheme } from '@superset-ui/core';\nimport {\n  MinusCircleFilled,\n  CheckCircleFilled,\n  ExclamationCircleFilled,\n} from '@ant-design/icons';\nimport Popover from 'src/components/Popover';\nimport Collapse from 'src/components/Collapse';\nimport Icons from 'src/components/Icons';\nimport {\n  Indent,\n  Panel,\n  Reset,\n  Title,\n} from 'src/dashboard/components/FiltersBadge/Styles';\nimport { Indicator } from 'src/dashboard/components/FiltersBadge/selectors';\nimport FilterIndicator from 'src/dashboard/components/FiltersBadge/FilterIndicator';\n\nexport interface DetailsPanelProps {\n  appliedCrossFilterIndicators: Indicator[];\n  appliedIndicators: Indicator[];\n  incompatibleIndicators: Indicator[];\n  unsetIndicators: Indicator[];\n  onHighlightFilterSource: (path: string[]) => void;\n  children: JSX.Element;\n}\n\nconst DetailsPanelPopover = ({\n  appliedCrossFilterIndicators = [],\n  appliedIndicators = [],\n  incompatibleIndicators = [],\n  unsetIndicators = [],\n  onHighlightFilterSource,\n  children,\n}: DetailsPanelProps) => {\n  const [visible, setVisible] = useState(false);\n  const theme = useTheme();\n\n  // we don't need to clean up useEffect, setting { once: true } removes the event listener after handle function is called\n  useEffect(() => {\n    if (visible) {\n      window.addEventListener('resize', () => setVisible(false), {\n        once: true,\n      });\n    }\n  }, [visible]);\n\n  const getDefaultActivePanel = () => {\n    const result = [];\n    if (appliedCrossFilterIndicators.length) {\n      result.push('appliedCrossFilters');\n    }\n    if (appliedIndicators.length) {\n      result.push('applied');\n    }\n    if (incompatibleIndicators.length) {\n      result.push('incompatible');\n    }\n    if (result.length) {\n      return result;\n    }\n    return ['unset'];\n  };\n\n  const [activePanels, setActivePanels] = useState<string[]>(() => [\n    ...getDefaultActivePanel(),\n  ]);\n\n  function handlePopoverStatus(isOpen: boolean) {\n    setVisible(isOpen);\n    // every time the popover opens, make sure the most relevant panel is active\n    if (isOpen) {\n      setActivePanels(getDefaultActivePanel());\n    }\n  }\n\n  function handleActivePanelChange(panels: string | string[]) {\n    // need to convert to an array so that handlePopoverStatus will work\n    if (typeof panels === 'string') {\n      setActivePanels([panels]);\n    } else {\n      setActivePanels(panels);\n    }\n  }\n\n  const indicatorKey = (indicator: Indicator): string =>\n    `${indicator.column} - ${indicator.name}`;\n\n  const content = (\n    <Panel>\n      <Global\n        styles={css`\n          .filterStatusPopover {\n            .ant-popover-inner {\n              background-color: ${theme.colors.grayscale.dark2}cc;\n              .ant-popover-inner-content {\n                padding-top: 0;\n                padding-bottom: 0;\n              }\n            }\n            &.ant-popover-placement-bottom,\n            &.ant-popover-placement-bottomLeft,\n            &.ant-popover-placement-bottomRight {\n              & > .ant-popover-content > .ant-popover-arrow {\n                border-top-color: ${theme.colors.grayscale.dark2}cc;\n                border-left-color: ${theme.colors.grayscale.dark2}cc;\n              }\n            }\n            &.ant-popover-placement-top,\n            &.ant-popover-placement-topLeft,\n            &.ant-popover-placement-topRight {\n              & > .ant-popover-content > .ant-popover-arrow {\n                border-bottom-color: ${theme.colors.grayscale.dark2}cc;\n                border-right-color: ${theme.colors.grayscale.dark2}cc;\n              }\n            }\n            &.ant-popover-placement-left,\n            &.ant-popover-placement-leftTop,\n            &.ant-popover-placement-leftBottom {\n              & > .ant-popover-content > .ant-popover-arrow {\n                border-top-color: ${theme.colors.grayscale.dark2}cc;\n                border-right-color: ${theme.colors.grayscale.dark2}cc;\n              }\n            }\n            &.ant-popover-placement-right,\n            &.ant-popover-placement-rightTop,\n            &.ant-popover-placement-rightBottom {\n              & > .ant-popover-content > .ant-popover-arrow {\n                border-bottom-color: ${theme.colors.grayscale.dark2}cc;\n                border-left-color: ${theme.colors.grayscale.dark2}cc;\n              }\n            }\n            &.ant-popover {\n              color: ${theme.colors.grayscale.light4};\n              z-index: 99;\n            }\n          }\n        `}\n      />\n      <Reset>\n        <Collapse\n          ghost\n          light\n          activeKey={activePanels}\n          onChange={handleActivePanelChange}\n        >\n          {appliedCrossFilterIndicators.length ? (\n            <Collapse.Panel\n              key=\"appliedCrossFilters\"\n              header={\n                <Title bold color={theme.colors.primary.light1}>\n                  <Icons.CursorTarget\n                    css={{ fill: theme.colors.primary.light1 }}\n                    iconSize=\"xl\"\n                  />\n                  {t(\n                    'Applied Cross Filters (%d)',\n                    appliedCrossFilterIndicators.length,\n                  )}\n                </Title>\n              }\n            >\n              <Indent css={{ paddingBottom: theme.gridUnit * 3 }}>\n                {appliedCrossFilterIndicators.map(indicator => (\n                  <FilterIndicator\n                    key={indicatorKey(indicator)}\n                    indicator={indicator}\n                    onClick={onHighlightFilterSource}\n                  />\n                ))}\n              </Indent>\n            </Collapse.Panel>\n          ) : null}\n          {appliedIndicators.length ? (\n            <Collapse.Panel\n              key=\"applied\"\n              header={\n                <Title bold color={theme.colors.success.base}>\n                  <CheckCircleFilled />{' '}\n                  {t('Applied Filters (%d)', appliedIndicators.length)}\n                </Title>\n              }\n            >\n              <Indent css={{ paddingBottom: theme.gridUnit * 3 }}>\n                {appliedIndicators.map(indicator => (\n                  <FilterIndicator\n                    key={indicatorKey(indicator)}\n                    indicator={indicator}\n                    onClick={onHighlightFilterSource}\n                  />\n                ))}\n              </Indent>\n            </Collapse.Panel>\n          ) : null}\n          {incompatibleIndicators.length ? (\n            <Collapse.Panel\n              key=\"incompatible\"\n              header={\n                <Title bold color={theme.colors.alert.base}>\n                  <ExclamationCircleFilled />{' '}\n                  {t(\n                    'Incompatible Filters (%d)',\n                    incompatibleIndicators.length,\n                  )}\n                </Title>\n              }\n            >\n              <Indent css={{ paddingBottom: theme.gridUnit * 3 }}>\n                {incompatibleIndicators.map(indicator => (\n                  <FilterIndicator\n                    key={indicatorKey(indicator)}\n                    indicator={indicator}\n                    onClick={onHighlightFilterSource}\n                  />\n                ))}\n              </Indent>\n            </Collapse.Panel>\n          ) : null}\n          {unsetIndicators.length ? (\n            <Collapse.Panel\n              key=\"unset\"\n              header={\n                <Title bold color={theme.colors.grayscale.light1}>\n                  <MinusCircleFilled />{' '}\n                  {t('Unset Filters (%d)', unsetIndicators.length)}\n                </Title>\n              }\n              disabled={!unsetIndicators.length}\n            >\n              <Indent css={{ paddingBottom: theme.gridUnit * 3 }}>\n                {unsetIndicators.map(indicator => (\n                  <FilterIndicator\n                    key={indicatorKey(indicator)}\n                    indicator={indicator}\n                    onClick={onHighlightFilterSource}\n                  />\n                ))}\n              </Indent>\n            </Collapse.Panel>\n          ) : null}\n        </Collapse>\n      </Reset>\n    </Panel>\n  );\n\n  return (\n    <Popover\n      overlayClassName=\"filterStatusPopover\"\n      content={content}\n      visible={visible}\n      onVisibleChange={handlePopoverStatus}\n      placement=\"bottom\"\n      trigger=\"click\"\n    >\n      {children}\n    </Popover>\n  );\n};\n\nexport default DetailsPanelPopover;\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}