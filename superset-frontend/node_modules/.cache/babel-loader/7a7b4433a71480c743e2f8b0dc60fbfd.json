{"ast":null,"code":"import \"core-js/modules/web.dom-collections.iterator.js\";import _includesInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/includes\";var _jsxFileName = \"/Users/frankhe/projects/superset/superset-frontend/src/components/ErrorMessage/ErrorAlert.tsx\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState } from 'react';\nimport { styled, supersetTheme, t } from '@superset-ui/core';\nimport { noOp } from 'src/utils/common';\nimport Modal from 'src/components/Modal';\nimport Button from 'src/components/Button';\nimport Icons from 'src/components/Icons';\nimport CopyToClipboard from '../CopyToClipboard';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst ErrorAlertDiv = styled.div`\n  align-items: center;\n  background-color: ${({ level, theme }) => theme.colors[level].light2};\n  border-radius: ${({ theme }) => theme.borderRadius}px;\n  border: 1px solid ${({ level, theme }) => theme.colors[level].base};\n  color: ${({ level, theme }) => theme.colors[level].dark2};\n  padding: ${({ theme }) => 2 * theme.gridUnit}px;\n  width: 100%;\n\n  .top-row {\n    display: flex;\n    justify-content: space-between;\n  }\n\n  .error-body {\n    padding-top: ${({ theme }) => theme.gridUnit}px;\n    padding-left: ${({ theme }) => 8 * theme.gridUnit}px;\n  }\n\n  .icon {\n    margin-right: ${({ theme }) => 2 * theme.gridUnit}px;\n  }\n\n  .link {\n    color: ${({ level, theme }) => theme.colors[level].dark2};\n    text-decoration: underline;\n  }\n`;\nconst ErrorModal = styled(Modal)`\n  color: ${({ level, theme }) => theme.colors[level].dark2};\n  overflow-wrap: break-word;\n\n  .ant-modal-header {\n    background-color: ${({ level, theme }) => theme.colors[level].light2};\n    padding: ${({ theme }) => 4 * theme.gridUnit}px;\n  }\n\n  .icon {\n    margin-right: ${({ theme }) => 2 * theme.gridUnit}px;\n  }\n\n  .header {\n    display: flex;\n    align-items: center;\n    font-size: ${({ theme }) => theme.typography.sizes.l}px;\n  }\n`;\nconst LeftSideContent = styled.div`\n  align-items: center;\n  display: flex;\n`;\nexport default function ErrorAlert({ body, copyText, level, source = 'dashboard', subtitle, title }) {var _context;\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [isBodyExpanded, setIsBodyExpanded] = useState(false);\n  const isExpandable = _includesInstanceProperty(_context = ['explore', 'sqllab']).call(_context, source);\n  return ___EmotionJSX(ErrorAlertDiv, { level: level, role: \"alert\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 81, columnNumber: 13 } },\n  ___EmotionJSX(\"div\", { className: \"top-row\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 82, columnNumber: 7 } },\n  ___EmotionJSX(LeftSideContent, { __self: this, __source: { fileName: _jsxFileName, lineNumber: 83, columnNumber: 9 } },\n  level === 'error' ? ___EmotionJSX(Icons.ErrorSolid, { className: \"icon\", iconColor: supersetTheme.colors[level].base, __self: this, __source: { fileName: _jsxFileName, lineNumber: 84, columnNumber: 33 } }) : ___EmotionJSX(Icons.WarningSolid, { className: \"icon\", iconColor: supersetTheme.colors[level].base, __self: this, __source: { fileName: _jsxFileName, lineNumber: 84, columnNumber: 119 } }),\n  ___EmotionJSX(\"strong\", { __self: this, __source: { fileName: _jsxFileName, lineNumber: 85, columnNumber: 11 } }, title)),\n\n  !isExpandable && ___EmotionJSX(\"span\", { role: \"button\", tabIndex: 0, className: \"link\", onClick: () => setIsModalOpen(true), __self: this, __source: { fileName: _jsxFileName, lineNumber: 87, columnNumber: 28 } },\n  t('See more'))),\n\n\n  isExpandable ? ___EmotionJSX(\"div\", { className: \"error-body\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 91, columnNumber: 24 } },\n  ___EmotionJSX(\"p\", { __self: this, __source: { fileName: _jsxFileName, lineNumber: 92, columnNumber: 11 } }, subtitle),\n  body && ___EmotionJSX(React.Fragment, null,\n  !isBodyExpanded && ___EmotionJSX(\"span\", { role: \"button\", tabIndex: 0, className: \"link\", onClick: () => setIsBodyExpanded(true), __self: this, __source: { fileName: _jsxFileName, lineNumber: 94, columnNumber: 36 } },\n  t('See more')),\n\n  isBodyExpanded && ___EmotionJSX(React.Fragment, null,\n  ___EmotionJSX(\"br\", { __self: this, __source: { fileName: _jsxFileName, lineNumber: 98, columnNumber: 19 } }),\n  body,\n  ___EmotionJSX(\"span\", { role: \"button\", tabIndex: 0, className: \"link\", onClick: () => setIsBodyExpanded(false), __self: this, __source: { fileName: _jsxFileName, lineNumber: 100, columnNumber: 19 } },\n  t('See less'))))) :\n\n\n\n  ___EmotionJSX(ErrorModal, { level: level, show: isModalOpen, onHide: () => setIsModalOpen(false), title: ___EmotionJSX(\"div\", { className: \"header\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 105, columnNumber: 109 } },\n    level === 'error' ? ___EmotionJSX(Icons.ErrorSolid, { className: \"icon\", iconColor: supersetTheme.colors[level].base, __self: this, __source: { fileName: _jsxFileName, lineNumber: 106, columnNumber: 37 } }) : ___EmotionJSX(Icons.WarningSolid, { className: \"icon\", iconColor: supersetTheme.colors[level].base, __self: this, __source: { fileName: _jsxFileName, lineNumber: 106, columnNumber: 123 } }),\n    ___EmotionJSX(\"div\", { className: \"title\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 107, columnNumber: 15 } }, title)),\n    footer: ___EmotionJSX(React.Fragment, null,\n    copyText && ___EmotionJSX(CopyToClipboard, { text: copyText, shouldShowText: false, wrapped: false, copyNode: ___EmotionJSX(Button, { onClick: noOp, __self: this, __source: { fileName: _jsxFileName, lineNumber: 109, columnNumber: 111 } }, t('Copy message')), __self: this, __source: { fileName: _jsxFileName, lineNumber: 109, columnNumber: 29 } }),\n    ___EmotionJSX(Button, { cta: true, buttonStyle: \"primary\", onClick: () => setIsModalOpen(false), __self: this, __source: { fileName: _jsxFileName, lineNumber: 110, columnNumber: 15 } },\n    t('Close'))), __self: this, __source: { fileName: _jsxFileName, lineNumber: 105, columnNumber: 20 } },\n\n\n  ___EmotionJSX(React.Fragment, null,\n  ___EmotionJSX(\"p\", { __self: this, __source: { fileName: _jsxFileName, lineNumber: 115, columnNumber: 13 } }, subtitle),\n  ___EmotionJSX(\"br\", { __self: this, __source: { fileName: _jsxFileName, lineNumber: 116, columnNumber: 13 } }),\n  body)));\n\n\n\n}__signature__(ErrorAlert, \"useState{[isModalOpen, setIsModalOpen](false)}\\nuseState{[isBodyExpanded, setIsBodyExpanded](false)}\");;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(ErrorAlertDiv, \"ErrorAlertDiv\", \"/Users/frankhe/projects/superset/superset-frontend/src/components/ErrorMessage/ErrorAlert.tsx\");reactHotLoader.register(ErrorModal, \"ErrorModal\", \"/Users/frankhe/projects/superset/superset-frontend/src/components/ErrorMessage/ErrorAlert.tsx\");reactHotLoader.register(LeftSideContent, \"LeftSideContent\", \"/Users/frankhe/projects/superset/superset-frontend/src/components/ErrorMessage/ErrorAlert.tsx\");reactHotLoader.register(ErrorAlert, \"ErrorAlert\", \"/Users/frankhe/projects/superset/superset-frontend/src/components/ErrorMessage/ErrorAlert.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/Users/frankhe/projects/superset/superset-frontend/src/components/ErrorMessage/ErrorAlert.tsx"],"names":[],"mappings":"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","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState, ReactNode } from 'react';\nimport { styled, supersetTheme, t } from '@superset-ui/core';\nimport { noOp } from 'src/utils/common';\nimport Modal from 'src/components/Modal';\nimport Button from 'src/components/Button';\n\nimport Icons from 'src/components/Icons';\nimport { ErrorLevel, ErrorSource } from './types';\nimport CopyToClipboard from '../CopyToClipboard';\n\nconst ErrorAlertDiv = styled.div<{ level: ErrorLevel }>`\n  align-items: center;\n  background-color: ${({ level, theme }) => theme.colors[level].light2};\n  border-radius: ${({ theme }) => theme.borderRadius}px;\n  border: 1px solid ${({ level, theme }) => theme.colors[level].base};\n  color: ${({ level, theme }) => theme.colors[level].dark2};\n  padding: ${({ theme }) => 2 * theme.gridUnit}px;\n  width: 100%;\n\n  .top-row {\n    display: flex;\n    justify-content: space-between;\n  }\n\n  .error-body {\n    padding-top: ${({ theme }) => theme.gridUnit}px;\n    padding-left: ${({ theme }) => 8 * theme.gridUnit}px;\n  }\n\n  .icon {\n    margin-right: ${({ theme }) => 2 * theme.gridUnit}px;\n  }\n\n  .link {\n    color: ${({ level, theme }) => theme.colors[level].dark2};\n    text-decoration: underline;\n  }\n`;\n\nconst ErrorModal = styled(Modal)<{ level: ErrorLevel }>`\n  color: ${({ level, theme }) => theme.colors[level].dark2};\n  overflow-wrap: break-word;\n\n  .ant-modal-header {\n    background-color: ${({ level, theme }) => theme.colors[level].light2};\n    padding: ${({ theme }) => 4 * theme.gridUnit}px;\n  }\n\n  .icon {\n    margin-right: ${({ theme }) => 2 * theme.gridUnit}px;\n  }\n\n  .header {\n    display: flex;\n    align-items: center;\n    font-size: ${({ theme }) => theme.typography.sizes.l}px;\n  }\n`;\n\nconst LeftSideContent = styled.div`\n  align-items: center;\n  display: flex;\n`;\n\ninterface ErrorAlertProps {\n  body: ReactNode;\n  copyText?: string;\n  level: ErrorLevel;\n  source?: ErrorSource;\n  subtitle: ReactNode;\n  title: ReactNode;\n}\n\nexport default function ErrorAlert({\n  body,\n  copyText,\n  level,\n  source = 'dashboard',\n  subtitle,\n  title,\n}: ErrorAlertProps) {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [isBodyExpanded, setIsBodyExpanded] = useState(false);\n\n  const isExpandable = ['explore', 'sqllab'].includes(source);\n\n  return (\n    <ErrorAlertDiv level={level} role=\"alert\">\n      <div className=\"top-row\">\n        <LeftSideContent>\n          {level === 'error' ? (\n            <Icons.ErrorSolid\n              className=\"icon\"\n              iconColor={supersetTheme.colors[level].base}\n            />\n          ) : (\n            <Icons.WarningSolid\n              className=\"icon\"\n              iconColor={supersetTheme.colors[level].base}\n            />\n          )}\n          <strong>{title}</strong>\n        </LeftSideContent>\n        {!isExpandable && (\n          <span\n            role=\"button\"\n            tabIndex={0}\n            className=\"link\"\n            onClick={() => setIsModalOpen(true)}\n          >\n            {t('See more')}\n          </span>\n        )}\n      </div>\n      {isExpandable ? (\n        <div className=\"error-body\">\n          <p>{subtitle}</p>\n          {body && (\n            <>\n              {!isBodyExpanded && (\n                <span\n                  role=\"button\"\n                  tabIndex={0}\n                  className=\"link\"\n                  onClick={() => setIsBodyExpanded(true)}\n                >\n                  {t('See more')}\n                </span>\n              )}\n              {isBodyExpanded && (\n                <>\n                  <br />\n                  {body}\n                  <span\n                    role=\"button\"\n                    tabIndex={0}\n                    className=\"link\"\n                    onClick={() => setIsBodyExpanded(false)}\n                  >\n                    {t('See less')}\n                  </span>\n                </>\n              )}\n            </>\n          )}\n        </div>\n      ) : (\n        <ErrorModal\n          level={level}\n          show={isModalOpen}\n          onHide={() => setIsModalOpen(false)}\n          title={\n            <div className=\"header\">\n              {level === 'error' ? (\n                <Icons.ErrorSolid\n                  className=\"icon\"\n                  iconColor={supersetTheme.colors[level].base}\n                />\n              ) : (\n                <Icons.WarningSolid\n                  className=\"icon\"\n                  iconColor={supersetTheme.colors[level].base}\n                />\n              )}\n              <div className=\"title\">{title}</div>\n            </div>\n          }\n          footer={\n            <>\n              {copyText && (\n                <CopyToClipboard\n                  text={copyText}\n                  shouldShowText={false}\n                  wrapped={false}\n                  copyNode={<Button onClick={noOp}>{t('Copy message')}</Button>}\n                />\n              )}\n              <Button\n                cta\n                buttonStyle=\"primary\"\n                onClick={() => setIsModalOpen(false)}\n              >\n                {t('Close')}\n              </Button>\n            </>\n          }\n        >\n          <>\n            <p>{subtitle}</p>\n            <br />\n            {body}\n          </>\n        </ErrorModal>\n      )}\n    </ErrorAlertDiv>\n  );\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}