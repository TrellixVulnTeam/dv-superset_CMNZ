{"ast":null,"code":"import _Promise from \"@babel/runtime-corejs3/core-js-stable/promise\";import _includesInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/includes\";var _jsxFileName = \"/Users/frankhe/projects/superset/superset-frontend/src/explore/components/controls/ConditionalFormattingControl/FormattingPopoverContent.tsx\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useCallback, useMemo } from 'react';\nimport { styled, t } from '@superset-ui/core';\nimport { Form, FormItem } from 'src/components/Form';\nimport { Select } from 'src/components';\nimport { Col, InputNumber, Row } from 'src/common/components';\nimport Button from 'src/components/Button';\nimport { COMPARATOR, MULTIPLE_VALUE_COMPARATORS } from './types';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst FullWidthInputNumber = styled(InputNumber)`\n  width: 100%;\n`;\nconst JustifyEnd = styled.div`\n  display: flex;\n  justify-content: flex-end;\n`;\nconst colorSchemeOptions = [\n{ value: 'rgb(0,255,0)', label: t('green') },\n{ value: 'rgb(255,255,0)', label: t('yellow') },\n{ value: 'rgb(255,0,0)', label: t('red') }];\n\nconst operatorOptions = [\n{ value: COMPARATOR.GREATER_THAN, label: '>' },\n{ value: COMPARATOR.LESS_THAN, label: '<' },\n{ value: COMPARATOR.GREATER_OR_EQUAL, label: '≥' },\n{ value: COMPARATOR.LESS_OR_EQUAL, label: '≤' },\n{ value: COMPARATOR.EQUAL, label: '=' },\n{ value: COMPARATOR.NOT_EQUAL, label: '≠' },\n{ value: COMPARATOR.BETWEEN, label: '< x <' },\n{ value: COMPARATOR.BETWEEN_OR_EQUAL, label: '≤ x ≤' },\n{ value: COMPARATOR.BETWEEN_OR_LEFT_EQUAL, label: '≤ x <' },\n{ value: COMPARATOR.BETWEEN_OR_RIGHT_EQUAL, label: '< x ≤' }];\n\nexport const FormattingPopoverContent = ({ config, onChange, columns = [] }) => {var _columns$;\n  const isOperatorMultiValue = (operator) => operator && _includesInstanceProperty(MULTIPLE_VALUE_COMPARATORS).call(MULTIPLE_VALUE_COMPARATORS, operator);\n  const operatorField = useMemo(() => ___EmotionJSX(FormItem, { name: \"operator\", label: t('Operator'), rules: [{ required: true, message: t('Required') }], initialValue: operatorOptions[0].value, __self: this, __source: { fileName: _jsxFileName, lineNumber: 52, columnNumber: 42 } },\n  ___EmotionJSX(Select, { ariaLabel: t('Operator'), options: operatorOptions, __self: this, __source: { fileName: _jsxFileName, lineNumber: 53, columnNumber: 9 } })),\n  []);\n  const targetValueLeftValidator = useCallback((rightValue) => (_, value) => {\n    if (!value || !rightValue || rightValue > value) {\n      return _Promise.resolve();\n    }\n    return _Promise.reject(new Error(t('This value should be smaller than the right target value')));\n  }, []);\n  const targetValueRightValidator = useCallback((leftValue) => (_, value) => {\n    if (!value || !leftValue || leftValue < value) {\n      return _Promise.resolve();\n    }\n    return _Promise.reject(new Error(t('This value should be greater than the left target value')));\n  }, []);\n  return ___EmotionJSX(Form, { onFinish: onChange, initialValues: config, requiredMark: \"optional\", layout: \"vertical\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 67, columnNumber: 13 } },\n  ___EmotionJSX(Row, { gutter: 12, __self: this, __source: { fileName: _jsxFileName, lineNumber: 68, columnNumber: 7 } },\n  ___EmotionJSX(Col, { span: 12, __self: this, __source: { fileName: _jsxFileName, lineNumber: 69, columnNumber: 9 } },\n  ___EmotionJSX(FormItem, { name: \"column\", label: t('Column'), rules: [{ required: true, message: t('Required') }], initialValue: (_columns$ = columns[0]) == null ? void 0 : _columns$.value, __self: this, __source: { fileName: _jsxFileName, lineNumber: 70, columnNumber: 11 } },\n  ___EmotionJSX(Select, { ariaLabel: t('Select column'), options: columns, __self: this, __source: { fileName: _jsxFileName, lineNumber: 71, columnNumber: 13 } }))),\n\n\n  ___EmotionJSX(Col, { span: 12, __self: this, __source: { fileName: _jsxFileName, lineNumber: 74, columnNumber: 9 } },\n  ___EmotionJSX(FormItem, { name: \"colorScheme\", label: t('Color scheme'), rules: [{ required: true, message: t('Required') }], initialValue: colorSchemeOptions[0].value, __self: this, __source: { fileName: _jsxFileName, lineNumber: 75, columnNumber: 11 } },\n  ___EmotionJSX(Select, { ariaLabel: t('Color scheme'), options: colorSchemeOptions, __self: this, __source: { fileName: _jsxFileName, lineNumber: 76, columnNumber: 13 } })))),\n\n\n\n  ___EmotionJSX(FormItem, { noStyle: true, shouldUpdate: (prevValues, currentValues) => isOperatorMultiValue(prevValues.operator) !==\n    isOperatorMultiValue(currentValues.operator), __self: this, __source: { fileName: _jsxFileName, lineNumber: 80, columnNumber: 7 } },\n  ({ getFieldValue }) => isOperatorMultiValue(getFieldValue('operator')) ? ___EmotionJSX(Row, { gutter: 12, __self: this, __source: { fileName: _jsxFileName, lineNumber: 82, columnNumber: 84 } },\n  ___EmotionJSX(Col, { span: 9, __self: this, __source: { fileName: _jsxFileName, lineNumber: 83, columnNumber: 15 } },\n  ___EmotionJSX(FormItem, { name: \"targetValueLeft\", label: t('Left value'), rules: [\n    { required: true, message: t('Required') },\n    ({ getFieldValue }) => ({\n      validator: targetValueLeftValidator(getFieldValue('targetValueRight')) })],\n\n    dependencies: ['targetValueRight'], validateTrigger: \"onBlur\", trigger: \"onBlur\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 84, columnNumber: 17 } },\n  ___EmotionJSX(FullWidthInputNumber, { __self: this, __source: { fileName: _jsxFileName, lineNumber: 90, columnNumber: 19 } }))),\n\n\n  ___EmotionJSX(Col, { span: 6, __self: this, __source: { fileName: _jsxFileName, lineNumber: 93, columnNumber: 15 } }, operatorField),\n  ___EmotionJSX(Col, { span: 9, __self: this, __source: { fileName: _jsxFileName, lineNumber: 94, columnNumber: 15 } },\n  ___EmotionJSX(FormItem, { name: \"targetValueRight\", label: t('Right value'), rules: [\n    { required: true, message: t('Required') },\n    ({ getFieldValue }) => ({\n      validator: targetValueRightValidator(getFieldValue('targetValueLeft')) })],\n\n    dependencies: ['targetValueLeft'], validateTrigger: \"onBlur\", trigger: \"onBlur\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 95, columnNumber: 17 } },\n  ___EmotionJSX(FullWidthInputNumber, { __self: this, __source: { fileName: _jsxFileName, lineNumber: 101, columnNumber: 19 } })))) :\n\n\n  ___EmotionJSX(Row, { gutter: 12, __self: this, __source: { fileName: _jsxFileName, lineNumber: 104, columnNumber: 24 } },\n  ___EmotionJSX(Col, { span: 6, __self: this, __source: { fileName: _jsxFileName, lineNumber: 105, columnNumber: 15 } }, operatorField),\n  ___EmotionJSX(Col, { span: 18, __self: this, __source: { fileName: _jsxFileName, lineNumber: 106, columnNumber: 15 } },\n  ___EmotionJSX(FormItem, { name: \"targetValue\", label: t('Target value'), rules: [{ required: true, message: t('Required') }], __self: this, __source: { fileName: _jsxFileName, lineNumber: 107, columnNumber: 17 } },\n  ___EmotionJSX(FullWidthInputNumber, { __self: this, __source: { fileName: _jsxFileName, lineNumber: 108, columnNumber: 19 } }))))),\n\n\n\n\n  ___EmotionJSX(FormItem, { __self: this, __source: { fileName: _jsxFileName, lineNumber: 113, columnNumber: 7 } },\n  ___EmotionJSX(JustifyEnd, { __self: this, __source: { fileName: _jsxFileName, lineNumber: 114, columnNumber: 9 } },\n  ___EmotionJSX(Button, { htmlType: \"submit\", buttonStyle: \"primary\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 115, columnNumber: 11 } },\n  t('Apply')))));\n\n\n\n\n};__signature__(FormattingPopoverContent, \"useMemo{operatorField}\\nuseCallback{targetValueLeftValidator}\\nuseCallback{targetValueRightValidator}\");;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(FullWidthInputNumber, \"FullWidthInputNumber\", \"/Users/frankhe/projects/superset/superset-frontend/src/explore/components/controls/ConditionalFormattingControl/FormattingPopoverContent.tsx\");reactHotLoader.register(JustifyEnd, \"JustifyEnd\", \"/Users/frankhe/projects/superset/superset-frontend/src/explore/components/controls/ConditionalFormattingControl/FormattingPopoverContent.tsx\");reactHotLoader.register(colorSchemeOptions, \"colorSchemeOptions\", \"/Users/frankhe/projects/superset/superset-frontend/src/explore/components/controls/ConditionalFormattingControl/FormattingPopoverContent.tsx\");reactHotLoader.register(operatorOptions, \"operatorOptions\", \"/Users/frankhe/projects/superset/superset-frontend/src/explore/components/controls/ConditionalFormattingControl/FormattingPopoverContent.tsx\");reactHotLoader.register(FormattingPopoverContent, \"FormattingPopoverContent\", \"/Users/frankhe/projects/superset/superset-frontend/src/explore/components/controls/ConditionalFormattingControl/FormattingPopoverContent.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/Users/frankhe/projects/superset/superset-frontend/src/explore/components/controls/ConditionalFormattingControl/FormattingPopoverContent.tsx"],"names":[],"mappings":"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","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useCallback, useMemo } from 'react';\nimport { styled, t } from '@superset-ui/core';\nimport { Form, FormItem } from 'src/components/Form';\nimport { Select } from 'src/components';\nimport { Col, InputNumber, Row } from 'src/common/components';\nimport Button from 'src/components/Button';\nimport {\n  COMPARATOR,\n  ConditionalFormattingConfig,\n  MULTIPLE_VALUE_COMPARATORS,\n} from './types';\n\nconst FullWidthInputNumber = styled(InputNumber)`\n  width: 100%;\n`;\n\nconst JustifyEnd = styled.div`\n  display: flex;\n  justify-content: flex-end;\n`;\n\nconst colorSchemeOptions = [\n  { value: 'rgb(0,255,0)', label: t('green') },\n  { value: 'rgb(255,255,0)', label: t('yellow') },\n  { value: 'rgb(255,0,0)', label: t('red') },\n];\n\nconst operatorOptions = [\n  { value: COMPARATOR.GREATER_THAN, label: '>' },\n  { value: COMPARATOR.LESS_THAN, label: '<' },\n  { value: COMPARATOR.GREATER_OR_EQUAL, label: '≥' },\n  { value: COMPARATOR.LESS_OR_EQUAL, label: '≤' },\n  { value: COMPARATOR.EQUAL, label: '=' },\n  { value: COMPARATOR.NOT_EQUAL, label: '≠' },\n  { value: COMPARATOR.BETWEEN, label: '< x <' },\n  { value: COMPARATOR.BETWEEN_OR_EQUAL, label: '≤ x ≤' },\n  { value: COMPARATOR.BETWEEN_OR_LEFT_EQUAL, label: '≤ x <' },\n  { value: COMPARATOR.BETWEEN_OR_RIGHT_EQUAL, label: '< x ≤' },\n];\n\nexport const FormattingPopoverContent = ({\n  config,\n  onChange,\n  columns = [],\n}: {\n  config?: ConditionalFormattingConfig;\n  onChange: (config: ConditionalFormattingConfig) => void;\n  columns: { label: string; value: string }[];\n}) => {\n  const isOperatorMultiValue = (operator?: COMPARATOR) =>\n    operator && MULTIPLE_VALUE_COMPARATORS.includes(operator);\n\n  const operatorField = useMemo(\n    () => (\n      <FormItem\n        name=\"operator\"\n        label={t('Operator')}\n        rules={[{ required: true, message: t('Required') }]}\n        initialValue={operatorOptions[0].value}\n      >\n        <Select ariaLabel={t('Operator')} options={operatorOptions} />\n      </FormItem>\n    ),\n    [],\n  );\n\n  const targetValueLeftValidator = useCallback(\n    (rightValue?: number) => (_: any, value?: number) => {\n      if (!value || !rightValue || rightValue > value) {\n        return Promise.resolve();\n      }\n      return Promise.reject(\n        new Error(\n          t('This value should be smaller than the right target value'),\n        ),\n      );\n    },\n    [],\n  );\n\n  const targetValueRightValidator = useCallback(\n    (leftValue?: number) => (_: any, value?: number) => {\n      if (!value || !leftValue || leftValue < value) {\n        return Promise.resolve();\n      }\n      return Promise.reject(\n        new Error(t('This value should be greater than the left target value')),\n      );\n    },\n    [],\n  );\n\n  return (\n    <Form\n      onFinish={onChange}\n      initialValues={config}\n      requiredMark=\"optional\"\n      layout=\"vertical\"\n    >\n      <Row gutter={12}>\n        <Col span={12}>\n          <FormItem\n            name=\"column\"\n            label={t('Column')}\n            rules={[{ required: true, message: t('Required') }]}\n            initialValue={columns[0]?.value}\n          >\n            <Select ariaLabel={t('Select column')} options={columns} />\n          </FormItem>\n        </Col>\n        <Col span={12}>\n          <FormItem\n            name=\"colorScheme\"\n            label={t('Color scheme')}\n            rules={[{ required: true, message: t('Required') }]}\n            initialValue={colorSchemeOptions[0].value}\n          >\n            <Select\n              ariaLabel={t('Color scheme')}\n              options={colorSchemeOptions}\n            />\n          </FormItem>\n        </Col>\n      </Row>\n      <FormItem\n        noStyle\n        shouldUpdate={(\n          prevValues: ConditionalFormattingConfig,\n          currentValues: ConditionalFormattingConfig,\n        ) =>\n          isOperatorMultiValue(prevValues.operator) !==\n          isOperatorMultiValue(currentValues.operator)\n        }\n      >\n        {({ getFieldValue }) =>\n          isOperatorMultiValue(getFieldValue('operator')) ? (\n            <Row gutter={12}>\n              <Col span={9}>\n                <FormItem\n                  name=\"targetValueLeft\"\n                  label={t('Left value')}\n                  rules={[\n                    { required: true, message: t('Required') },\n                    ({ getFieldValue }) => ({\n                      validator: targetValueLeftValidator(\n                        getFieldValue('targetValueRight'),\n                      ),\n                    }),\n                  ]}\n                  dependencies={['targetValueRight']}\n                  validateTrigger=\"onBlur\"\n                  trigger=\"onBlur\"\n                >\n                  <FullWidthInputNumber />\n                </FormItem>\n              </Col>\n              <Col span={6}>{operatorField}</Col>\n              <Col span={9}>\n                <FormItem\n                  name=\"targetValueRight\"\n                  label={t('Right value')}\n                  rules={[\n                    { required: true, message: t('Required') },\n                    ({ getFieldValue }) => ({\n                      validator: targetValueRightValidator(\n                        getFieldValue('targetValueLeft'),\n                      ),\n                    }),\n                  ]}\n                  dependencies={['targetValueLeft']}\n                  validateTrigger=\"onBlur\"\n                  trigger=\"onBlur\"\n                >\n                  <FullWidthInputNumber />\n                </FormItem>\n              </Col>\n            </Row>\n          ) : (\n            <Row gutter={12}>\n              <Col span={6}>{operatorField}</Col>\n              <Col span={18}>\n                <FormItem\n                  name=\"targetValue\"\n                  label={t('Target value')}\n                  rules={[{ required: true, message: t('Required') }]}\n                >\n                  <FullWidthInputNumber />\n                </FormItem>\n              </Col>\n            </Row>\n          )\n        }\n      </FormItem>\n      <FormItem>\n        <JustifyEnd>\n          <Button htmlType=\"submit\" buttonStyle=\"primary\">\n            {t('Apply')}\n          </Button>\n        </JustifyEnd>\n      </FormItem>\n    </Form>\n  );\n};\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}