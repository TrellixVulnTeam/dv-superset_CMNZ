{"ast":null,"code":"import \"core-js/modules/web.dom-collections.iterator.js\";import _Promise from \"@babel/runtime-corejs3/core-js-stable/promise\";import _setTimeout from \"@babel/runtime-corejs3/core-js-stable/set-timeout\";import _findInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/find\";import _reduceInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/reduce\";import _sliceInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/slice\";import _Object$values from \"@babel/runtime-corejs3/core-js-stable/object/values\";import _forEachInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/for-each\";import _JSON$stringify from \"@babel/runtime-corejs3/core-js-stable/json/stringify\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint camelcase: 0 */\nimport { ActionCreators as UndoActionCreators } from 'redux-undo';\nimport { t, SupersetClient } from '@superset-ui/core';\n\nimport { addChart, removeChart, refreshChart } from '../../chart/chartAction';\nimport { chart as initChart } from '../../chart/chartReducer';\nimport { fetchDatasourceMetadata } from './datasources';\nimport {\naddFilter,\nremoveFilter,\nupdateDirectPathToFilter } from\n'./dashboardFilters';\nimport { applyDefaultFormData } from '../../explore/store';\nimport { getClientErrorObject } from '../../utils/getClientErrorObject';\nimport { SAVE_TYPE_OVERWRITE } from '../util/constants';\nimport {\naddSuccessToast,\naddWarningToast,\naddDangerToast } from\n'../../messageToasts/actions';\nimport { UPDATE_COMPONENTS_PARENTS_LIST } from './dashboardLayout';\nimport serializeActiveFilterValues from '../util/serializeActiveFilterValues';\nimport serializeFilterScopes from '../util/serializeFilterScopes';\nimport { getActiveFilters } from '../util/activeDashboardFilters';\nimport { safeStringify } from '../../utils/safeStringify';\nimport { FeatureFlag, isFeatureEnabled } from '../../featureFlags';\nimport { setChartConfiguration } from './dashboardInfo';\n\nexport const SET_UNSAVED_CHANGES = 'SET_UNSAVED_CHANGES';\nexport function setUnsavedChanges(hasUnsavedChanges) {\n  return { type: SET_UNSAVED_CHANGES, payload: { hasUnsavedChanges } };\n}\n\nexport const ADD_SLICE = 'ADD_SLICE';\nexport function addSlice(slice) {\n  return { type: ADD_SLICE, slice };\n}\n\nexport const REMOVE_SLICE = 'REMOVE_SLICE';\nexport function removeSlice(sliceId) {\n  return { type: REMOVE_SLICE, sliceId };\n}\n\nconst FAVESTAR_BASE_URL = '/superset/favstar/Dashboard';\nexport const TOGGLE_FAVE_STAR = 'TOGGLE_FAVE_STAR';\nexport function toggleFaveStar(isStarred) {\n  return { type: TOGGLE_FAVE_STAR, isStarred };\n}\n\nexport const FETCH_FAVE_STAR = 'FETCH_FAVE_STAR';\nexport function fetchFaveStar(id) {\n  return function fetchFaveStarThunk(dispatch) {\n    return SupersetClient.get({\n      endpoint: `${FAVESTAR_BASE_URL}/${id}/count/` }).\n\n    then(({ json }) => {\n      if (json.count > 0) dispatch(toggleFaveStar(true));\n    }).\n    catch(() =>\n    dispatch(\n    addDangerToast(\n    t(\n    'There was an issue fetching the favorite status of this dashboard.'))));\n\n\n\n\n  };\n}\n\nexport const SAVE_FAVE_STAR = 'SAVE_FAVE_STAR';\nexport function saveFaveStar(id, isStarred) {\n  return function saveFaveStarThunk(dispatch) {\n    const urlSuffix = isStarred ? 'unselect' : 'select';\n    return SupersetClient.get({\n      endpoint: `${FAVESTAR_BASE_URL}/${id}/${urlSuffix}/` }).\n\n    then(() => {\n      dispatch(toggleFaveStar(!isStarred));\n    }).\n    catch(() =>\n    dispatch(\n    addDangerToast(t('There was an issue favoriting this dashboard.'))));\n\n\n  };\n}\n\nexport const TOGGLE_PUBLISHED = 'TOGGLE_PUBLISHED';\nexport function togglePublished(isPublished) {\n  return { type: TOGGLE_PUBLISHED, isPublished };\n}\n\nexport function savePublished(id, isPublished) {\n  return function savePublishedThunk(dispatch) {\n    return SupersetClient.put({\n      endpoint: `/api/v1/dashboard/${id}`,\n      headers: { 'Content-Type': 'application/json' },\n      body: _JSON$stringify({\n        published: isPublished }) }).\n\n\n    then(() => {\n      const nowPublished = isPublished ? 'published' : 'hidden';\n      dispatch(addSuccessToast(t(`This dashboard is now ${nowPublished}`)));\n      dispatch(togglePublished(isPublished));\n    }).\n    catch(() => {\n      dispatch(\n      addDangerToast(\n      t('You do not have permissions to edit this dashboard.')));\n\n\n    });\n  };\n}\n\nexport const TOGGLE_EXPAND_SLICE = 'TOGGLE_EXPAND_SLICE';\nexport function toggleExpandSlice(sliceId) {\n  return { type: TOGGLE_EXPAND_SLICE, sliceId };\n}\n\nexport const UPDATE_CSS = 'UPDATE_CSS';\nexport function updateCss(css) {\n  return { type: UPDATE_CSS, css };\n}\n\nexport const SET_EDIT_MODE = 'SET_EDIT_MODE';\nexport function setEditMode(editMode) {\n  return { type: SET_EDIT_MODE, editMode };\n}\n\nexport const ON_CHANGE = 'ON_CHANGE';\nexport function onChange() {\n  return { type: ON_CHANGE };\n}\n\nexport const ON_SAVE = 'ON_SAVE';\nexport function onSave(lastModifiedTime) {\n  return { type: ON_SAVE, lastModifiedTime };\n}\n\nexport const SET_REFRESH_FREQUENCY = 'SET_REFRESH_FREQUENCY';\nexport function setRefreshFrequency(refreshFrequency, isPersistent = false) {\n  return { type: SET_REFRESH_FREQUENCY, refreshFrequency, isPersistent };\n}\n\nexport function saveDashboardRequestSuccess(lastModifiedTime) {\n  return (dispatch) => {\n    dispatch(onSave(lastModifiedTime));\n    // clear layout undo history\n    dispatch(UndoActionCreators.clearHistory());\n  };\n}\n\nexport function saveDashboardRequest(data, id, saveType) {\n  const path = saveType === SAVE_TYPE_OVERWRITE ? 'save_dash' : 'copy_dash';\n\n  return (dispatch, getState) => {var _context;\n    dispatch({ type: UPDATE_COMPONENTS_PARENTS_LIST });\n\n    const { dashboardFilters, dashboardLayout } = getState();\n    const layout = dashboardLayout.present;\n    _forEachInstanceProperty(_context = _Object$values(dashboardFilters)).call(_context, (filter) => {var _context2, _context3, _layout$componentId;\n      const { chartId } = filter;\n      const componentId = _sliceInstanceProperty(_context2 = filter.directPathToFilter).call(_context2).pop();\n      const directPathToFilter = _sliceInstanceProperty(_context3 = ((_layout$componentId = layout[componentId]) == null ? void 0 : _layout$componentId.parents) || []).call(_context3);\n      directPathToFilter.push(componentId);\n      dispatch(updateDirectPathToFilter(chartId, directPathToFilter));\n    });\n    // serialize selected values for each filter field, grouped by filter id\n    const serializedFilters = serializeActiveFilterValues(getActiveFilters());\n    // serialize filter scope for each filter field, grouped by filter id\n    const serializedFilterScopes = serializeFilterScopes(dashboardFilters);\n    return SupersetClient.post({\n      endpoint: `/superset/${path}/${id}/`,\n      postPayload: {\n        data: {\n          ...data,\n          default_filters: safeStringify(serializedFilters),\n          filter_scopes: safeStringify(serializedFilterScopes) } } }).\n\n\n\n    then((response) => {\n      if (isFeatureEnabled(FeatureFlag.DASHBOARD_CROSS_FILTERS)) {var _context4;\n        const {\n          dashboardInfo: {\n            metadata: { chart_configuration = {} } } } =\n\n        getState();\n        const chartConfiguration = _reduceInstanceProperty(_context4 = _Object$values(chart_configuration)).call(_context4,\n        (prev, next) => {var _context5;\n          // If chart removed from dashboard - remove it from metadata\n          if (\n          _findInstanceProperty(_context5 = _Object$values(layout)).call(_context5,\n          (layoutItem) => {var _layoutItem$meta;return (layoutItem == null ? void 0 : (_layoutItem$meta = layoutItem.meta) == null ? void 0 : _layoutItem$meta.chartId) === next.id;}))\n\n          {\n            return { ...prev, [next.id]: next };\n          }\n          return prev;\n        },\n        {});\n\n        dispatch(setChartConfiguration(chartConfiguration));\n      }\n      dispatch(saveDashboardRequestSuccess(response.json.last_modified_time));\n      dispatch(addSuccessToast(t('This dashboard was saved successfully.')));\n      return response;\n    }).\n    catch((response) =>\n    getClientErrorObject(response).then(({ error }) =>\n    dispatch(\n    addDangerToast(\n    `${t(\n    'Sorry, there was an error saving this dashboard: ')\n    } ${error}`))));\n\n\n\n\n  };\n}\n\nexport function fetchCharts(\nchartList = [],\nforce = false,\ninterval = 0,\ndashboardId)\n{\n  return (dispatch, getState) => {\n    if (!interval) {\n      _forEachInstanceProperty(chartList).call(chartList, (chartKey) =>\n      dispatch(refreshChart(chartKey, force, dashboardId)));\n\n      return;\n    }\n\n    const { metadata: meta } = getState().dashboardInfo;\n    const refreshTime = Math.max(interval, meta.stagger_time || 5000); // default 5 seconds\n    if (typeof meta.stagger_refresh !== 'boolean') {\n      meta.stagger_refresh =\n      meta.stagger_refresh === undefined ?\n      true :\n      meta.stagger_refresh === 'true';\n    }\n    const delay = meta.stagger_refresh ?\n    refreshTime / (chartList.length - 1) :\n    0;\n    _forEachInstanceProperty(chartList).call(chartList, (chartKey, i) => {\n      _setTimeout(\n      () => dispatch(refreshChart(chartKey, force, dashboardId)),\n      delay * i);\n\n    });\n  };\n}\n\nconst refreshCharts = (chartList, force, interval, dashboardId, dispatch) =>\nnew _Promise((resolve) => {\n  dispatch(fetchCharts(chartList, force, interval, dashboardId));\n  resolve();\n});\n\nexport const ON_REFRESH_SUCCESS = 'ON_REFRESH_SUCCESS';\nexport function onRefreshSuccess() {\n  return { type: ON_REFRESH_SUCCESS };\n}\n\nexport const ON_REFRESH = 'ON_REFRESH';\nexport function onRefresh(\nchartList = [],\nforce = false,\ninterval = 0,\ndashboardId)\n{\n  return (dispatch) => {\n    dispatch({ type: ON_REFRESH });\n    refreshCharts(chartList, force, interval, dashboardId, dispatch).then(() =>\n    dispatch({ type: ON_REFRESH_SUCCESS }));\n\n  };\n}\n\nexport const SHOW_BUILDER_PANE = 'SHOW_BUILDER_PANE';\nexport function showBuilderPane() {\n  return { type: SHOW_BUILDER_PANE };\n}\n\nexport function addSliceToDashboard(id, component) {\n  return (dispatch, getState) => {\n    const { sliceEntities } = getState();\n    const selectedSlice = sliceEntities.slices[id];\n    if (!selectedSlice) {\n      return dispatch(\n      addWarningToast(\n      'Sorry, there is no chart definition associated with the chart trying to be added.'));\n\n\n    }\n    const form_data = {\n      ...selectedSlice.form_data,\n      slice_id: selectedSlice.slice_id };\n\n    const newChart = {\n      ...initChart,\n      id,\n      form_data,\n      formData: applyDefaultFormData(form_data) };\n\n\n    return _Promise.all([\n    dispatch(addChart(newChart, id)),\n    dispatch(fetchDatasourceMetadata(form_data.datasource))]).\n    then(() => {\n      dispatch(addSlice(selectedSlice));\n\n      if (selectedSlice && selectedSlice.viz_type === 'filter_box') {\n        dispatch(addFilter(id, component, selectedSlice.form_data));\n      }\n    });\n  };\n}\n\nexport function removeSliceFromDashboard(id) {\n  return (dispatch, getState) => {\n    const sliceEntity = getState().sliceEntities.slices[id];\n    if (sliceEntity && sliceEntity.viz_type === 'filter_box') {\n      dispatch(removeFilter(id));\n    }\n\n    dispatch(removeSlice(id));\n    dispatch(removeChart(id));\n  };\n}\n\nexport const SET_COLOR_SCHEME = 'SET_COLOR_SCHEME';\nexport function setColorScheme(colorScheme) {\n  return { type: SET_COLOR_SCHEME, colorScheme };\n}\n\nexport function setColorSchemeAndUnsavedChanges(colorScheme) {\n  return (dispatch) => {\n    dispatch(setColorScheme(colorScheme));\n    dispatch(setUnsavedChanges(true));\n  };\n}\n\nexport const SET_DIRECT_PATH = 'SET_DIRECT_PATH';\nexport function setDirectPathToChild(path) {\n  return { type: SET_DIRECT_PATH, path };\n}\n\nexport const SET_ACTIVE_TABS = 'SET_ACTIVE_TABS';\nexport function setActiveTabs(tabIds) {\n  return { type: SET_ACTIVE_TABS, tabIds };\n}\n\nexport const SET_FOCUSED_FILTER_FIELD = 'SET_FOCUSED_FILTER_FIELD';\nexport function setFocusedFilterField(chartId, column) {\n  return { type: SET_FOCUSED_FILTER_FIELD, chartId, column };\n}\n\nexport const UNSET_FOCUSED_FILTER_FIELD = 'UNSET_FOCUSED_FILTER_FIELD';\nexport function unsetFocusedFilterField(chartId, column) {\n  return { type: UNSET_FOCUSED_FILTER_FIELD, chartId, column };\n}\n\nexport const SET_FULL_SIZE_CHART_ID = 'SET_FULL_SIZE_CHART_ID';\nexport function setFullSizeChartId(chartId) {\n  return { type: SET_FULL_SIZE_CHART_ID, chartId };\n}\n\n// Undo history ---------------------------------------------------------------\nexport const SET_MAX_UNDO_HISTORY_EXCEEDED = 'SET_MAX_UNDO_HISTORY_EXCEEDED';\nexport function setMaxUndoHistoryExceeded(maxUndoHistoryExceeded = true) {\n  return {\n    type: SET_MAX_UNDO_HISTORY_EXCEEDED,\n    payload: { maxUndoHistoryExceeded } };\n\n}\n\nexport function maxUndoHistoryToast() {\n  return (dispatch, getState) => {\n    const { dashboardLayout } = getState();\n    const historyLength = dashboardLayout.past.length;\n\n    return dispatch(\n    addWarningToast(\n    `You have used all ${historyLength} undo slots and will not be able to fully undo subsequent actions. You may save your current state to reset the history.`));\n\n\n  };\n};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(SET_UNSAVED_CHANGES, \"SET_UNSAVED_CHANGES\", \"/Users/frankhe/projects/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(setUnsavedChanges, \"setUnsavedChanges\", \"/Users/frankhe/projects/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(ADD_SLICE, \"ADD_SLICE\", \"/Users/frankhe/projects/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(addSlice, \"addSlice\", \"/Users/frankhe/projects/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(REMOVE_SLICE, \"REMOVE_SLICE\", \"/Users/frankhe/projects/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(removeSlice, \"removeSlice\", \"/Users/frankhe/projects/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(FAVESTAR_BASE_URL, \"FAVESTAR_BASE_URL\", \"/Users/frankhe/projects/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(TOGGLE_FAVE_STAR, \"TOGGLE_FAVE_STAR\", \"/Users/frankhe/projects/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(toggleFaveStar, \"toggleFaveStar\", \"/Users/frankhe/projects/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(FETCH_FAVE_STAR, \"FETCH_FAVE_STAR\", \"/Users/frankhe/projects/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(fetchFaveStar, \"fetchFaveStar\", \"/Users/frankhe/projects/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(SAVE_FAVE_STAR, \"SAVE_FAVE_STAR\", \"/Users/frankhe/projects/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(saveFaveStar, \"saveFaveStar\", \"/Users/frankhe/projects/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(TOGGLE_PUBLISHED, \"TOGGLE_PUBLISHED\", \"/Users/frankhe/projects/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(togglePublished, \"togglePublished\", \"/Users/frankhe/projects/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(savePublished, \"savePublished\", \"/Users/frankhe/projects/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(TOGGLE_EXPAND_SLICE, \"TOGGLE_EXPAND_SLICE\", \"/Users/frankhe/projects/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(toggleExpandSlice, \"toggleExpandSlice\", \"/Users/frankhe/projects/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(UPDATE_CSS, \"UPDATE_CSS\", \"/Users/frankhe/projects/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(updateCss, \"updateCss\", \"/Users/frankhe/projects/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(SET_EDIT_MODE, \"SET_EDIT_MODE\", \"/Users/frankhe/projects/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(setEditMode, \"setEditMode\", \"/Users/frankhe/projects/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(ON_CHANGE, \"ON_CHANGE\", \"/Users/frankhe/projects/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(onChange, \"onChange\", \"/Users/frankhe/projects/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(ON_SAVE, \"ON_SAVE\", \"/Users/frankhe/projects/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(onSave, \"onSave\", \"/Users/frankhe/projects/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(SET_REFRESH_FREQUENCY, \"SET_REFRESH_FREQUENCY\", \"/Users/frankhe/projects/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(setRefreshFrequency, \"setRefreshFrequency\", \"/Users/frankhe/projects/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(saveDashboardRequestSuccess, \"saveDashboardRequestSuccess\", \"/Users/frankhe/projects/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(saveDashboardRequest, \"saveDashboardRequest\", \"/Users/frankhe/projects/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(fetchCharts, \"fetchCharts\", \"/Users/frankhe/projects/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(refreshCharts, \"refreshCharts\", \"/Users/frankhe/projects/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(ON_REFRESH_SUCCESS, \"ON_REFRESH_SUCCESS\", \"/Users/frankhe/projects/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(onRefreshSuccess, \"onRefreshSuccess\", \"/Users/frankhe/projects/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(ON_REFRESH, \"ON_REFRESH\", \"/Users/frankhe/projects/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(onRefresh, \"onRefresh\", \"/Users/frankhe/projects/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(SHOW_BUILDER_PANE, \"SHOW_BUILDER_PANE\", \"/Users/frankhe/projects/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(showBuilderPane, \"showBuilderPane\", \"/Users/frankhe/projects/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(addSliceToDashboard, \"addSliceToDashboard\", \"/Users/frankhe/projects/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(removeSliceFromDashboard, \"removeSliceFromDashboard\", \"/Users/frankhe/projects/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(SET_COLOR_SCHEME, \"SET_COLOR_SCHEME\", \"/Users/frankhe/projects/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(setColorScheme, \"setColorScheme\", \"/Users/frankhe/projects/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(setColorSchemeAndUnsavedChanges, \"setColorSchemeAndUnsavedChanges\", \"/Users/frankhe/projects/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(SET_DIRECT_PATH, \"SET_DIRECT_PATH\", \"/Users/frankhe/projects/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(setDirectPathToChild, \"setDirectPathToChild\", \"/Users/frankhe/projects/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(SET_ACTIVE_TABS, \"SET_ACTIVE_TABS\", \"/Users/frankhe/projects/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(setActiveTabs, \"setActiveTabs\", \"/Users/frankhe/projects/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(SET_FOCUSED_FILTER_FIELD, \"SET_FOCUSED_FILTER_FIELD\", \"/Users/frankhe/projects/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(setFocusedFilterField, \"setFocusedFilterField\", \"/Users/frankhe/projects/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(UNSET_FOCUSED_FILTER_FIELD, \"UNSET_FOCUSED_FILTER_FIELD\", \"/Users/frankhe/projects/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(unsetFocusedFilterField, \"unsetFocusedFilterField\", \"/Users/frankhe/projects/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(SET_FULL_SIZE_CHART_ID, \"SET_FULL_SIZE_CHART_ID\", \"/Users/frankhe/projects/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(setFullSizeChartId, \"setFullSizeChartId\", \"/Users/frankhe/projects/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(SET_MAX_UNDO_HISTORY_EXCEEDED, \"SET_MAX_UNDO_HISTORY_EXCEEDED\", \"/Users/frankhe/projects/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(setMaxUndoHistoryExceeded, \"setMaxUndoHistoryExceeded\", \"/Users/frankhe/projects/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(maxUndoHistoryToast, \"maxUndoHistoryToast\", \"/Users/frankhe/projects/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/Users/frankhe/projects/superset/superset-frontend/src/dashboard/actions/dashboardState.js"],"names":["ActionCreators","UndoActionCreators","t","SupersetClient","addChart","removeChart","refreshChart","chart","initChart","fetchDatasourceMetadata","addFilter","removeFilter","updateDirectPathToFilter","applyDefaultFormData","getClientErrorObject","SAVE_TYPE_OVERWRITE","addSuccessToast","addWarningToast","addDangerToast","UPDATE_COMPONENTS_PARENTS_LIST","serializeActiveFilterValues","serializeFilterScopes","getActiveFilters","safeStringify","FeatureFlag","isFeatureEnabled","setChartConfiguration","SET_UNSAVED_CHANGES","setUnsavedChanges","hasUnsavedChanges","type","payload","ADD_SLICE","addSlice","slice","REMOVE_SLICE","removeSlice","sliceId","FAVESTAR_BASE_URL","TOGGLE_FAVE_STAR","toggleFaveStar","isStarred","FETCH_FAVE_STAR","fetchFaveStar","id","fetchFaveStarThunk","dispatch","get","endpoint","then","json","count","catch","SAVE_FAVE_STAR","saveFaveStar","saveFaveStarThunk","urlSuffix","TOGGLE_PUBLISHED","togglePublished","isPublished","savePublished","savePublishedThunk","put","headers","body","published","nowPublished","TOGGLE_EXPAND_SLICE","toggleExpandSlice","UPDATE_CSS","updateCss","css","SET_EDIT_MODE","setEditMode","editMode","ON_CHANGE","onChange","ON_SAVE","onSave","lastModifiedTime","SET_REFRESH_FREQUENCY","setRefreshFrequency","refreshFrequency","isPersistent","saveDashboardRequestSuccess","clearHistory","saveDashboardRequest","data","saveType","path","getState","dashboardFilters","dashboardLayout","layout","present","filter","chartId","componentId","directPathToFilter","pop","parents","push","serializedFilters","serializedFilterScopes","post","postPayload","default_filters","filter_scopes","response","DASHBOARD_CROSS_FILTERS","dashboardInfo","metadata","chart_configuration","chartConfiguration","prev","next","layoutItem","meta","last_modified_time","error","fetchCharts","chartList","force","interval","dashboardId","chartKey","refreshTime","Math","max","stagger_time","stagger_refresh","undefined","delay","length","i","refreshCharts","resolve","ON_REFRESH_SUCCESS","onRefreshSuccess","ON_REFRESH","onRefresh","SHOW_BUILDER_PANE","showBuilderPane","addSliceToDashboard","component","sliceEntities","selectedSlice","slices","form_data","slice_id","newChart","formData","all","datasource","viz_type","removeSliceFromDashboard","sliceEntity","SET_COLOR_SCHEME","setColorScheme","colorScheme","setColorSchemeAndUnsavedChanges","SET_DIRECT_PATH","setDirectPathToChild","SET_ACTIVE_TABS","setActiveTabs","tabIds","SET_FOCUSED_FILTER_FIELD","setFocusedFilterField","column","UNSET_FOCUSED_FILTER_FIELD","unsetFocusedFilterField","SET_FULL_SIZE_CHART_ID","setFullSizeChartId","SET_MAX_UNDO_HISTORY_EXCEEDED","setMaxUndoHistoryExceeded","maxUndoHistoryExceeded","maxUndoHistoryToast","historyLength","past"],"mappings":"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","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint camelcase: 0 */\nimport { ActionCreators as UndoActionCreators } from 'redux-undo';\nimport { t, SupersetClient } from '@superset-ui/core';\n\nimport { addChart, removeChart, refreshChart } from '../../chart/chartAction';\nimport { chart as initChart } from '../../chart/chartReducer';\nimport { fetchDatasourceMetadata } from './datasources';\nimport {\n  addFilter,\n  removeFilter,\n  updateDirectPathToFilter,\n} from './dashboardFilters';\nimport { applyDefaultFormData } from '../../explore/store';\nimport { getClientErrorObject } from '../../utils/getClientErrorObject';\nimport { SAVE_TYPE_OVERWRITE } from '../util/constants';\nimport {\n  addSuccessToast,\n  addWarningToast,\n  addDangerToast,\n} from '../../messageToasts/actions';\nimport { UPDATE_COMPONENTS_PARENTS_LIST } from './dashboardLayout';\nimport serializeActiveFilterValues from '../util/serializeActiveFilterValues';\nimport serializeFilterScopes from '../util/serializeFilterScopes';\nimport { getActiveFilters } from '../util/activeDashboardFilters';\nimport { safeStringify } from '../../utils/safeStringify';\nimport { FeatureFlag, isFeatureEnabled } from '../../featureFlags';\nimport { setChartConfiguration } from './dashboardInfo';\n\nexport const SET_UNSAVED_CHANGES = 'SET_UNSAVED_CHANGES';\nexport function setUnsavedChanges(hasUnsavedChanges) {\n  return { type: SET_UNSAVED_CHANGES, payload: { hasUnsavedChanges } };\n}\n\nexport const ADD_SLICE = 'ADD_SLICE';\nexport function addSlice(slice) {\n  return { type: ADD_SLICE, slice };\n}\n\nexport const REMOVE_SLICE = 'REMOVE_SLICE';\nexport function removeSlice(sliceId) {\n  return { type: REMOVE_SLICE, sliceId };\n}\n\nconst FAVESTAR_BASE_URL = '/superset/favstar/Dashboard';\nexport const TOGGLE_FAVE_STAR = 'TOGGLE_FAVE_STAR';\nexport function toggleFaveStar(isStarred) {\n  return { type: TOGGLE_FAVE_STAR, isStarred };\n}\n\nexport const FETCH_FAVE_STAR = 'FETCH_FAVE_STAR';\nexport function fetchFaveStar(id) {\n  return function fetchFaveStarThunk(dispatch) {\n    return SupersetClient.get({\n      endpoint: `${FAVESTAR_BASE_URL}/${id}/count/`,\n    })\n      .then(({ json }) => {\n        if (json.count > 0) dispatch(toggleFaveStar(true));\n      })\n      .catch(() =>\n        dispatch(\n          addDangerToast(\n            t(\n              'There was an issue fetching the favorite status of this dashboard.',\n            ),\n          ),\n        ),\n      );\n  };\n}\n\nexport const SAVE_FAVE_STAR = 'SAVE_FAVE_STAR';\nexport function saveFaveStar(id, isStarred) {\n  return function saveFaveStarThunk(dispatch) {\n    const urlSuffix = isStarred ? 'unselect' : 'select';\n    return SupersetClient.get({\n      endpoint: `${FAVESTAR_BASE_URL}/${id}/${urlSuffix}/`,\n    })\n      .then(() => {\n        dispatch(toggleFaveStar(!isStarred));\n      })\n      .catch(() =>\n        dispatch(\n          addDangerToast(t('There was an issue favoriting this dashboard.')),\n        ),\n      );\n  };\n}\n\nexport const TOGGLE_PUBLISHED = 'TOGGLE_PUBLISHED';\nexport function togglePublished(isPublished) {\n  return { type: TOGGLE_PUBLISHED, isPublished };\n}\n\nexport function savePublished(id, isPublished) {\n  return function savePublishedThunk(dispatch) {\n    return SupersetClient.put({\n      endpoint: `/api/v1/dashboard/${id}`,\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        published: isPublished,\n      }),\n    })\n      .then(() => {\n        const nowPublished = isPublished ? 'published' : 'hidden';\n        dispatch(addSuccessToast(t(`This dashboard is now ${nowPublished}`)));\n        dispatch(togglePublished(isPublished));\n      })\n      .catch(() => {\n        dispatch(\n          addDangerToast(\n            t('You do not have permissions to edit this dashboard.'),\n          ),\n        );\n      });\n  };\n}\n\nexport const TOGGLE_EXPAND_SLICE = 'TOGGLE_EXPAND_SLICE';\nexport function toggleExpandSlice(sliceId) {\n  return { type: TOGGLE_EXPAND_SLICE, sliceId };\n}\n\nexport const UPDATE_CSS = 'UPDATE_CSS';\nexport function updateCss(css) {\n  return { type: UPDATE_CSS, css };\n}\n\nexport const SET_EDIT_MODE = 'SET_EDIT_MODE';\nexport function setEditMode(editMode) {\n  return { type: SET_EDIT_MODE, editMode };\n}\n\nexport const ON_CHANGE = 'ON_CHANGE';\nexport function onChange() {\n  return { type: ON_CHANGE };\n}\n\nexport const ON_SAVE = 'ON_SAVE';\nexport function onSave(lastModifiedTime) {\n  return { type: ON_SAVE, lastModifiedTime };\n}\n\nexport const SET_REFRESH_FREQUENCY = 'SET_REFRESH_FREQUENCY';\nexport function setRefreshFrequency(refreshFrequency, isPersistent = false) {\n  return { type: SET_REFRESH_FREQUENCY, refreshFrequency, isPersistent };\n}\n\nexport function saveDashboardRequestSuccess(lastModifiedTime) {\n  return dispatch => {\n    dispatch(onSave(lastModifiedTime));\n    // clear layout undo history\n    dispatch(UndoActionCreators.clearHistory());\n  };\n}\n\nexport function saveDashboardRequest(data, id, saveType) {\n  const path = saveType === SAVE_TYPE_OVERWRITE ? 'save_dash' : 'copy_dash';\n\n  return (dispatch, getState) => {\n    dispatch({ type: UPDATE_COMPONENTS_PARENTS_LIST });\n\n    const { dashboardFilters, dashboardLayout } = getState();\n    const layout = dashboardLayout.present;\n    Object.values(dashboardFilters).forEach(filter => {\n      const { chartId } = filter;\n      const componentId = filter.directPathToFilter.slice().pop();\n      const directPathToFilter = (layout[componentId]?.parents || []).slice();\n      directPathToFilter.push(componentId);\n      dispatch(updateDirectPathToFilter(chartId, directPathToFilter));\n    });\n    // serialize selected values for each filter field, grouped by filter id\n    const serializedFilters = serializeActiveFilterValues(getActiveFilters());\n    // serialize filter scope for each filter field, grouped by filter id\n    const serializedFilterScopes = serializeFilterScopes(dashboardFilters);\n    return SupersetClient.post({\n      endpoint: `/superset/${path}/${id}/`,\n      postPayload: {\n        data: {\n          ...data,\n          default_filters: safeStringify(serializedFilters),\n          filter_scopes: safeStringify(serializedFilterScopes),\n        },\n      },\n    })\n      .then(response => {\n        if (isFeatureEnabled(FeatureFlag.DASHBOARD_CROSS_FILTERS)) {\n          const {\n            dashboardInfo: {\n              metadata: { chart_configuration = {} },\n            },\n          } = getState();\n          const chartConfiguration = Object.values(chart_configuration).reduce(\n            (prev, next) => {\n              // If chart removed from dashboard - remove it from metadata\n              if (\n                Object.values(layout).find(\n                  layoutItem => layoutItem?.meta?.chartId === next.id,\n                )\n              ) {\n                return { ...prev, [next.id]: next };\n              }\n              return prev;\n            },\n            {},\n          );\n          dispatch(setChartConfiguration(chartConfiguration));\n        }\n        dispatch(saveDashboardRequestSuccess(response.json.last_modified_time));\n        dispatch(addSuccessToast(t('This dashboard was saved successfully.')));\n        return response;\n      })\n      .catch(response =>\n        getClientErrorObject(response).then(({ error }) =>\n          dispatch(\n            addDangerToast(\n              `${t(\n                'Sorry, there was an error saving this dashboard: ',\n              )} ${error}`,\n            ),\n          ),\n        ),\n      );\n  };\n}\n\nexport function fetchCharts(\n  chartList = [],\n  force = false,\n  interval = 0,\n  dashboardId,\n) {\n  return (dispatch, getState) => {\n    if (!interval) {\n      chartList.forEach(chartKey =>\n        dispatch(refreshChart(chartKey, force, dashboardId)),\n      );\n      return;\n    }\n\n    const { metadata: meta } = getState().dashboardInfo;\n    const refreshTime = Math.max(interval, meta.stagger_time || 5000); // default 5 seconds\n    if (typeof meta.stagger_refresh !== 'boolean') {\n      meta.stagger_refresh =\n        meta.stagger_refresh === undefined\n          ? true\n          : meta.stagger_refresh === 'true';\n    }\n    const delay = meta.stagger_refresh\n      ? refreshTime / (chartList.length - 1)\n      : 0;\n    chartList.forEach((chartKey, i) => {\n      setTimeout(\n        () => dispatch(refreshChart(chartKey, force, dashboardId)),\n        delay * i,\n      );\n    });\n  };\n}\n\nconst refreshCharts = (chartList, force, interval, dashboardId, dispatch) =>\n  new Promise(resolve => {\n    dispatch(fetchCharts(chartList, force, interval, dashboardId));\n    resolve();\n  });\n\nexport const ON_REFRESH_SUCCESS = 'ON_REFRESH_SUCCESS';\nexport function onRefreshSuccess() {\n  return { type: ON_REFRESH_SUCCESS };\n}\n\nexport const ON_REFRESH = 'ON_REFRESH';\nexport function onRefresh(\n  chartList = [],\n  force = false,\n  interval = 0,\n  dashboardId,\n) {\n  return dispatch => {\n    dispatch({ type: ON_REFRESH });\n    refreshCharts(chartList, force, interval, dashboardId, dispatch).then(() =>\n      dispatch({ type: ON_REFRESH_SUCCESS }),\n    );\n  };\n}\n\nexport const SHOW_BUILDER_PANE = 'SHOW_BUILDER_PANE';\nexport function showBuilderPane() {\n  return { type: SHOW_BUILDER_PANE };\n}\n\nexport function addSliceToDashboard(id, component) {\n  return (dispatch, getState) => {\n    const { sliceEntities } = getState();\n    const selectedSlice = sliceEntities.slices[id];\n    if (!selectedSlice) {\n      return dispatch(\n        addWarningToast(\n          'Sorry, there is no chart definition associated with the chart trying to be added.',\n        ),\n      );\n    }\n    const form_data = {\n      ...selectedSlice.form_data,\n      slice_id: selectedSlice.slice_id,\n    };\n    const newChart = {\n      ...initChart,\n      id,\n      form_data,\n      formData: applyDefaultFormData(form_data),\n    };\n\n    return Promise.all([\n      dispatch(addChart(newChart, id)),\n      dispatch(fetchDatasourceMetadata(form_data.datasource)),\n    ]).then(() => {\n      dispatch(addSlice(selectedSlice));\n\n      if (selectedSlice && selectedSlice.viz_type === 'filter_box') {\n        dispatch(addFilter(id, component, selectedSlice.form_data));\n      }\n    });\n  };\n}\n\nexport function removeSliceFromDashboard(id) {\n  return (dispatch, getState) => {\n    const sliceEntity = getState().sliceEntities.slices[id];\n    if (sliceEntity && sliceEntity.viz_type === 'filter_box') {\n      dispatch(removeFilter(id));\n    }\n\n    dispatch(removeSlice(id));\n    dispatch(removeChart(id));\n  };\n}\n\nexport const SET_COLOR_SCHEME = 'SET_COLOR_SCHEME';\nexport function setColorScheme(colorScheme) {\n  return { type: SET_COLOR_SCHEME, colorScheme };\n}\n\nexport function setColorSchemeAndUnsavedChanges(colorScheme) {\n  return dispatch => {\n    dispatch(setColorScheme(colorScheme));\n    dispatch(setUnsavedChanges(true));\n  };\n}\n\nexport const SET_DIRECT_PATH = 'SET_DIRECT_PATH';\nexport function setDirectPathToChild(path) {\n  return { type: SET_DIRECT_PATH, path };\n}\n\nexport const SET_ACTIVE_TABS = 'SET_ACTIVE_TABS';\nexport function setActiveTabs(tabIds) {\n  return { type: SET_ACTIVE_TABS, tabIds };\n}\n\nexport const SET_FOCUSED_FILTER_FIELD = 'SET_FOCUSED_FILTER_FIELD';\nexport function setFocusedFilterField(chartId, column) {\n  return { type: SET_FOCUSED_FILTER_FIELD, chartId, column };\n}\n\nexport const UNSET_FOCUSED_FILTER_FIELD = 'UNSET_FOCUSED_FILTER_FIELD';\nexport function unsetFocusedFilterField(chartId, column) {\n  return { type: UNSET_FOCUSED_FILTER_FIELD, chartId, column };\n}\n\nexport const SET_FULL_SIZE_CHART_ID = 'SET_FULL_SIZE_CHART_ID';\nexport function setFullSizeChartId(chartId) {\n  return { type: SET_FULL_SIZE_CHART_ID, chartId };\n}\n\n// Undo history ---------------------------------------------------------------\nexport const SET_MAX_UNDO_HISTORY_EXCEEDED = 'SET_MAX_UNDO_HISTORY_EXCEEDED';\nexport function setMaxUndoHistoryExceeded(maxUndoHistoryExceeded = true) {\n  return {\n    type: SET_MAX_UNDO_HISTORY_EXCEEDED,\n    payload: { maxUndoHistoryExceeded },\n  };\n}\n\nexport function maxUndoHistoryToast() {\n  return (dispatch, getState) => {\n    const { dashboardLayout } = getState();\n    const historyLength = dashboardLayout.past.length;\n\n    return dispatch(\n      addWarningToast(\n        `You have used all ${historyLength} undo slots and will not be able to fully undo subsequent actions. You may save your current state to reset the history.`,\n      ),\n    );\n  };\n}\n"]},"metadata":{},"sourceType":"module"}