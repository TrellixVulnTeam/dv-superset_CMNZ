{"ast":null,"code":"import \"core-js/modules/es.promise.finally.js\";import \"core-js/modules/web.dom-collections.iterator.js\";import _extends from \"@babel/runtime-corejs3/helpers/extends\";import _trimInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/trim\";import _filterInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/filter\";import _includesInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/includes\";import _findInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/find\";import _forEachInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/for-each\";import _Map from \"@babel/runtime-corejs3/core-js-stable/map\";import _Array$isArray from \"@babel/runtime-corejs3/core-js-stable/array/is-array\";import _isEqual from \"lodash/isEqual\";var _jsxFileName = \"/Users/frankhe/projects/superset/superset-frontend/src/components/Select/Select.tsx\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useEffect, useMemo, useState, useRef, useCallback } from 'react';\nimport { styled, t } from '@superset-ui/core';\nimport AntdSelect from 'antd/lib/select';\nimport { DownOutlined, SearchOutlined } from '@ant-design/icons';\nimport debounce from 'lodash/debounce';\n\nimport { Spin } from 'antd';\nimport Icons from 'src/components/Icons';\nimport { getClientErrorObject } from 'src/utils/getClientErrorObject';\nimport { hasOption } from './utils';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst StyledContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\nconst StyledSelect = styled(AntdSelect, {\n  shouldForwardProp: (prop) => prop !== 'hasHeader' })\n`\n  ${({ theme, hasHeader }) => `\n    width: 100%;\n    margin-top: ${hasHeader ? theme.gridUnit : 0}px;\n\n    && .ant-select-selector {\n      border-radius: ${theme.gridUnit}px;\n    }\n\n    // Open the dropdown when clicking on the suffix\n    // This is fixed in version 4.16\n    .ant-select-arrow .anticon:not(.ant-select-suffix) {\n      pointer-events: none;\n    }\n  `}\n`;\nconst StyledStopOutlined = styled(Icons.StopOutlined)`\n  vertical-align: 0;\n`;\nconst StyledCheckOutlined = styled(Icons.CheckOutlined)`\n  vertical-align: 0;\n`;\nconst StyledError = styled.div`\n  ${({ theme }) => `\n    display: flex;\n    justify-content: center;\n    align-items: flex-start;\n    width: 100%;\n    padding: ${theme.gridUnit * 2}px;\n    color: ${theme.colors.error.base};\n\n    & svg {\n      margin-right: ${theme.gridUnit * 2}px;\n    }\n  `}\n`;\nconst StyledSpin = styled(Spin)`\n  margin-top: ${({ theme }) => -theme.gridUnit}px;\n`;\nconst MAX_TAG_COUNT = 4;\nconst TOKEN_SEPARATORS = [',', '\\n', '\\t', ';'];\nconst DEBOUNCE_TIMEOUT = 500;\nconst DEFAULT_PAGE_SIZE = 100;\nconst EMPTY_OPTIONS = [];\nconst Error = ({ error }) => ___EmotionJSX(StyledError, { __self: this, __source: { fileName: _jsxFileName, lineNumber: 79, columnNumber: 31 } },\n___EmotionJSX(Icons.ErrorSolid, { __self: this, __source: { fileName: _jsxFileName, lineNumber: 80, columnNumber: 5 } }), \" \", error);\n\nconst Select = ({ allowNewOptions = false, ariaLabel, fetchOnlyOnSearch, filterOption = true, header = null, invertSelection = false, mode = 'single', name, options, pageSize = DEFAULT_PAGE_SIZE, placeholder = t('Select ...'), showSearch, value, ...props }) => {\n  const isAsync = typeof options === 'function';\n  const isSingleMode = mode === 'single';\n  const shouldShowSearch = isAsync || allowNewOptions ? true : showSearch;\n  const initialOptions = options && _Array$isArray(options) ? options : EMPTY_OPTIONS;\n  const [selectOptions, setSelectOptions] = useState(initialOptions);\n  const [selectValue, setSelectValue] = useState(value);\n  const [searchedValue, setSearchedValue] = useState('');\n  const [isLoading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [isDropdownVisible, setIsDropdownVisible] = useState(false);\n  const [page, setPage] = useState(0);\n  const [totalCount, setTotalCount] = useState(0);\n  const [loadingEnabled, setLoadingEnabled] = useState(false);\n  const fetchedQueries = useRef(new _Map());\n  const mappedMode = isSingleMode ?\n  undefined :\n  allowNewOptions ?\n  'tags' :\n  'multiple';\n  useEffect(() => {\n    setSelectOptions(options && _Array$isArray(options) ? options : EMPTY_OPTIONS);\n  }, [options]);\n  useEffect(() => {\n    if (isAsync && value) {\n      const array = _Array$isArray(value) ?\n      value :\n      [value];\n      const options = [];\n      _forEachInstanceProperty(array).call(array, (element) => {\n        const found = _findInstanceProperty(selectOptions).call(selectOptions, (option) => option.value === element.value);\n        if (!found) {\n          options.push(element);\n        }\n      });\n      if (options.length > 0) {\n        setSelectOptions([...selectOptions, ...options]);\n      }\n    }\n  }, [isAsync, selectOptions, value]);\n  useEffect(() => {\n    setSelectValue(value);\n  }, [value]);\n  const handleTopOptions = useCallback((selectedValue) => {\n    // bringing selected options to the top of the list\n    if (selectedValue) {\n      const topOptions = [];\n      const otherOptions = [];\n      _forEachInstanceProperty(selectOptions).call(selectOptions, (opt) => {\n        let found = false;\n        if (_Array$isArray(selectedValue)) {\n          if (isAsync) {\n            found =\n            _findInstanceProperty(selectedValue).call(selectedValue, (element) => element.value === opt.value) !== undefined;\n          } else\n          {\n            found = _includesInstanceProperty(selectedValue).call(selectedValue, opt.value);\n          }\n        } else\n        {\n          found = isAsync ?\n          selectedValue.value === opt.value :\n          selectedValue === opt.value;\n        }\n        if (found) {\n          topOptions.push(opt);\n        } else\n        {\n          otherOptions.push(opt);\n        }\n      });\n      // fallback for custom options in tags mode as they\n      // do not appear in the selectOptions state\n      if (!isSingleMode && _Array$isArray(selectedValue)) {\n        _forEachInstanceProperty(selectedValue).call(selectedValue, (val) => {\n          if (!_findInstanceProperty(topOptions).call(topOptions, (tOpt) => tOpt.value === (\n          isAsync ? val == null ? void 0 : val.value : val))) {\n            if (isAsync) {\n              const labelValue = val;\n              topOptions.push({\n                label: labelValue.label,\n                value: labelValue.value });\n\n            } else\n            {\n              const value = val;\n              topOptions.push({ label: String(value), value });\n            }\n          }\n        });\n      }\n      const sortedOptions = [...topOptions, ...otherOptions];\n      if (!_isEqual(sortedOptions, selectOptions)) {\n        setSelectOptions(sortedOptions);\n      }\n    }\n  }, [isAsync, isSingleMode, selectOptions]);\n  const handleOnSelect = (selectedValue) => {\n    if (isSingleMode) {\n      setSelectValue(selectedValue);\n    } else\n    {\n      const currentSelected = selectValue ?\n      _Array$isArray(selectValue) ?\n      selectValue :\n      [selectValue] :\n      [];\n      if (typeof selectedValue === 'number' ||\n      typeof selectedValue === 'string') {\n        setSelectValue([\n        ...currentSelected,\n        selectedValue]);\n\n      } else\n      {\n        setSelectValue([\n        ...currentSelected,\n        selectedValue]);\n\n      }\n    }\n    setSearchedValue('');\n  };\n  const handleOnDeselect = (value) => {\n    if (_Array$isArray(selectValue)) {\n      const selectedValues = [\n      ..._filterInstanceProperty(selectValue).call(selectValue, (opt) => opt !== value)];\n\n      setSelectValue(selectedValues);\n    }\n    setSearchedValue('');\n  };\n  const onError = (response) => getClientErrorObject(response).then((e) => {\n    const { error } = e;\n    setError(error);\n  });\n  const handleData = (data) => {\n    if (data && _Array$isArray(data) && data.length) {\n      // merges with existing and creates unique options\n      setSelectOptions((prevOptions) => [\n      ...prevOptions,\n      ..._filterInstanceProperty(data).call(data, (newOpt) => !_findInstanceProperty(prevOptions).call(prevOptions, (prevOpt) => prevOpt.value === newOpt.value))]);\n\n    }\n  };\n  const handlePaginatedFetch = useMemo(() => (value, page, pageSize) => {\n    const key = `${value};${page};${pageSize}`;\n    const cachedCount = fetchedQueries.current.get(key);\n    if (cachedCount) {\n      setTotalCount(cachedCount);\n      return;\n    }\n    setLoading(true);\n    const fetchOptions = options;\n    fetchOptions(value, page, pageSize).\n    then(({ data, totalCount }) => {\n      handleData(data);\n      fetchedQueries.current.set(key, totalCount);\n      setTotalCount(totalCount);\n    }).\n    catch(onError).\n    finally(() => setLoading(false));\n  }, [options]);\n  const handleOnSearch = debounce((search) => {\n    const searchValue = _trimInstanceProperty(search).call(search);\n    // enables option creation\n    if (allowNewOptions && isSingleMode) {\n      const firstOption = selectOptions.length > 0 && selectOptions[0].value;\n      // replaces the last search value entered with the new one\n      // only when the value wasn't part of the original options\n      if (searchValue &&\n      firstOption === searchedValue &&\n      !_findInstanceProperty(initialOptions).call(initialOptions, (o) => o.value === searchedValue)) {\n        selectOptions.shift();\n        setSelectOptions(selectOptions);\n      }\n      if (searchValue && !hasOption(searchValue, selectOptions)) {\n        const newOption = {\n          label: searchValue,\n          value: searchValue };\n\n        // adds a custom option\n        const newOptions = [...selectOptions, newOption];\n        setSelectOptions(newOptions);\n        setSelectValue(searchValue);\n      }\n    }\n    setSearchedValue(searchValue);\n  }, DEBOUNCE_TIMEOUT);\n  const handlePagination = (e) => {\n    const vScroll = e.currentTarget;\n    const thresholdReached = vScroll.scrollTop > (vScroll.scrollHeight - vScroll.offsetHeight) * 0.7;\n    const hasMoreData = page * pageSize + pageSize < totalCount;\n    if (!isLoading && isAsync && hasMoreData && thresholdReached) {\n      const newPage = page + 1;\n      handlePaginatedFetch(searchedValue, newPage, pageSize);\n      setPage(newPage);\n    }\n  };\n  const handleFilterOption = (search, option) => {\n    if (typeof filterOption === 'function') {\n      return filterOption(search, option);\n    }\n    if (filterOption) {var _context, _context2;\n      const searchValue = _trimInstanceProperty(search).call(search).toLowerCase();\n      const { value, label } = option;\n      const valueText = String(value);\n      const labelText = String(label);\n      return _includesInstanceProperty(_context = valueText.toLowerCase()).call(_context, searchValue) ||\n      _includesInstanceProperty(_context2 = labelText.toLowerCase()).call(_context2, searchValue);\n    }\n    return false;\n  };\n  const handleOnDropdownVisibleChange = (isDropdownVisible) => {\n    setIsDropdownVisible(isDropdownVisible);\n    if (isAsync && !loadingEnabled) {\n      setLoadingEnabled(true);\n    }\n    // multiple or tags mode keep the dropdown visible while selecting options\n    // this waits for the dropdown to be closed before sorting the top options\n    if (!isSingleMode && !isDropdownVisible) {\n      handleTopOptions(selectValue);\n    }\n  };\n  useEffect(() => {\n    const allowFetch = !fetchOnlyOnSearch || searchedValue;\n    if (isAsync && loadingEnabled && allowFetch) {\n      const page = 0;\n      handlePaginatedFetch(searchedValue, page, pageSize);\n      setPage(page);\n    }\n  }, [\n  isAsync,\n  searchedValue,\n  pageSize,\n  handlePaginatedFetch,\n  loadingEnabled,\n  fetchOnlyOnSearch]);\n\n  useEffect(() => {\n    if (isSingleMode) {\n      handleTopOptions(selectValue);\n    }\n  }, [handleTopOptions, isSingleMode, selectValue]);\n  const dropdownRender = (originNode) => {\n    if (!isDropdownVisible) {var _originNode$ref, _originNode$ref$curre;\n      (_originNode$ref = originNode.ref) == null ? void 0 : (_originNode$ref$curre = _originNode$ref.current) == null ? void 0 : _originNode$ref$curre.scrollTo({ top: 0 });\n    }\n    return error ? ___EmotionJSX(Error, { error: error, __self: this, __source: { fileName: _jsxFileName, lineNumber: 330, columnNumber: 24 } }) : originNode;\n  };\n  const SuffixIcon = () => {\n    if (isLoading) {\n      return ___EmotionJSX(StyledSpin, { size: \"small\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 334, columnNumber: 20 } });\n    }\n    if (shouldShowSearch && isDropdownVisible) {\n      return ___EmotionJSX(SearchOutlined, { __self: this, __source: { fileName: _jsxFileName, lineNumber: 337, columnNumber: 20 } });\n    }\n    return ___EmotionJSX(DownOutlined, { __self: this, __source: { fileName: _jsxFileName, lineNumber: 339, columnNumber: 16 } });\n  };\n  return ___EmotionJSX(StyledContainer, { __self: this, __source: { fileName: _jsxFileName, lineNumber: 341, columnNumber: 13 } },\n  header,\n  ___EmotionJSX(StyledSelect, _extends({ hasHeader: !!header, \"aria-label\": ariaLabel || name, dropdownRender: dropdownRender, filterOption: handleFilterOption, getPopupContainer: (triggerNode) => triggerNode.parentNode, labelInValue: isAsync, maxTagCount: MAX_TAG_COUNT, mode: mappedMode, onDeselect: handleOnDeselect, onDropdownVisibleChange: handleOnDropdownVisibleChange, onPopupScroll: isAsync ? handlePagination : undefined, onSearch: shouldShowSearch ? handleOnSearch : undefined, onSelect: handleOnSelect, onClear: () => setSelectValue(undefined), options: selectOptions, placeholder: placeholder, showSearch: shouldShowSearch, showArrow: true, tokenSeparators: TOKEN_SEPARATORS, value: selectValue, suffixIcon: ___EmotionJSX(SuffixIcon, { __self: this, __source: { fileName: _jsxFileName, lineNumber: 343, columnNumber: 689 } }), menuItemSelectedIcon: invertSelection ? ___EmotionJSX(StyledStopOutlined, { iconSize: \"m\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 343, columnNumber: 746 } }) : ___EmotionJSX(StyledCheckOutlined, { iconSize: \"m\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 343, columnNumber: 785 } }) }, props, { __self: this, __source: { fileName: _jsxFileName, lineNumber: 343, columnNumber: 7 } })));\n\n};__signature__(Select, \"useState{[selectOptions, setSelectOptions](initialOptions)}\\nuseState{[selectValue, setSelectValue](value)}\\nuseState{[searchedValue, setSearchedValue]('')}\\nuseState{[isLoading, setLoading](false)}\\nuseState{[error, setError]('')}\\nuseState{[isDropdownVisible, setIsDropdownVisible](false)}\\nuseState{[page, setPage](0)}\\nuseState{[totalCount, setTotalCount](0)}\\nuseState{[loadingEnabled, setLoadingEnabled](false)}\\nuseRef{fetchedQueries}\\nuseEffect{}\\nuseEffect{}\\nuseEffect{}\\nuseCallback{handleTopOptions}\\nuseMemo{handlePaginatedFetch}\\nuseEffect{}\\nuseEffect{}\");const _default =\nSelect;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(StyledContainer, \"StyledContainer\", \"/Users/frankhe/projects/superset/superset-frontend/src/components/Select/Select.tsx\");reactHotLoader.register(StyledSelect, \"StyledSelect\", \"/Users/frankhe/projects/superset/superset-frontend/src/components/Select/Select.tsx\");reactHotLoader.register(StyledStopOutlined, \"StyledStopOutlined\", \"/Users/frankhe/projects/superset/superset-frontend/src/components/Select/Select.tsx\");reactHotLoader.register(StyledCheckOutlined, \"StyledCheckOutlined\", \"/Users/frankhe/projects/superset/superset-frontend/src/components/Select/Select.tsx\");reactHotLoader.register(StyledError, \"StyledError\", \"/Users/frankhe/projects/superset/superset-frontend/src/components/Select/Select.tsx\");reactHotLoader.register(StyledSpin, \"StyledSpin\", \"/Users/frankhe/projects/superset/superset-frontend/src/components/Select/Select.tsx\");reactHotLoader.register(MAX_TAG_COUNT, \"MAX_TAG_COUNT\", \"/Users/frankhe/projects/superset/superset-frontend/src/components/Select/Select.tsx\");reactHotLoader.register(TOKEN_SEPARATORS, \"TOKEN_SEPARATORS\", \"/Users/frankhe/projects/superset/superset-frontend/src/components/Select/Select.tsx\");reactHotLoader.register(DEBOUNCE_TIMEOUT, \"DEBOUNCE_TIMEOUT\", \"/Users/frankhe/projects/superset/superset-frontend/src/components/Select/Select.tsx\");reactHotLoader.register(DEFAULT_PAGE_SIZE, \"DEFAULT_PAGE_SIZE\", \"/Users/frankhe/projects/superset/superset-frontend/src/components/Select/Select.tsx\");reactHotLoader.register(EMPTY_OPTIONS, \"EMPTY_OPTIONS\", \"/Users/frankhe/projects/superset/superset-frontend/src/components/Select/Select.tsx\");reactHotLoader.register(Error, \"Error\", \"/Users/frankhe/projects/superset/superset-frontend/src/components/Select/Select.tsx\");reactHotLoader.register(Select, \"Select\", \"/Users/frankhe/projects/superset/superset-frontend/src/components/Select/Select.tsx\");reactHotLoader.register(_default, \"default\", \"/Users/frankhe/projects/superset/superset-frontend/src/components/Select/Select.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/Users/frankhe/projects/superset/superset-frontend/src/components/Select/Select.tsx"],"names":[],"mappings":"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","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, {\n  ReactElement,\n  ReactNode,\n  RefObject,\n  UIEvent,\n  useEffect,\n  useMemo,\n  useState,\n  useRef,\n  useCallback,\n} from 'react';\nimport { styled, t } from '@superset-ui/core';\nimport AntdSelect, {\n  SelectProps as AntdSelectProps,\n  SelectValue as AntdSelectValue,\n  LabeledValue as AntdLabeledValue,\n} from 'antd/lib/select';\nimport { DownOutlined, SearchOutlined } from '@ant-design/icons';\nimport debounce from 'lodash/debounce';\nimport { isEqual } from 'lodash';\nimport { Spin } from 'antd';\nimport Icons from 'src/components/Icons';\nimport { getClientErrorObject } from 'src/utils/getClientErrorObject';\nimport { hasOption } from './utils';\n\ntype AntdSelectAllProps = AntdSelectProps<AntdSelectValue>;\n\ntype PickedSelectProps = Pick<\n  AntdSelectAllProps,\n  | 'allowClear'\n  | 'autoFocus'\n  | 'value'\n  | 'disabled'\n  | 'filterOption'\n  | 'notFoundContent'\n  | 'onChange'\n  | 'placeholder'\n  | 'showSearch'\n  | 'value'\n>;\n\nexport type OptionsType = Exclude<AntdSelectAllProps['options'], undefined>;\n\nexport type OptionsTypePage = {\n  data: OptionsType;\n  totalCount: number;\n};\n\nexport type OptionsPagePromise = (\n  search: string,\n  page: number,\n  pageSize: number,\n) => Promise<OptionsTypePage>;\n\nexport interface SelectProps extends PickedSelectProps {\n  allowNewOptions?: boolean;\n  ariaLabel: string;\n  header?: ReactNode;\n  mode?: 'single' | 'multiple';\n  name?: string; // discourage usage\n  options: OptionsType | OptionsPagePromise;\n  pageSize?: number;\n  invertSelection?: boolean;\n  fetchOnlyOnSearch?: boolean;\n}\n\nconst StyledContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst StyledSelect = styled(AntdSelect, {\n  shouldForwardProp: prop => prop !== 'hasHeader',\n})<{ hasHeader: boolean }>`\n  ${({ theme, hasHeader }) => `\n    width: 100%;\n    margin-top: ${hasHeader ? theme.gridUnit : 0}px;\n\n    && .ant-select-selector {\n      border-radius: ${theme.gridUnit}px;\n    }\n\n    // Open the dropdown when clicking on the suffix\n    // This is fixed in version 4.16\n    .ant-select-arrow .anticon:not(.ant-select-suffix) {\n      pointer-events: none;\n    }\n  `}\n`;\n\nconst StyledStopOutlined = styled(Icons.StopOutlined)`\n  vertical-align: 0;\n`;\n\nconst StyledCheckOutlined = styled(Icons.CheckOutlined)`\n  vertical-align: 0;\n`;\n\nconst StyledError = styled.div`\n  ${({ theme }) => `\n    display: flex;\n    justify-content: center;\n    align-items: flex-start;\n    width: 100%;\n    padding: ${theme.gridUnit * 2}px;\n    color: ${theme.colors.error.base};\n\n    & svg {\n      margin-right: ${theme.gridUnit * 2}px;\n    }\n  `}\n`;\n\nconst StyledSpin = styled(Spin)`\n  margin-top: ${({ theme }) => -theme.gridUnit}px;\n`;\n\nconst MAX_TAG_COUNT = 4;\nconst TOKEN_SEPARATORS = [',', '\\n', '\\t', ';'];\nconst DEBOUNCE_TIMEOUT = 500;\nconst DEFAULT_PAGE_SIZE = 100;\nconst EMPTY_OPTIONS: OptionsType = [];\n\nconst Error = ({ error }: { error: string }) => (\n  <StyledError>\n    <Icons.ErrorSolid /> {error}\n  </StyledError>\n);\n\nconst Select = ({\n  allowNewOptions = false,\n  ariaLabel,\n  fetchOnlyOnSearch,\n  filterOption = true,\n  header = null,\n  invertSelection = false,\n  mode = 'single',\n  name,\n  options,\n  pageSize = DEFAULT_PAGE_SIZE,\n  placeholder = t('Select ...'),\n  showSearch,\n  value,\n  ...props\n}: SelectProps) => {\n  const isAsync = typeof options === 'function';\n  const isSingleMode = mode === 'single';\n  const shouldShowSearch = isAsync || allowNewOptions ? true : showSearch;\n  const initialOptions =\n    options && Array.isArray(options) ? options : EMPTY_OPTIONS;\n  const [selectOptions, setSelectOptions] = useState<OptionsType>(\n    initialOptions,\n  );\n  const [selectValue, setSelectValue] = useState(value);\n  const [searchedValue, setSearchedValue] = useState('');\n  const [isLoading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [isDropdownVisible, setIsDropdownVisible] = useState(false);\n  const [page, setPage] = useState(0);\n  const [totalCount, setTotalCount] = useState(0);\n  const [loadingEnabled, setLoadingEnabled] = useState(false);\n  const fetchedQueries = useRef(new Map<string, number>());\n  const mappedMode = isSingleMode\n    ? undefined\n    : allowNewOptions\n    ? 'tags'\n    : 'multiple';\n\n  useEffect(() => {\n    setSelectOptions(\n      options && Array.isArray(options) ? options : EMPTY_OPTIONS,\n    );\n  }, [options]);\n\n  useEffect(() => {\n    if (isAsync && value) {\n      const array: AntdLabeledValue[] = Array.isArray(value)\n        ? (value as AntdLabeledValue[])\n        : [value as AntdLabeledValue];\n      const options: AntdLabeledValue[] = [];\n      array.forEach(element => {\n        const found = selectOptions.find(\n          option => option.value === element.value,\n        );\n        if (!found) {\n          options.push(element);\n        }\n      });\n      if (options.length > 0) {\n        setSelectOptions([...selectOptions, ...options]);\n      }\n    }\n  }, [isAsync, selectOptions, value]);\n\n  useEffect(() => {\n    setSelectValue(value);\n  }, [value]);\n\n  const handleTopOptions = useCallback(\n    (selectedValue: AntdSelectValue | undefined) => {\n      // bringing selected options to the top of the list\n      if (selectedValue) {\n        const topOptions: OptionsType = [];\n        const otherOptions: OptionsType = [];\n\n        selectOptions.forEach(opt => {\n          let found = false;\n          if (Array.isArray(selectedValue)) {\n            if (isAsync) {\n              found =\n                (selectedValue as AntdLabeledValue[]).find(\n                  element => element.value === opt.value,\n                ) !== undefined;\n            } else {\n              found = selectedValue.includes(opt.value);\n            }\n          } else {\n            found = isAsync\n              ? (selectedValue as AntdLabeledValue).value === opt.value\n              : selectedValue === opt.value;\n          }\n\n          if (found) {\n            topOptions.push(opt);\n          } else {\n            otherOptions.push(opt);\n          }\n        });\n\n        // fallback for custom options in tags mode as they\n        // do not appear in the selectOptions state\n        if (!isSingleMode && Array.isArray(selectedValue)) {\n          selectedValue.forEach((val: string | number | AntdLabeledValue) => {\n            if (\n              !topOptions.find(\n                tOpt =>\n                  tOpt.value ===\n                  (isAsync ? (val as AntdLabeledValue)?.value : val),\n              )\n            ) {\n              if (isAsync) {\n                const labelValue = val as AntdLabeledValue;\n                topOptions.push({\n                  label: labelValue.label,\n                  value: labelValue.value,\n                });\n              } else {\n                const value = val as string | number;\n                topOptions.push({ label: String(value), value });\n              }\n            }\n          });\n        }\n\n        const sortedOptions = [...topOptions, ...otherOptions];\n        if (!isEqual(sortedOptions, selectOptions)) {\n          setSelectOptions(sortedOptions);\n        }\n      }\n    },\n    [isAsync, isSingleMode, selectOptions],\n  );\n\n  const handleOnSelect = (\n    selectedValue: string | number | AntdLabeledValue,\n  ) => {\n    if (isSingleMode) {\n      setSelectValue(selectedValue);\n    } else {\n      const currentSelected = selectValue\n        ? Array.isArray(selectValue)\n          ? selectValue\n          : [selectValue]\n        : [];\n      if (\n        typeof selectedValue === 'number' ||\n        typeof selectedValue === 'string'\n      ) {\n        setSelectValue([\n          ...(currentSelected as (string | number)[]),\n          selectedValue as string | number,\n        ]);\n      } else {\n        setSelectValue([\n          ...(currentSelected as AntdLabeledValue[]),\n          selectedValue as AntdLabeledValue,\n        ]);\n      }\n    }\n    setSearchedValue('');\n  };\n\n  const handleOnDeselect = (value: string | number | AntdLabeledValue) => {\n    if (Array.isArray(selectValue)) {\n      const selectedValues = [\n        ...(selectValue as []).filter(opt => opt !== value),\n      ];\n      setSelectValue(selectedValues);\n    }\n    setSearchedValue('');\n  };\n\n  const onError = (response: Response) =>\n    getClientErrorObject(response).then(e => {\n      const { error } = e;\n      setError(error);\n    });\n\n  const handleData = (data: OptionsType) => {\n    if (data && Array.isArray(data) && data.length) {\n      // merges with existing and creates unique options\n      setSelectOptions(prevOptions => [\n        ...prevOptions,\n        ...data.filter(\n          newOpt =>\n            !prevOptions.find(prevOpt => prevOpt.value === newOpt.value),\n        ),\n      ]);\n    }\n  };\n\n  const handlePaginatedFetch = useMemo(\n    () => (value: string, page: number, pageSize: number) => {\n      const key = `${value};${page};${pageSize}`;\n      const cachedCount = fetchedQueries.current.get(key);\n      if (cachedCount) {\n        setTotalCount(cachedCount);\n        return;\n      }\n      setLoading(true);\n      const fetchOptions = options as OptionsPagePromise;\n      fetchOptions(value, page, pageSize)\n        .then(({ data, totalCount }: OptionsTypePage) => {\n          handleData(data);\n          fetchedQueries.current.set(key, totalCount);\n          setTotalCount(totalCount);\n        })\n        .catch(onError)\n        .finally(() => setLoading(false));\n    },\n    [options],\n  );\n\n  const handleOnSearch = debounce((search: string) => {\n    const searchValue = search.trim();\n    // enables option creation\n    if (allowNewOptions && isSingleMode) {\n      const firstOption = selectOptions.length > 0 && selectOptions[0].value;\n      // replaces the last search value entered with the new one\n      // only when the value wasn't part of the original options\n      if (\n        searchValue &&\n        firstOption === searchedValue &&\n        !initialOptions.find(o => o.value === searchedValue)\n      ) {\n        selectOptions.shift();\n        setSelectOptions(selectOptions);\n      }\n      if (searchValue && !hasOption(searchValue, selectOptions)) {\n        const newOption = {\n          label: searchValue,\n          value: searchValue,\n        };\n        // adds a custom option\n        const newOptions = [...selectOptions, newOption];\n        setSelectOptions(newOptions);\n        setSelectValue(searchValue);\n      }\n    }\n    setSearchedValue(searchValue);\n  }, DEBOUNCE_TIMEOUT);\n\n  const handlePagination = (e: UIEvent<HTMLElement>) => {\n    const vScroll = e.currentTarget;\n    const thresholdReached =\n      vScroll.scrollTop > (vScroll.scrollHeight - vScroll.offsetHeight) * 0.7;\n    const hasMoreData = page * pageSize + pageSize < totalCount;\n\n    if (!isLoading && isAsync && hasMoreData && thresholdReached) {\n      const newPage = page + 1;\n      handlePaginatedFetch(searchedValue, newPage, pageSize);\n      setPage(newPage);\n    }\n  };\n\n  const handleFilterOption = (search: string, option: AntdLabeledValue) => {\n    if (typeof filterOption === 'function') {\n      return filterOption(search, option);\n    }\n\n    if (filterOption) {\n      const searchValue = search.trim().toLowerCase();\n      const { value, label } = option;\n      const valueText = String(value);\n      const labelText = String(label);\n      return (\n        valueText.toLowerCase().includes(searchValue) ||\n        labelText.toLowerCase().includes(searchValue)\n      );\n    }\n\n    return false;\n  };\n\n  const handleOnDropdownVisibleChange = (isDropdownVisible: boolean) => {\n    setIsDropdownVisible(isDropdownVisible);\n\n    if (isAsync && !loadingEnabled) {\n      setLoadingEnabled(true);\n    }\n\n    // multiple or tags mode keep the dropdown visible while selecting options\n    // this waits for the dropdown to be closed before sorting the top options\n    if (!isSingleMode && !isDropdownVisible) {\n      handleTopOptions(selectValue);\n    }\n  };\n\n  useEffect(() => {\n    const allowFetch = !fetchOnlyOnSearch || searchedValue;\n    if (isAsync && loadingEnabled && allowFetch) {\n      const page = 0;\n      handlePaginatedFetch(searchedValue, page, pageSize);\n      setPage(page);\n    }\n  }, [\n    isAsync,\n    searchedValue,\n    pageSize,\n    handlePaginatedFetch,\n    loadingEnabled,\n    fetchOnlyOnSearch,\n  ]);\n\n  useEffect(() => {\n    if (isSingleMode) {\n      handleTopOptions(selectValue);\n    }\n  }, [handleTopOptions, isSingleMode, selectValue]);\n\n  const dropdownRender = (\n    originNode: ReactElement & { ref?: RefObject<HTMLElement> },\n  ) => {\n    if (!isDropdownVisible) {\n      originNode.ref?.current?.scrollTo({ top: 0 });\n    }\n    return error ? <Error error={error} /> : originNode;\n  };\n\n  const SuffixIcon = () => {\n    if (isLoading) {\n      return <StyledSpin size=\"small\" />;\n    }\n    if (shouldShowSearch && isDropdownVisible) {\n      return <SearchOutlined />;\n    }\n    return <DownOutlined />;\n  };\n\n  return (\n    <StyledContainer>\n      {header}\n      <StyledSelect\n        hasHeader={!!header}\n        aria-label={ariaLabel || name}\n        dropdownRender={dropdownRender}\n        filterOption={handleFilterOption}\n        getPopupContainer={triggerNode => triggerNode.parentNode}\n        labelInValue={isAsync}\n        maxTagCount={MAX_TAG_COUNT}\n        mode={mappedMode}\n        onDeselect={handleOnDeselect}\n        onDropdownVisibleChange={handleOnDropdownVisibleChange}\n        onPopupScroll={isAsync ? handlePagination : undefined}\n        onSearch={shouldShowSearch ? handleOnSearch : undefined}\n        onSelect={handleOnSelect}\n        onClear={() => setSelectValue(undefined)}\n        options={selectOptions}\n        placeholder={placeholder}\n        showSearch={shouldShowSearch}\n        showArrow\n        tokenSeparators={TOKEN_SEPARATORS}\n        value={selectValue}\n        suffixIcon={<SuffixIcon />}\n        menuItemSelectedIcon={\n          invertSelection ? (\n            <StyledStopOutlined iconSize=\"m\" />\n          ) : (\n            <StyledCheckOutlined iconSize=\"m\" />\n          )\n        }\n        {...props}\n      />\n    </StyledContainer>\n  );\n};\n\nexport default Select;\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}