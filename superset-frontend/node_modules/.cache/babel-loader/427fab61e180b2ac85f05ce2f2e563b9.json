{"ast":null,"code":"import \"core-js/modules/web.dom-collections.iterator.js\";import _concatInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/concat\";import _includesInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/includes\";import _reduceInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/reduce\";import _bindInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/bind\";import _filterInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/filter\";import _mapInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/map\";import _forEachInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/for-each\";var _jsxFileName = \"/Users/frankhe/projects/superset/superset-frontend/src/datasource/DatasourceEditor.jsx\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();function _EMOTION_STRINGIFIED_CSS_ERROR__() {return \"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\";}var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Row, Col } from 'src/common/components';\nimport { Radio } from 'src/components/Radio';\nimport Card from 'src/components/Card';\nimport Alert from 'src/components/Alert';\nimport Badge from 'src/components/Badge';\nimport shortid from 'shortid';\nimport { styled, SupersetClient, t, supersetTheme } from '@superset-ui/core';\nimport Button from 'src/components/Button';\nimport Tabs from 'src/components/Tabs';\nimport CertifiedIcon from 'src/components/CertifiedIcon';\nimport WarningIconWithTooltip from 'src/components/WarningIconWithTooltip';\nimport DatabaseSelector from 'src/components/DatabaseSelector';\nimport Label from 'src/components/Label';\nimport Loading from 'src/components/Loading';\nimport TableSelector from 'src/components/TableSelector';\nimport EditableTitle from 'src/components/EditableTitle';\n\nimport { getClientErrorObject } from 'src/utils/getClientErrorObject';\n\nimport CheckboxControl from 'src/explore/components/controls/CheckboxControl';\nimport TextControl from 'src/explore/components/controls/TextControl';\nimport SelectControl from 'src/explore/components/controls/SelectControl';\nimport TextAreaControl from 'src/explore/components/controls/TextAreaControl';\nimport SelectAsyncControl from 'src/explore/components/controls/SelectAsyncControl';\nimport SpatialControl from 'src/explore/components/controls/SpatialControl';\n\nimport CollectionTable from 'src/CRUD/CollectionTable';\nimport Fieldset from 'src/CRUD/Fieldset';\nimport Field from 'src/CRUD/Field';\n\nimport withToasts from 'src/messageToasts/enhancers/withToasts';\nimport { FeatureFlag, isFeatureEnabled } from 'src/featureFlags';\nimport Icons from 'src/components/Icons';import { jsx as ___EmotionJSX } from \"@emotion/react\";\n\nconst DatasourceContainer = styled.div`\n  .change-warning {\n    margin: 16px 10px 0;\n    color: ${({ theme }) => theme.colors.warning.base};\n  }\n\n  .change-warning .bold {\n    font-weight: ${({ theme }) => theme.typography.weights.bold};\n  }\n\n  .form-group.has-feedback > .help-block {\n    margin-top: 8px;\n  }\n\n  .form-group.form-group-md {\n    margin-bottom: 8px;\n  }\n`;\n\nconst FlexRowContainer = styled.div`\n  align-items: center;\n  display: flex;\n\n  svg {\n    margin-right: ${({ theme }) => theme.gridUnit}px;\n  }\n`;\n\nconst StyledTableTabs = styled(Tabs)`\n  overflow: visible;\n  .ant-tabs-content-holder {\n    overflow: visible;\n  }\n`;\n\nconst StyledBadge = styled(Badge)`\n  .ant-badge-count {\n    line-height: ${({ theme }) => theme.gridUnit * 4}px;\n    height: ${({ theme }) => theme.gridUnit * 4}px;\n    margin-left: ${({ theme }) => theme.gridUnit}px;\n  }\n`;\n\nconst EditLockContainer = styled.div`\n  font-size: ${supersetTheme.typography.sizes.s}px;\n  display: flex;\n  align-items: center;\n  a {\n    padding: 0 10px;\n  }\n`;\n\nconst ColumnButtonWrapper = styled.div`\n  text-align: right;\n  ${({ theme }) => `margin-bottom: ${theme.gridUnit * 2}px`}\n`;\n\nconst checkboxGenerator = (d, onChange) =>\n___EmotionJSX(CheckboxControl, { value: d, onChange: onChange, __self: this, __source: { fileName: _jsxFileName, lineNumber: 113, columnNumber: 3 } });\n\nconst DATA_TYPES = ['STRING', 'NUMERIC', 'DATETIME'];\n\nconst DATASOURCE_TYPES_ARR = [\n{ key: 'physical', label: t('Physical (table or view)') },\n{ key: 'virtual', label: t('Virtual (SQL)') }];\n\nconst DATASOURCE_TYPES = {};\n_forEachInstanceProperty(DATASOURCE_TYPES_ARR).call(DATASOURCE_TYPES_ARR, (o) => {\n  DATASOURCE_TYPES[o.key] = o;\n});var _ref = process.env.NODE_ENV === \"production\" ? { name: \"s5xdrg\", styles: \"display:flex;align-items:center\" } : { name: \"l0hchv-CollectionTabTitle\", styles: \"display:flex;align-items:center;label:CollectionTabTitle;\", map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\", toString: _EMOTION_STRINGIFIED_CSS_ERROR__ };\n\nfunction CollectionTabTitle({ title, collection }) {\n  return (\n    ___EmotionJSX(\"div\", {\n      css: _ref,\n      \"data-test\": `collection-tab-${title}`, __self: this, __source: { fileName: _jsxFileName, lineNumber: 128, columnNumber: 5 } },\n\n    title, ' ',\n    ___EmotionJSX(StyledBadge, { count: collection ? collection.length : 0, showZero: true, __self: this, __source: { fileName: _jsxFileName, lineNumber: 133, columnNumber: 7 } })));\n\n\n}\n\nCollectionTabTitle.propTypes = {\n  title: PropTypes.string,\n  collection: PropTypes.array };\n\n\nfunction ColumnCollectionTable({\n  columns,\n  onChange,\n  editableColumnName,\n  showExpression,\n  allowAddItem,\n  allowEditDataType,\n  itemGenerator })\n{\n  return (\n    ___EmotionJSX(CollectionTable, {\n      collection: columns,\n      tableColumns: ['column_name', 'type', 'is_dttm', 'filterable', 'groupby'],\n      sortColumns: ['column_name', 'type', 'is_dttm', 'filterable', 'groupby'],\n      allowDeletes: true,\n      allowAddItem: allowAddItem,\n      itemGenerator: itemGenerator,\n      stickyHeader: true,\n      expandFieldset:\n      ___EmotionJSX(FormContainer, { __self: this, __source: { fileName: _jsxFileName, lineNumber: 162, columnNumber: 9 } },\n      ___EmotionJSX(Fieldset, { compact: true, __self: this, __source: { fileName: _jsxFileName, lineNumber: 163, columnNumber: 11 } },\n      showExpression &&\n      ___EmotionJSX(Field, {\n        fieldKey: \"expression\",\n        label: t('SQL expression'),\n        control:\n        ___EmotionJSX(TextAreaControl, {\n          language: \"markdown\",\n          offerEditInModal: false, __self: this, __source: { fileName: _jsxFileName, lineNumber: 169, columnNumber: 19 } }), __self: this, __source: { fileName: _jsxFileName, lineNumber: 165, columnNumber: 15 } }),\n\n\n\n\n      ___EmotionJSX(Field, {\n        fieldKey: \"verbose_name\",\n        label: t('Label'),\n        control:\n        ___EmotionJSX(TextControl, {\n          controlId: \"verbose_name\",\n          placeholder: t('Label'), __self: this, __source: { fileName: _jsxFileName, lineNumber: 180, columnNumber: 17 } }), __self: this, __source: { fileName: _jsxFileName, lineNumber: 176, columnNumber: 13 } }),\n\n\n\n      ___EmotionJSX(Field, {\n        fieldKey: \"description\",\n        label: t('Description'),\n        control:\n        ___EmotionJSX(TextControl, {\n          controlId: \"description\",\n          placeholder: t('Description'), __self: this, __source: { fileName: _jsxFileName, lineNumber: 190, columnNumber: 17 } }), __self: this, __source: { fileName: _jsxFileName, lineNumber: 186, columnNumber: 13 } }),\n\n\n\n      allowEditDataType &&\n      ___EmotionJSX(Field, {\n        fieldKey: \"type\",\n        label: t('Data type'),\n        control:\n        ___EmotionJSX(SelectControl, { choices: DATA_TYPES, name: \"type\", freeForm: true, __self: this, __source: { fileName: _jsxFileName, lineNumber: 201, columnNumber: 19 } }), __self: this, __source: { fileName: _jsxFileName, lineNumber: 197, columnNumber: 15 } }),\n\n\n\n      ___EmotionJSX(Field, {\n        fieldKey: \"python_date_format\",\n        label: t('Datetime format'),\n        description:\n        /* Note the fragmented translations may not work. */\n        ___EmotionJSX(\"div\", { __self: this, __source: { fileName: _jsxFileName, lineNumber: 210, columnNumber: 17 } },\n        t('The pattern of timestamp format. For strings use '),\n        ___EmotionJSX(\"a\", { href: \"https://docs.python.org/2/library/datetime.html#strftime-strptime-behavior\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 212, columnNumber: 19 } },\n        t('Python datetime string pattern')),\n\n        t(' expression which needs to adhere to the '),\n        ___EmotionJSX(\"a\", { href: \"https://en.wikipedia.org/wiki/ISO_8601\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 216, columnNumber: 19 } },\n        t('ISO 8601')),\n\n        t(` standard to ensure that the lexicographical ordering\n                      coincides with the chronological ordering. If the\n                      timestamp format does not adhere to the ISO 8601 standard\n                      you will need to define an expression and type for\n                      transforming the string into a date or timestamp. Note\n                      currently time zones are not supported. If time is stored\n                      in epoch format, put \\`epoch_s\\` or \\`epoch_ms\\`. If no pattern\n                      is specified we fall back to using the optional defaults on a per\n                      database/column name level via the extra parameter.`)),\n\n\n        control:\n        ___EmotionJSX(TextControl, {\n          controlId: \"python_date_format\",\n          placeholder: \"%Y/%m/%d\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 231, columnNumber: 17 } }), __self: this, __source: { fileName: _jsxFileName, lineNumber: 205, columnNumber: 13 } }))),\n\n\n\n\n\n\n      columnLabels: {\n        column_name: t('Column'),\n        type: t('Data type'),\n        groupby: t('Is dimension'),\n        is_dttm: t('Is temporal'),\n        filterable: t('Is filterable') },\n\n      onChange: onChange,\n      itemRenderers: {\n        column_name: (v, onItemChange) =>\n        editableColumnName ?\n        ___EmotionJSX(EditableTitle, { canEdit: true, title: v, onSaveTitle: onItemChange, __self: this, __source: { fileName: _jsxFileName, lineNumber: 251, columnNumber: 13 } }) :\n\n        v,\n\n        type: (d) => d ? ___EmotionJSX(Label, { __self: this, __source: { fileName: _jsxFileName, lineNumber: 255, columnNumber: 25 } }, d) : null,\n        is_dttm: checkboxGenerator,\n        filterable: checkboxGenerator,\n        groupby: checkboxGenerator }, __self: this, __source: { fileName: _jsxFileName, lineNumber: 153, columnNumber: 5 } }));\n\n\n\n}\nColumnCollectionTable.propTypes = {\n  columns: PropTypes.array.isRequired,\n  onChange: PropTypes.func.isRequired,\n  editableColumnName: PropTypes.bool,\n  showExpression: PropTypes.bool,\n  allowAddItem: PropTypes.bool,\n  allowEditDataType: PropTypes.bool,\n  itemGenerator: PropTypes.func };\n\nColumnCollectionTable.defaultProps = {\n  editableColumnName: false,\n  showExpression: false,\n  allowAddItem: false,\n  allowEditDataType: false,\n  itemGenerator: () => ({\n    column_name: '<new column>',\n    filterable: true,\n    groupby: true }) };\n\n\n\nfunction StackedField({ label, formElement }) {\n  return (\n    ___EmotionJSX(\"div\", { __self: this, __source: { fileName: _jsxFileName, lineNumber: 286, columnNumber: 5 } },\n    ___EmotionJSX(\"div\", { __self: this, __source: { fileName: _jsxFileName, lineNumber: 287, columnNumber: 7 } },\n    ___EmotionJSX(\"strong\", { __self: this, __source: { fileName: _jsxFileName, lineNumber: 288, columnNumber: 9 } }, label)),\n\n    ___EmotionJSX(\"div\", { __self: this, __source: { fileName: _jsxFileName, lineNumber: 290, columnNumber: 7 } }, formElement)));\n\n\n}\n\nStackedField.propTypes = {\n  label: PropTypes.string,\n  formElement: PropTypes.node };\n\n\nfunction FormContainer({ children }) {\n  return ___EmotionJSX(Card, { padded: true, __self: this, __source: { fileName: _jsxFileName, lineNumber: 301, columnNumber: 10 } }, children);\n}\n\nFormContainer.propTypes = {\n  children: PropTypes.node };\n\n\nconst propTypes = {\n  datasource: PropTypes.object.isRequired,\n  onChange: PropTypes.func,\n  addSuccessToast: PropTypes.func.isRequired,\n  addDangerToast: PropTypes.func.isRequired };\n\n\nconst defaultProps = {\n  onChange: () => {} };\n\n\nclass DatasourceEditor extends React.PureComponent {\n  constructor(props) {var _props$datasource$met, _context, _context2, _context3, _context4, _context5, _context6, _context7, _context8, _context9, _context10;\n    super(props);\n    this.state = {\n      datasource: {\n        ...props.datasource,\n        metrics: (_props$datasource$met = props.datasource.metrics) == null ? void 0 : _mapInstanceProperty(_props$datasource$met).call(_props$datasource$met, (metric) => {\n          const {\n            certification: { details, certified_by: certifiedBy } = {},\n            warning_markdown: warningMarkdown } =\n          JSON.parse(metric.extra || '{}') || {};\n          return {\n            ...metric,\n            certification_details: details || '',\n            warning_markdown: warningMarkdown || '',\n            certified_by: certifiedBy };\n\n        }) },\n\n      errors: [],\n      isDruid:\n      props.datasource.type === 'druid' ||\n      props.datasource.datasource_type === 'druid',\n      isSqla:\n      props.datasource.datasource_type === 'table' ||\n      props.datasource.type === 'table',\n      isEditMode: false,\n      databaseColumns: _filterInstanceProperty(_context = props.datasource.columns).call(_context, (col) => !col.expression),\n      calculatedColumns: _filterInstanceProperty(_context2 = props.datasource.columns).call(_context2,\n      (col) => !!col.expression),\n\n      metadataLoading: false,\n      activeTabKey: 0,\n      datasourceType: props.datasource.sql ?\n      DATASOURCE_TYPES.virtual.key :\n      DATASOURCE_TYPES.physical.key };\n\n\n    this.onChange = _bindInstanceProperty(_context3 = this.onChange).call(_context3, this);\n    this.onChangeEditMode = _bindInstanceProperty(_context4 = this.onChangeEditMode).call(_context4, this);\n    this.onDatasourcePropChange = _bindInstanceProperty(_context5 = this.onDatasourcePropChange).call(_context5, this);\n    this.onDatasourceChange = _bindInstanceProperty(_context6 = this.onDatasourceChange).call(_context6, this);\n    this.syncMetadata = _bindInstanceProperty(_context7 = this.syncMetadata).call(_context7, this);\n    this.setColumns = _bindInstanceProperty(_context8 = this.setColumns).call(_context8, this);\n    this.validateAndChange = _bindInstanceProperty(_context9 = this.validateAndChange).call(_context9, this);\n    this.handleTabSelect = _bindInstanceProperty(_context10 = this.handleTabSelect).call(_context10, this);\n    this.allowEditSource = !isFeatureEnabled(\n    FeatureFlag.DISABLE_DATASET_SOURCE_EDIT);\n\n  }\n\n  onChange() {\n    // Emptying SQL if \"Physical\" radio button is selected\n    // Currently the logic to know whether the source is\n    // physical or virtual is based on whether SQL is empty or not.\n    const { datasourceType, datasource } = this.state;\n    const sql =\n    datasourceType === DATASOURCE_TYPES.physical.key ? '' : datasource.sql;\n\n    const newDatasource = {\n      ...this.state.datasource,\n      sql,\n      columns: [...this.state.databaseColumns, ...this.state.calculatedColumns] };\n\n    this.props.onChange(newDatasource, this.state.errors);\n  }\n\n  onChangeEditMode() {\n    this.setState((prevState) => ({ isEditMode: !prevState.isEditMode }));\n  }\n\n  onDatasourceChange(datasource) {\n    this.setState({ datasource }, this.validateAndChange);\n  }\n\n  onDatasourcePropChange(attr, value) {\n    const datasource = { ...this.state.datasource, [attr]: value };\n    this.setState(\n    (prevState) => ({\n      datasource: { ...prevState.datasource, [attr]: value } }),\n\n    this.onDatasourceChange(datasource));\n\n  }\n\n  onDatasourceTypeChange(datasourceType) {\n    this.setState({ datasourceType });\n  }\n\n  setColumns(obj) {\n    // update calculatedColumns or databaseColumns\n    this.setState(obj, this.validateAndChange);\n  }\n\n  validateAndChange() {\n    this.validate(this.onChange);\n  }\n\n  updateColumns(cols) {var _context11;\n    const { databaseColumns } = this.state;\n    const databaseColumnNames = _mapInstanceProperty(cols).call(cols, (col) => col.name);\n    const currentCols = _reduceInstanceProperty(databaseColumns).call(databaseColumns,\n    (agg, col) => ({\n      ...agg,\n      [col.column_name]: col }),\n\n    {});\n\n    const finalColumns = [];\n    const results = {\n      added: [],\n      modified: [],\n      removed: _filterInstanceProperty(_context11 = _mapInstanceProperty(databaseColumns).call(databaseColumns,\n      (col) => col.column_name)).call(_context11,\n      (col) => !_includesInstanceProperty(databaseColumnNames).call(databaseColumnNames, col)) };\n\n    _forEachInstanceProperty(cols).call(cols, (col) => {\n      const currentCol = currentCols[col.name];\n      if (!currentCol) {\n        // new column\n        finalColumns.push({\n          id: shortid.generate(),\n          column_name: col.name,\n          type: col.type,\n          groupby: true,\n          filterable: true,\n          is_dttm: col.is_dttm });\n\n        results.added.push(col.name);\n      } else if (\n      currentCol.type !== col.type ||\n      currentCol.is_dttm !== col.is_dttm)\n      {\n        // modified column\n        finalColumns.push({\n          ...currentCol,\n          type: col.type,\n          is_dttm: col.is_dttm });\n\n        results.modified.push(col.name);\n      } else {\n        // unchanged\n        finalColumns.push(currentCol);\n      }\n    });\n    if (\n    results.added.length ||\n    results.modified.length ||\n    results.removed.length)\n    {\n      this.setColumns({ databaseColumns: finalColumns });\n    }\n    return results;\n  }\n\n  syncMetadata() {\n    const { datasource } = this.state;\n    const endpoint = `/datasource/external_metadata/${\n    datasource.type || datasource.datasource_type\n    }/${datasource.id}/`;\n    this.setState({ metadataLoading: true });\n\n    SupersetClient.get({ endpoint }).\n    then(({ json }) => {\n      const results = this.updateColumns(json);\n      if (results.modified.length) {\n        this.props.addSuccessToast(\n        t('Modified columns: %s', results.modified.join(', ')));\n\n      }\n      if (results.removed.length) {\n        this.props.addSuccessToast(\n        t('Removed columns: %s', results.removed.join(', ')));\n\n      }\n      if (results.added.length) {\n        this.props.addSuccessToast(\n        t('New columns added: %s', results.added.join(', ')));\n\n      }\n      this.props.addSuccessToast(t('Metadata has been synced'));\n      this.setState({ metadataLoading: false });\n    }).\n    catch((response) =>\n    getClientErrorObject(response).then(({ error, statusText }) => {\n      this.props.addDangerToast(\n      error || statusText || t('An error has occurred'));\n\n      this.setState({ metadataLoading: false });\n    }));\n\n  }\n\n  findDuplicates(arr, accessor) {\n    const seen = {};\n    const dups = [];\n    _forEachInstanceProperty(arr).call(arr, (obj) => {\n      const item = accessor(obj);\n      if (item in seen) {\n        dups.push(item);\n      } else {\n        seen[item] = null;\n      }\n    });\n    return dups;\n  }\n\n  validate(callback) {var _context12;\n    let errors = [];\n    let dups;\n    const { datasource } = this.state;\n\n    // Looking for duplicate column_name\n    dups = this.findDuplicates(datasource.columns, (obj) => obj.column_name);\n    errors = _concatInstanceProperty(errors).call(errors,\n    _mapInstanceProperty(dups).call(dups, (name) => t('Column name [%s] is duplicated', name)));\n\n\n    // Looking for duplicate metric_name\n    dups = this.findDuplicates(datasource.metrics, (obj) => obj.metric_name);\n    errors = _concatInstanceProperty(errors).call(errors,\n    _mapInstanceProperty(dups).call(dups, (name) => t('Metric name [%s] is duplicated', name)));\n\n\n    // Making sure calculatedColumns have an expression defined\n    const noFilterCalcCols = _filterInstanceProperty(_context12 = this.state.calculatedColumns).call(_context12,\n    (col) => !col.expression && !col.json);\n\n    errors = _concatInstanceProperty(errors).call(errors,\n    _mapInstanceProperty(noFilterCalcCols).call(noFilterCalcCols, (col) =>\n    t('Calculated column [%s] requires an expression', col.column_name)));\n\n\n\n    this.setState({ errors }, callback);\n  }\n\n  handleTabSelect(activeTabKey) {\n    this.setState({ activeTabKey });\n  }\n\n  renderSettingsFieldset() {\n    const { datasource } = this.state;\n    return (\n      ___EmotionJSX(Fieldset, {\n        title: t('Basic'),\n        item: datasource,\n        onChange: this.onDatasourceChange, __self: this, __source: { fileName: _jsxFileName, lineNumber: 563, columnNumber: 7 } },\n\n      ___EmotionJSX(Field, {\n        fieldKey: \"description\",\n        label: t('Description'),\n        control:\n        ___EmotionJSX(TextAreaControl, { language: \"markdown\", offerEditInModal: false, __self: this, __source: { fileName: _jsxFileName, lineNumber: 572, columnNumber: 13 } }), __self: this, __source: { fileName: _jsxFileName, lineNumber: 568, columnNumber: 9 } }),\n\n\n      ___EmotionJSX(Field, {\n        fieldKey: \"default_endpoint\",\n        label: t('Default URL'),\n        description: t(\n        'Default URL to redirect to when accessing from the dataset list page'),\n\n        control: ___EmotionJSX(TextControl, { controlId: \"default_endpoint\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 581, columnNumber: 20 } }), __self: this, __source: { fileName: _jsxFileName, lineNumber: 575, columnNumber: 9 } }),\n\n      ___EmotionJSX(Field, {\n        inline: true,\n        fieldKey: \"filter_select_enabled\",\n        label: t('Autocomplete filters'),\n        description: t('Whether to populate autocomplete filters options'),\n        control: ___EmotionJSX(CheckboxControl, { __self: this, __source: { fileName: _jsxFileName, lineNumber: 588, columnNumber: 20 } }), __self: this, __source: { fileName: _jsxFileName, lineNumber: 583, columnNumber: 9 } }),\n\n      this.state.isSqla &&\n      ___EmotionJSX(Field, {\n        fieldKey: \"fetch_values_predicate\",\n        label: t('Autocomplete query predicate'),\n        description: t(\n        'When using \"Autocomplete filters\", this can be used to improve performance ' +\n        'of the query fetching the values. Use this option to apply a ' +\n        'predicate (WHERE clause) to the query selecting the distinct ' +\n        'values from the table. Typically the intent would be to limit the scan ' +\n        'by applying a relative time filter on a partitioned or indexed time-related field.'),\n\n        control: ___EmotionJSX(TextControl, { controlId: \"fetch_values_predicate\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 601, columnNumber: 22 } }), __self: this, __source: { fileName: _jsxFileName, lineNumber: 591, columnNumber: 11 } }),\n\n\n      this.state.isSqla &&\n      ___EmotionJSX(Field, {\n        fieldKey: \"extra\",\n        label: t('Extra'),\n        description: t(\n        'Extra data to specify table metadata. Currently supports ' +\n        'metadata of the format: `{ \"certification\": { \"certified_by\": ' +\n        '\"Data Platform Team\", \"details\": \"This table is the source of truth.\" ' +\n        '}, \"warning_markdown\": \"This is a warning.\" }`.'),\n\n        control:\n        ___EmotionJSX(TextAreaControl, {\n          controlId: \"extra\",\n          language: \"json\",\n          offerEditInModal: false, __self: this, __source: { fileName: _jsxFileName, lineNumber: 615, columnNumber: 15 } }), __self: this, __source: { fileName: _jsxFileName, lineNumber: 605, columnNumber: 11 } }),\n\n\n\n\n      ___EmotionJSX(Field, {\n        fieldKey: \"owners\",\n        label: t('Owners'),\n        description: t('Owners of the dataset'),\n        control:\n        ___EmotionJSX(SelectAsyncControl, {\n          dataEndpoint: \"api/v1/dataset/related/owners\",\n          multi: true,\n          mutator: (data) => {var _context13;return (\n              _mapInstanceProperty(_context13 = data.result).call(_context13, (pk) => ({\n                value: pk.value,\n                label: `${pk.text}` })));}, __self: this, __source: { fileName: _jsxFileName, lineNumber: 628, columnNumber: 13 } }),\n\n\n\n\n        controlProps: {}, __self: this, __source: { fileName: _jsxFileName, lineNumber: 623, columnNumber: 9 } })));\n\n\n\n  }\n\n  renderAdvancedFieldset() {\n    const { datasource } = this.state;\n    return (\n      ___EmotionJSX(Fieldset, {\n        title: t('Advanced'),\n        item: datasource,\n        onChange: this.onDatasourceChange, __self: this, __source: { fileName: _jsxFileName, lineNumber: 648, columnNumber: 7 } },\n\n      ___EmotionJSX(Field, {\n        fieldKey: \"cache_timeout\",\n        label: t('Cache timeout'),\n        description: t(\n        'The duration of time in seconds before the cache is invalidated'),\n\n        control: ___EmotionJSX(TextControl, { controlId: \"cache_timeout\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 659, columnNumber: 20 } }), __self: this, __source: { fileName: _jsxFileName, lineNumber: 653, columnNumber: 9 } }),\n\n      ___EmotionJSX(Field, {\n        fieldKey: \"offset\",\n        label: t('Hours offset'),\n        control: ___EmotionJSX(TextControl, { controlId: \"offset\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 664, columnNumber: 20 } }),\n        description: t(\n        'The number of hours, negative or positive, to shift the time column. This can be used to move UTC time to local time.'), __self: this, __source: { fileName: _jsxFileName, lineNumber: 661, columnNumber: 9 } }),\n\n\n      this.state.isSqla &&\n      ___EmotionJSX(Field, {\n        fieldKey: \"template_params\",\n        label: t('Template parameters'),\n        description: t(\n        'A set of parameters that become available in the query using Jinja templating syntax'),\n\n        control: ___EmotionJSX(TextControl, { controlId: \"template_params\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 676, columnNumber: 22 } }), __self: this, __source: { fileName: _jsxFileName, lineNumber: 670, columnNumber: 11 } })));\n\n\n\n\n  }\n\n  renderSpatialTab() {var _context14;\n    const { datasource } = this.state;\n    const { spatials, all_cols: allCols } = datasource;\n    return (\n      ___EmotionJSX(Tabs.TabPane, {\n        tab: ___EmotionJSX(CollectionTabTitle, { collection: spatials, title: t('Spatial'), __self: this, __source: { fileName: _jsxFileName, lineNumber: 688, columnNumber: 14 } }),\n        key: 4, __self: this, __source: { fileName: _jsxFileName, lineNumber: 687, columnNumber: 7 } },\n\n      ___EmotionJSX(CollectionTable, {\n        tableColumns: ['name', 'config'],\n        onChange: _bindInstanceProperty(_context14 = this.onDatasourcePropChange).call(_context14, this, 'spatials'),\n        itemGenerator: () => ({\n          name: '<new spatial>',\n          type: '<no type>',\n          config: null }),\n\n        collection: spatials,\n        allowDeletes: true,\n        itemRenderers: {\n          name: (d, onChange) =>\n          ___EmotionJSX(EditableTitle, { canEdit: true, title: d, onSaveTitle: onChange, __self: this, __source: { fileName: _jsxFileName, lineNumber: 703, columnNumber: 15 } }),\n\n          config: (v, onChange) =>\n          ___EmotionJSX(SpatialControl, { value: v, onChange: onChange, choices: allCols, __self: this, __source: { fileName: _jsxFileName, lineNumber: 706, columnNumber: 15 } }) }, __self: this, __source: { fileName: _jsxFileName, lineNumber: 691, columnNumber: 9 } })));\n\n\n\n\n\n  }\n\n  renderSourceFieldset() {\n    const { datasource } = this.state;\n    return (\n      ___EmotionJSX(\"div\", { __self: this, __source: { fileName: _jsxFileName, lineNumber: 717, columnNumber: 7 } },\n      ___EmotionJSX(\"div\", { className: \"m-l-10 m-t-20 m-b-10\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 718, columnNumber: 9 } },\n      _mapInstanceProperty(DATASOURCE_TYPES_ARR).call(DATASOURCE_TYPES_ARR, (type) => {var _context15;return (\n          ___EmotionJSX(Radio, {\n            key: type.key,\n            value: type.key,\n            inline: true,\n            onChange: _bindInstanceProperty(_context15 = this.onDatasourceTypeChange).call(_context15, this, type.key),\n            checked: this.state.datasourceType === type.key,\n            disabled: !this.state.isEditMode, __self: this, __source: { fileName: _jsxFileName, lineNumber: 720, columnNumber: 13 } },\n\n          type.label));})),\n\n\n\n      ___EmotionJSX(\"hr\", { __self: this, __source: { fileName: _jsxFileName, lineNumber: 732, columnNumber: 9 } }),\n      ___EmotionJSX(Fieldset, { item: datasource, onChange: this.onDatasourceChange, compact: true, __self: this, __source: { fileName: _jsxFileName, lineNumber: 733, columnNumber: 9 } },\n      this.state.datasourceType === DATASOURCE_TYPES.virtual.key &&\n      ___EmotionJSX(\"div\", { __self: this, __source: { fileName: _jsxFileName, lineNumber: 735, columnNumber: 13 } },\n      this.state.isSqla &&\n      ___EmotionJSX(React.Fragment, null,\n      ___EmotionJSX(Field, {\n        fieldKey: \"databaseSelector\",\n        label: t('virtual'),\n        control:\n        ___EmotionJSX(DatabaseSelector, {\n          dbId: datasource.database.id,\n          schema: datasource.schema,\n          onSchemaChange: (schema) =>\n          this.state.isEditMode &&\n          this.onDatasourcePropChange('schema', schema),\n\n          onDbChange: (database) =>\n          this.state.isEditMode &&\n          this.onDatasourcePropChange('database', database),\n\n          formMode: false,\n          handleError: this.props.addDangerToast,\n          readOnly: !this.state.isEditMode, __self: this, __source: { fileName: _jsxFileName, lineNumber: 742, columnNumber: 23 } }), __self: this, __source: { fileName: _jsxFileName, lineNumber: 738, columnNumber: 19 } }),\n\n\n\n      ___EmotionJSX(Field, {\n        fieldKey: \"table_name\",\n        label: t('Dataset name'),\n        control:\n        ___EmotionJSX(TextControl, {\n          controlId: \"table_name\",\n          onChange: (table) => {\n            this.onDatasourcePropChange('table_name', table);\n          },\n          placeholder: t('Dataset name'),\n          disabled: !this.state.isEditMode, __self: this, __source: { fileName: _jsxFileName, lineNumber: 763, columnNumber: 23 } }), __self: this, __source: { fileName: _jsxFileName, lineNumber: 759, columnNumber: 19 } }),\n\n\n\n      ___EmotionJSX(Field, {\n        fieldKey: \"sql\",\n        label: t('SQL'),\n        description: t(\n        'When specifying SQL, the datasource acts as a view. ' +\n        'Superset will use this statement as a subquery while grouping and filtering ' +\n        'on the generated parent queries.'),\n\n        control:\n        ___EmotionJSX(TextAreaControl, {\n          language: \"sql\",\n          offerEditInModal: false,\n          minLines: 20,\n          maxLines: 20,\n          readOnly: !this.state.isEditMode, __self: this, __source: { fileName: _jsxFileName, lineNumber: 782, columnNumber: 23 } }), __self: this, __source: { fileName: _jsxFileName, lineNumber: 773, columnNumber: 19 } })),\n\n\n\n\n\n      this.state.isDruid &&\n      ___EmotionJSX(Field, {\n        fieldKey: \"json\",\n        label: t('JSON'),\n        description:\n        ___EmotionJSX(\"div\", { __self: this, __source: { fileName: _jsxFileName, lineNumber: 798, columnNumber: 21 } },\n        t('The JSON metric or post aggregation definition.')),\n\n\n        control:\n        ___EmotionJSX(TextAreaControl, { language: \"json\", offerEditInModal: false, __self: this, __source: { fileName: _jsxFileName, lineNumber: 803, columnNumber: 21 } }), __self: this, __source: { fileName: _jsxFileName, lineNumber: 794, columnNumber: 17 } })),\n\n\n\n\n\n      this.state.datasourceType === DATASOURCE_TYPES.physical.key &&\n      ___EmotionJSX(Col, { xs: 24, md: 12, __self: this, __source: { fileName: _jsxFileName, lineNumber: 810, columnNumber: 13 } },\n      this.state.isSqla &&\n      ___EmotionJSX(Field, {\n        fieldKey: \"tableSelector\",\n        label: t('Physical'),\n        control:\n        ___EmotionJSX(TableSelector, {\n          clearable: false,\n          dbId: datasource.database.id,\n          handleError: this.props.addDangerToast,\n          schema: datasource.schema,\n          sqlLabMode: false,\n          tableName: datasource.table_name,\n          onSchemaChange:\n          this.state.isEditMode ?\n          (schema) =>\n          this.onDatasourcePropChange('schema', schema) :\n          undefined,\n\n          onDbChange:\n          this.state.isEditMode ?\n          (database) =>\n          this.onDatasourcePropChange('database', database) :\n          undefined,\n\n          onTableChange:\n          this.state.isEditMode ?\n          (table) =>\n          this.onDatasourcePropChange('table_name', table) :\n          undefined,\n\n          readOnly: !this.state.isEditMode, __self: this, __source: { fileName: _jsxFileName, lineNumber: 816, columnNumber: 21 } }),\n\n\n        description: t(\n        'The pointer to a physical table (or view). Keep in mind that the chart is ' +\n        'associated to this Superset logical table, and this logical table points ' +\n        'the physical table referenced here.'), __self: this, __source: { fileName: _jsxFileName, lineNumber: 812, columnNumber: 17 } }))),\n\n\n\n\n\n\n      this.allowEditSource &&\n      ___EmotionJSX(EditLockContainer, { __self: this, __source: { fileName: _jsxFileName, lineNumber: 855, columnNumber: 11 } },\n      ___EmotionJSX(\"span\", { role: \"button\", tabIndex: 0, onClick: this.onChangeEditMode, __self: this, __source: { fileName: _jsxFileName, lineNumber: 856, columnNumber: 13 } },\n      this.state.isEditMode ?\n      ___EmotionJSX(Icons.LockUnlocked, {\n        iconColor: supersetTheme.colors.grayscale.base, __self: this, __source: { fileName: _jsxFileName, lineNumber: 858, columnNumber: 17 } }) :\n\n\n      ___EmotionJSX(Icons.LockLocked, {\n        iconColor: supersetTheme.colors.grayscale.base, __self: this, __source: { fileName: _jsxFileName, lineNumber: 862, columnNumber: 17 } })),\n\n\n\n      !this.state.isEditMode &&\n      ___EmotionJSX(\"div\", { __self: this, __source: { fileName: _jsxFileName, lineNumber: 868, columnNumber: 15 } }, t('Click the lock to make changes.')),\n\n      this.state.isEditMode &&\n      ___EmotionJSX(\"div\", { __self: this, __source: { fileName: _jsxFileName, lineNumber: 871, columnNumber: 15 } }, t('Click the lock to prevent further changes.')))));\n\n\n\n\n\n  }\n\n  renderErrors() {\n    if (this.state.errors.length > 0) {var _context16;\n      return (\n        ___EmotionJSX(Alert, {\n          css: (theme) => ({ marginBottom: theme.gridUnit * 4 }),\n          type: \"error\",\n          message:\n          ___EmotionJSX(React.Fragment, null,\n          _mapInstanceProperty(_context16 = this.state.errors).call(_context16, (err) =>\n          ___EmotionJSX(\"div\", { key: err, __self: this, __source: { fileName: _jsxFileName, lineNumber: 888, columnNumber: 17 } }, err))), __self: this, __source: { fileName: _jsxFileName, lineNumber: 882, columnNumber: 9 } }));\n\n\n\n\n\n    }\n    return null;\n  }\n\n  renderMetricCollection() {var _context17;\n    return (\n      ___EmotionJSX(CollectionTable, {\n        tableColumns: ['metric_name', 'verbose_name', 'expression'],\n        sortColumns: ['metric_name', 'verbose_name', 'expression'],\n        columnLabels: {\n          metric_name: t('Metric'),\n          verbose_name: t('Label'),\n          expression: t('SQL expression') },\n\n        expandFieldset:\n        ___EmotionJSX(FormContainer, { __self: this, __source: { fileName: _jsxFileName, lineNumber: 909, columnNumber: 11 } },\n        ___EmotionJSX(Fieldset, { compact: true, __self: this, __source: { fileName: _jsxFileName, lineNumber: 910, columnNumber: 13 } },\n        ___EmotionJSX(Field, {\n          fieldKey: \"verbose_name\",\n          label: t('Label'),\n          control: ___EmotionJSX(TextControl, { controlId: \"verbose_name\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 914, columnNumber: 26 } }), __self: this, __source: { fileName: _jsxFileName, lineNumber: 911, columnNumber: 15 } }),\n\n        ___EmotionJSX(Field, {\n          fieldKey: \"description\",\n          label: t('Description'),\n          control:\n          ___EmotionJSX(TextControl, {\n            controlId: \"description\",\n            placeholder: t('Description'), __self: this, __source: { fileName: _jsxFileName, lineNumber: 920, columnNumber: 19 } }), __self: this, __source: { fileName: _jsxFileName, lineNumber: 916, columnNumber: 15 } }),\n\n\n\n        ___EmotionJSX(Field, {\n          fieldKey: \"d3format\",\n          label: t('D3 format'),\n          control:\n          ___EmotionJSX(TextControl, { controlId: \"d3format\", placeholder: \"%y/%m/%d\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 930, columnNumber: 19 } }), __self: this, __source: { fileName: _jsxFileName, lineNumber: 926, columnNumber: 15 } }),\n\n\n        ___EmotionJSX(Field, {\n          label: t('Certified by'),\n          fieldKey: \"certified_by\",\n          description: t(\n          'Person or group that has certified this metric'),\n\n          control:\n          ___EmotionJSX(TextControl, {\n            controlId: \"certified_by\",\n            placeholder: t('Certified by'), __self: this, __source: { fileName: _jsxFileName, lineNumber: 940, columnNumber: 19 } }), __self: this, __source: { fileName: _jsxFileName, lineNumber: 933, columnNumber: 15 } }),\n\n\n\n        ___EmotionJSX(Field, {\n          label: t('Certification details'),\n          fieldKey: \"certification_details\",\n          description: t('Details of the certification'),\n          control:\n          ___EmotionJSX(TextControl, {\n            controlId: \"certification_details\",\n            placeholder: t('Certification details'), __self: this, __source: { fileName: _jsxFileName, lineNumber: 951, columnNumber: 19 } }), __self: this, __source: { fileName: _jsxFileName, lineNumber: 946, columnNumber: 15 } }),\n\n\n\n        ___EmotionJSX(Field, {\n          label: t('Warning'),\n          fieldKey: \"warning_markdown\",\n          description: t('Optional warning about use of this metric'),\n          control:\n          ___EmotionJSX(TextAreaControl, {\n            controlId: \"warning_markdown\",\n            language: \"markdown\",\n            offerEditInModal: false, __self: this, __source: { fileName: _jsxFileName, lineNumber: 962, columnNumber: 19 } }), __self: this, __source: { fileName: _jsxFileName, lineNumber: 957, columnNumber: 15 } }))),\n\n\n\n\n\n\n        collection: this.state.datasource.metrics,\n        allowAddItem: true,\n        onChange: _bindInstanceProperty(_context17 = this.onDatasourcePropChange).call(_context17, this, 'metrics'),\n        itemGenerator: () => ({\n          metric_name: '<new metric>',\n          verbose_name: '',\n          expression: '' }),\n\n        itemRenderers: {\n          metric_name: (v, onChange, _, record) =>\n          ___EmotionJSX(FlexRowContainer, { __self: this, __source: { fileName: _jsxFileName, lineNumber: 982, columnNumber: 13 } },\n          record.is_certified &&\n          ___EmotionJSX(CertifiedIcon, {\n            certifiedBy: record.certified_by,\n            details: record.certification_details, __self: this, __source: { fileName: _jsxFileName, lineNumber: 984, columnNumber: 17 } }),\n\n\n          record.warning_markdown &&\n          ___EmotionJSX(WarningIconWithTooltip, {\n            warningMarkdown: record.warning_markdown, __self: this, __source: { fileName: _jsxFileName, lineNumber: 990, columnNumber: 17 } }),\n\n\n          ___EmotionJSX(EditableTitle, { canEdit: true, title: v, onSaveTitle: onChange, __self: this, __source: { fileName: _jsxFileName, lineNumber: 994, columnNumber: 15 } })),\n\n\n          verbose_name: (v, onChange) =>\n          ___EmotionJSX(EditableTitle, { canEdit: true, title: v, onSaveTitle: onChange, __self: this, __source: { fileName: _jsxFileName, lineNumber: 998, columnNumber: 13 } }),\n\n          expression: (v, onChange) =>\n          ___EmotionJSX(EditableTitle, {\n            canEdit: true,\n            title: v,\n            onSaveTitle: onChange,\n            extraClasses: ['datasource-sql-expression'],\n            multiLine: true, __self: this, __source: { fileName: _jsxFileName, lineNumber: 1001, columnNumber: 13 } }),\n\n\n          description: (v, onChange, label) =>\n          ___EmotionJSX(StackedField, {\n            label: label,\n            formElement: ___EmotionJSX(TextControl, { value: v, onChange: onChange, __self: this, __source: { fileName: _jsxFileName, lineNumber: 1012, columnNumber: 28 } }), __self: this, __source: { fileName: _jsxFileName, lineNumber: 1010, columnNumber: 13 } }),\n\n\n          d3format: (v, onChange, label) =>\n          ___EmotionJSX(StackedField, {\n            label: label,\n            formElement: ___EmotionJSX(TextControl, { value: v, onChange: onChange, __self: this, __source: { fileName: _jsxFileName, lineNumber: 1018, columnNumber: 28 } }), __self: this, __source: { fileName: _jsxFileName, lineNumber: 1016, columnNumber: 13 } }) },\n\n\n\n        allowDeletes: true,\n        stickyHeader: true, __self: this, __source: { fileName: _jsxFileName, lineNumber: 900, columnNumber: 7 } }));\n\n\n  }\n\n  render() {\n    const { datasource, activeTabKey } = this.state;\n    return (\n      ___EmotionJSX(DatasourceContainer, { __self: this, __source: { fileName: _jsxFileName, lineNumber: 1031, columnNumber: 7 } },\n      this.renderErrors(),\n      ___EmotionJSX(Alert, {\n        css: (theme) => ({ marginBottom: theme.gridUnit * 4 }),\n        type: \"warning\",\n        message:\n        ___EmotionJSX(React.Fragment, null,\n        ' ',\n        ___EmotionJSX(\"strong\", { __self: this, __source: { fileName: _jsxFileName, lineNumber: 1039, columnNumber: 15 } }, t('Be careful.'), \" \"),\n        t(\n        'Changing these settings will affect all charts using this dataset, including charts owned by other people.')), __self: this, __source: { fileName: _jsxFileName, lineNumber: 1033, columnNumber: 9 } }),\n\n\n\n\n      ___EmotionJSX(StyledTableTabs, {\n        fullWidth: false,\n        id: \"table-tabs\",\n        \"data-test\": \"edit-dataset-tabs\",\n        onChange: this.handleTabSelect,\n        defaultActiveKey: activeTabKey, __self: this, __source: { fileName: _jsxFileName, lineNumber: 1046, columnNumber: 9 } },\n\n      ___EmotionJSX(Tabs.TabPane, { key: 0, tab: t('Source'), __self: this, __source: { fileName: _jsxFileName, lineNumber: 1053, columnNumber: 11 } },\n      this.renderSourceFieldset()),\n\n      ___EmotionJSX(Tabs.TabPane, {\n        tab:\n        ___EmotionJSX(CollectionTabTitle, {\n          collection: datasource.metrics,\n          title: t('Metrics'), __self: this, __source: { fileName: _jsxFileName, lineNumber: 1058, columnNumber: 15 } }),\n\n\n        key: 1, __self: this, __source: { fileName: _jsxFileName, lineNumber: 1056, columnNumber: 11 } },\n\n      this.renderMetricCollection()),\n\n      ___EmotionJSX(Tabs.TabPane, {\n        tab:\n        ___EmotionJSX(CollectionTabTitle, {\n          collection: this.state.databaseColumns,\n          title: t('Columns'), __self: this, __source: { fileName: _jsxFileName, lineNumber: 1069, columnNumber: 15 } }),\n\n\n        key: 2, __self: this, __source: { fileName: _jsxFileName, lineNumber: 1067, columnNumber: 11 } },\n\n      ___EmotionJSX(\"div\", { __self: this, __source: { fileName: _jsxFileName, lineNumber: 1076, columnNumber: 13 } },\n      ___EmotionJSX(ColumnButtonWrapper, { __self: this, __source: { fileName: _jsxFileName, lineNumber: 1077, columnNumber: 15 } },\n      ___EmotionJSX(\"span\", { className: \"m-t-10 m-r-10\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 1078, columnNumber: 17 } },\n      ___EmotionJSX(Button, {\n        buttonSize: \"small\",\n        buttonStyle: \"primary\",\n        onClick: this.syncMetadata,\n        className: \"sync-from-source\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 1079, columnNumber: 19 } },\n\n      ___EmotionJSX(\"i\", { className: \"fa fa-database\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 1085, columnNumber: 21 } }), ' ',\n      t('Sync columns from source')))),\n\n\n\n      ___EmotionJSX(ColumnCollectionTable, {\n        className: \"columns-table\",\n        columns: this.state.databaseColumns,\n        onChange: (databaseColumns) =>\n        this.setColumns({ databaseColumns }), __self: this, __source: { fileName: _jsxFileName, lineNumber: 1090, columnNumber: 15 } }),\n\n\n      this.state.metadataLoading && ___EmotionJSX(Loading, { __self: this, __source: { fileName: _jsxFileName, lineNumber: 1097, columnNumber: 46 } }))),\n\n\n      ___EmotionJSX(Tabs.TabPane, {\n        tab:\n        ___EmotionJSX(CollectionTabTitle, {\n          collection: this.state.calculatedColumns,\n          title: t('Calculated columns'), __self: this, __source: { fileName: _jsxFileName, lineNumber: 1102, columnNumber: 15 } }),\n\n\n        key: 3, __self: this, __source: { fileName: _jsxFileName, lineNumber: 1100, columnNumber: 11 } },\n\n      ___EmotionJSX(ColumnCollectionTable, {\n        columns: this.state.calculatedColumns,\n        onChange: (calculatedColumns) =>\n        this.setColumns({ calculatedColumns }),\n\n        editableColumnName: true,\n        showExpression: true,\n        allowAddItem: true,\n        allowEditDataType: true,\n        itemGenerator: () => ({\n          column_name: '<new column>',\n          filterable: true,\n          groupby: true,\n          expression: '<enter SQL expression here>',\n          __expanded: true }), __self: this, __source: { fileName: _jsxFileName, lineNumber: 1109, columnNumber: 13 } })),\n\n\n\n      ___EmotionJSX(Tabs.TabPane, { key: 4, tab: t('Settings'), __self: this, __source: { fileName: _jsxFileName, lineNumber: 1127, columnNumber: 11 } },\n      ___EmotionJSX(Row, { gutter: 16, __self: this, __source: { fileName: _jsxFileName, lineNumber: 1128, columnNumber: 13 } },\n      ___EmotionJSX(Col, { xs: 24, md: 12, __self: this, __source: { fileName: _jsxFileName, lineNumber: 1129, columnNumber: 15 } },\n      ___EmotionJSX(FormContainer, { __self: this, __source: { fileName: _jsxFileName, lineNumber: 1130, columnNumber: 17 } }, this.renderSettingsFieldset())),\n\n      ___EmotionJSX(Col, { xs: 24, md: 12, __self: this, __source: { fileName: _jsxFileName, lineNumber: 1132, columnNumber: 15 } },\n      ___EmotionJSX(FormContainer, { __self: this, __source: { fileName: _jsxFileName, lineNumber: 1133, columnNumber: 17 } }, this.renderAdvancedFieldset())))))));\n\n\n\n\n\n\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}}\nDatasourceEditor.defaultProps = defaultProps;\nDatasourceEditor.propTypes = propTypes;const _default =\n\nwithToasts(DatasourceEditor);export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(DatasourceContainer, \"DatasourceContainer\", \"/Users/frankhe/projects/superset/superset-frontend/src/datasource/DatasourceEditor.jsx\");reactHotLoader.register(FlexRowContainer, \"FlexRowContainer\", \"/Users/frankhe/projects/superset/superset-frontend/src/datasource/DatasourceEditor.jsx\");reactHotLoader.register(StyledTableTabs, \"StyledTableTabs\", \"/Users/frankhe/projects/superset/superset-frontend/src/datasource/DatasourceEditor.jsx\");reactHotLoader.register(StyledBadge, \"StyledBadge\", \"/Users/frankhe/projects/superset/superset-frontend/src/datasource/DatasourceEditor.jsx\");reactHotLoader.register(EditLockContainer, \"EditLockContainer\", \"/Users/frankhe/projects/superset/superset-frontend/src/datasource/DatasourceEditor.jsx\");reactHotLoader.register(ColumnButtonWrapper, \"ColumnButtonWrapper\", \"/Users/frankhe/projects/superset/superset-frontend/src/datasource/DatasourceEditor.jsx\");reactHotLoader.register(checkboxGenerator, \"checkboxGenerator\", \"/Users/frankhe/projects/superset/superset-frontend/src/datasource/DatasourceEditor.jsx\");reactHotLoader.register(DATA_TYPES, \"DATA_TYPES\", \"/Users/frankhe/projects/superset/superset-frontend/src/datasource/DatasourceEditor.jsx\");reactHotLoader.register(DATASOURCE_TYPES_ARR, \"DATASOURCE_TYPES_ARR\", \"/Users/frankhe/projects/superset/superset-frontend/src/datasource/DatasourceEditor.jsx\");reactHotLoader.register(DATASOURCE_TYPES, \"DATASOURCE_TYPES\", \"/Users/frankhe/projects/superset/superset-frontend/src/datasource/DatasourceEditor.jsx\");reactHotLoader.register(CollectionTabTitle, \"CollectionTabTitle\", \"/Users/frankhe/projects/superset/superset-frontend/src/datasource/DatasourceEditor.jsx\");reactHotLoader.register(ColumnCollectionTable, \"ColumnCollectionTable\", \"/Users/frankhe/projects/superset/superset-frontend/src/datasource/DatasourceEditor.jsx\");reactHotLoader.register(StackedField, \"StackedField\", \"/Users/frankhe/projects/superset/superset-frontend/src/datasource/DatasourceEditor.jsx\");reactHotLoader.register(FormContainer, \"FormContainer\", \"/Users/frankhe/projects/superset/superset-frontend/src/datasource/DatasourceEditor.jsx\");reactHotLoader.register(propTypes, \"propTypes\", \"/Users/frankhe/projects/superset/superset-frontend/src/datasource/DatasourceEditor.jsx\");reactHotLoader.register(defaultProps, \"defaultProps\", \"/Users/frankhe/projects/superset/superset-frontend/src/datasource/DatasourceEditor.jsx\");reactHotLoader.register(DatasourceEditor, \"DatasourceEditor\", \"/Users/frankhe/projects/superset/superset-frontend/src/datasource/DatasourceEditor.jsx\");reactHotLoader.register(_default, \"default\", \"/Users/frankhe/projects/superset/superset-frontend/src/datasource/DatasourceEditor.jsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/Users/frankhe/projects/superset/superset-frontend/src/datasource/DatasourceEditor.jsx"],"names":["React","PropTypes","Row","Col","Radio","Card","Alert","Badge","shortid","styled","SupersetClient","t","supersetTheme","Button","Tabs","CertifiedIcon","WarningIconWithTooltip","DatabaseSelector","Label","Loading","TableSelector","EditableTitle","getClientErrorObject","CheckboxControl","TextControl","SelectControl","TextAreaControl","SelectAsyncControl","SpatialControl","CollectionTable","Fieldset","Field","withToasts","FeatureFlag","isFeatureEnabled","Icons","DatasourceContainer","div","theme","colors","warning","base","typography","weights","bold","FlexRowContainer","gridUnit","StyledTableTabs","StyledBadge","EditLockContainer","sizes","s","ColumnButtonWrapper","checkboxGenerator","d","onChange","DATA_TYPES","DATASOURCE_TYPES_ARR","key","label","DATASOURCE_TYPES","o","CollectionTabTitle","title","collection","length","propTypes","string","array","ColumnCollectionTable","columns","editableColumnName","showExpression","allowAddItem","allowEditDataType","itemGenerator","column_name","type","groupby","is_dttm","filterable","v","onItemChange","isRequired","func","bool","defaultProps","StackedField","formElement","node","FormContainer","children","datasource","object","addSuccessToast","addDangerToast","DatasourceEditor","PureComponent","constructor","props","state","metrics","metric","certification","details","certified_by","certifiedBy","warning_markdown","warningMarkdown","JSON","parse","extra","certification_details","errors","isDruid","datasource_type","isSqla","isEditMode","databaseColumns","col","expression","calculatedColumns","metadataLoading","activeTabKey","datasourceType","sql","virtual","physical","onChangeEditMode","onDatasourcePropChange","onDatasourceChange","syncMetadata","setColumns","validateAndChange","handleTabSelect","allowEditSource","DISABLE_DATASET_SOURCE_EDIT","newDatasource","setState","prevState","attr","value","onDatasourceTypeChange","obj","validate","updateColumns","cols","databaseColumnNames","name","currentCols","agg","finalColumns","results","added","modified","removed","currentCol","push","id","generate","endpoint","get","then","json","join","catch","response","error","statusText","findDuplicates","arr","accessor","seen","dups","item","callback","metric_name","noFilterCalcCols","renderSettingsFieldset","data","result","pk","text","renderAdvancedFieldset","renderSpatialTab","spatials","all_cols","allCols","config","renderSourceFieldset","database","schema","table","table_name","undefined","grayscale","renderErrors","marginBottom","err","renderMetricCollection","verbose_name","_","record","is_certified","description","d3format","render","__expanded"],"mappings":"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","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Row, Col } from 'src/common/components';\nimport { Radio } from 'src/components/Radio';\nimport Card from 'src/components/Card';\nimport Alert from 'src/components/Alert';\nimport Badge from 'src/components/Badge';\nimport shortid from 'shortid';\nimport { styled, SupersetClient, t, supersetTheme } from '@superset-ui/core';\nimport Button from 'src/components/Button';\nimport Tabs from 'src/components/Tabs';\nimport CertifiedIcon from 'src/components/CertifiedIcon';\nimport WarningIconWithTooltip from 'src/components/WarningIconWithTooltip';\nimport DatabaseSelector from 'src/components/DatabaseSelector';\nimport Label from 'src/components/Label';\nimport Loading from 'src/components/Loading';\nimport TableSelector from 'src/components/TableSelector';\nimport EditableTitle from 'src/components/EditableTitle';\n\nimport { getClientErrorObject } from 'src/utils/getClientErrorObject';\n\nimport CheckboxControl from 'src/explore/components/controls/CheckboxControl';\nimport TextControl from 'src/explore/components/controls/TextControl';\nimport SelectControl from 'src/explore/components/controls/SelectControl';\nimport TextAreaControl from 'src/explore/components/controls/TextAreaControl';\nimport SelectAsyncControl from 'src/explore/components/controls/SelectAsyncControl';\nimport SpatialControl from 'src/explore/components/controls/SpatialControl';\n\nimport CollectionTable from 'src/CRUD/CollectionTable';\nimport Fieldset from 'src/CRUD/Fieldset';\nimport Field from 'src/CRUD/Field';\n\nimport withToasts from 'src/messageToasts/enhancers/withToasts';\nimport { FeatureFlag, isFeatureEnabled } from 'src/featureFlags';\nimport Icons from 'src/components/Icons';\n\nconst DatasourceContainer = styled.div`\n  .change-warning {\n    margin: 16px 10px 0;\n    color: ${({ theme }) => theme.colors.warning.base};\n  }\n\n  .change-warning .bold {\n    font-weight: ${({ theme }) => theme.typography.weights.bold};\n  }\n\n  .form-group.has-feedback > .help-block {\n    margin-top: 8px;\n  }\n\n  .form-group.form-group-md {\n    margin-bottom: 8px;\n  }\n`;\n\nconst FlexRowContainer = styled.div`\n  align-items: center;\n  display: flex;\n\n  svg {\n    margin-right: ${({ theme }) => theme.gridUnit}px;\n  }\n`;\n\nconst StyledTableTabs = styled(Tabs)`\n  overflow: visible;\n  .ant-tabs-content-holder {\n    overflow: visible;\n  }\n`;\n\nconst StyledBadge = styled(Badge)`\n  .ant-badge-count {\n    line-height: ${({ theme }) => theme.gridUnit * 4}px;\n    height: ${({ theme }) => theme.gridUnit * 4}px;\n    margin-left: ${({ theme }) => theme.gridUnit}px;\n  }\n`;\n\nconst EditLockContainer = styled.div`\n  font-size: ${supersetTheme.typography.sizes.s}px;\n  display: flex;\n  align-items: center;\n  a {\n    padding: 0 10px;\n  }\n`;\n\nconst ColumnButtonWrapper = styled.div`\n  text-align: right;\n  ${({ theme }) => `margin-bottom: ${theme.gridUnit * 2}px`}\n`;\n\nconst checkboxGenerator = (d, onChange) => (\n  <CheckboxControl value={d} onChange={onChange} />\n);\nconst DATA_TYPES = ['STRING', 'NUMERIC', 'DATETIME'];\n\nconst DATASOURCE_TYPES_ARR = [\n  { key: 'physical', label: t('Physical (table or view)') },\n  { key: 'virtual', label: t('Virtual (SQL)') },\n];\nconst DATASOURCE_TYPES = {};\nDATASOURCE_TYPES_ARR.forEach(o => {\n  DATASOURCE_TYPES[o.key] = o;\n});\n\nfunction CollectionTabTitle({ title, collection }) {\n  return (\n    <div\n      css={{ display: 'flex', alignItems: 'center' }}\n      data-test={`collection-tab-${title}`}\n    >\n      {title}{' '}\n      <StyledBadge count={collection ? collection.length : 0} showZero />\n    </div>\n  );\n}\n\nCollectionTabTitle.propTypes = {\n  title: PropTypes.string,\n  collection: PropTypes.array,\n};\n\nfunction ColumnCollectionTable({\n  columns,\n  onChange,\n  editableColumnName,\n  showExpression,\n  allowAddItem,\n  allowEditDataType,\n  itemGenerator,\n}) {\n  return (\n    <CollectionTable\n      collection={columns}\n      tableColumns={['column_name', 'type', 'is_dttm', 'filterable', 'groupby']}\n      sortColumns={['column_name', 'type', 'is_dttm', 'filterable', 'groupby']}\n      allowDeletes\n      allowAddItem={allowAddItem}\n      itemGenerator={itemGenerator}\n      stickyHeader\n      expandFieldset={\n        <FormContainer>\n          <Fieldset compact>\n            {showExpression && (\n              <Field\n                fieldKey=\"expression\"\n                label={t('SQL expression')}\n                control={\n                  <TextAreaControl\n                    language=\"markdown\"\n                    offerEditInModal={false}\n                  />\n                }\n              />\n            )}\n            <Field\n              fieldKey=\"verbose_name\"\n              label={t('Label')}\n              control={\n                <TextControl\n                  controlId=\"verbose_name\"\n                  placeholder={t('Label')}\n                />\n              }\n            />\n            <Field\n              fieldKey=\"description\"\n              label={t('Description')}\n              control={\n                <TextControl\n                  controlId=\"description\"\n                  placeholder={t('Description')}\n                />\n              }\n            />\n            {allowEditDataType && (\n              <Field\n                fieldKey=\"type\"\n                label={t('Data type')}\n                control={\n                  <SelectControl choices={DATA_TYPES} name=\"type\" freeForm />\n                }\n              />\n            )}\n            <Field\n              fieldKey=\"python_date_format\"\n              label={t('Datetime format')}\n              description={\n                /* Note the fragmented translations may not work. */\n                <div>\n                  {t('The pattern of timestamp format. For strings use ')}\n                  <a href=\"https://docs.python.org/2/library/datetime.html#strftime-strptime-behavior\">\n                    {t('Python datetime string pattern')}\n                  </a>\n                  {t(' expression which needs to adhere to the ')}\n                  <a href=\"https://en.wikipedia.org/wiki/ISO_8601\">\n                    {t('ISO 8601')}\n                  </a>\n                  {t(` standard to ensure that the lexicographical ordering\n                      coincides with the chronological ordering. If the\n                      timestamp format does not adhere to the ISO 8601 standard\n                      you will need to define an expression and type for\n                      transforming the string into a date or timestamp. Note\n                      currently time zones are not supported. If time is stored\n                      in epoch format, put \\`epoch_s\\` or \\`epoch_ms\\`. If no pattern\n                      is specified we fall back to using the optional defaults on a per\n                      database/column name level via the extra parameter.`)}\n                </div>\n              }\n              control={\n                <TextControl\n                  controlId=\"python_date_format\"\n                  placeholder=\"%Y/%m/%d\"\n                />\n              }\n            />\n          </Fieldset>\n        </FormContainer>\n      }\n      columnLabels={{\n        column_name: t('Column'),\n        type: t('Data type'),\n        groupby: t('Is dimension'),\n        is_dttm: t('Is temporal'),\n        filterable: t('Is filterable'),\n      }}\n      onChange={onChange}\n      itemRenderers={{\n        column_name: (v, onItemChange) =>\n          editableColumnName ? (\n            <EditableTitle canEdit title={v} onSaveTitle={onItemChange} />\n          ) : (\n            v\n          ),\n        type: d => (d ? <Label>{d}</Label> : null),\n        is_dttm: checkboxGenerator,\n        filterable: checkboxGenerator,\n        groupby: checkboxGenerator,\n      }}\n    />\n  );\n}\nColumnCollectionTable.propTypes = {\n  columns: PropTypes.array.isRequired,\n  onChange: PropTypes.func.isRequired,\n  editableColumnName: PropTypes.bool,\n  showExpression: PropTypes.bool,\n  allowAddItem: PropTypes.bool,\n  allowEditDataType: PropTypes.bool,\n  itemGenerator: PropTypes.func,\n};\nColumnCollectionTable.defaultProps = {\n  editableColumnName: false,\n  showExpression: false,\n  allowAddItem: false,\n  allowEditDataType: false,\n  itemGenerator: () => ({\n    column_name: '<new column>',\n    filterable: true,\n    groupby: true,\n  }),\n};\n\nfunction StackedField({ label, formElement }) {\n  return (\n    <div>\n      <div>\n        <strong>{label}</strong>\n      </div>\n      <div>{formElement}</div>\n    </div>\n  );\n}\n\nStackedField.propTypes = {\n  label: PropTypes.string,\n  formElement: PropTypes.node,\n};\n\nfunction FormContainer({ children }) {\n  return <Card padded>{children}</Card>;\n}\n\nFormContainer.propTypes = {\n  children: PropTypes.node,\n};\n\nconst propTypes = {\n  datasource: PropTypes.object.isRequired,\n  onChange: PropTypes.func,\n  addSuccessToast: PropTypes.func.isRequired,\n  addDangerToast: PropTypes.func.isRequired,\n};\n\nconst defaultProps = {\n  onChange: () => {},\n};\n\nclass DatasourceEditor extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      datasource: {\n        ...props.datasource,\n        metrics: props.datasource.metrics?.map(metric => {\n          const {\n            certification: { details, certified_by: certifiedBy } = {},\n            warning_markdown: warningMarkdown,\n          } = JSON.parse(metric.extra || '{}') || {};\n          return {\n            ...metric,\n            certification_details: details || '',\n            warning_markdown: warningMarkdown || '',\n            certified_by: certifiedBy,\n          };\n        }),\n      },\n      errors: [],\n      isDruid:\n        props.datasource.type === 'druid' ||\n        props.datasource.datasource_type === 'druid',\n      isSqla:\n        props.datasource.datasource_type === 'table' ||\n        props.datasource.type === 'table',\n      isEditMode: false,\n      databaseColumns: props.datasource.columns.filter(col => !col.expression),\n      calculatedColumns: props.datasource.columns.filter(\n        col => !!col.expression,\n      ),\n      metadataLoading: false,\n      activeTabKey: 0,\n      datasourceType: props.datasource.sql\n        ? DATASOURCE_TYPES.virtual.key\n        : DATASOURCE_TYPES.physical.key,\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.onChangeEditMode = this.onChangeEditMode.bind(this);\n    this.onDatasourcePropChange = this.onDatasourcePropChange.bind(this);\n    this.onDatasourceChange = this.onDatasourceChange.bind(this);\n    this.syncMetadata = this.syncMetadata.bind(this);\n    this.setColumns = this.setColumns.bind(this);\n    this.validateAndChange = this.validateAndChange.bind(this);\n    this.handleTabSelect = this.handleTabSelect.bind(this);\n    this.allowEditSource = !isFeatureEnabled(\n      FeatureFlag.DISABLE_DATASET_SOURCE_EDIT,\n    );\n  }\n\n  onChange() {\n    // Emptying SQL if \"Physical\" radio button is selected\n    // Currently the logic to know whether the source is\n    // physical or virtual is based on whether SQL is empty or not.\n    const { datasourceType, datasource } = this.state;\n    const sql =\n      datasourceType === DATASOURCE_TYPES.physical.key ? '' : datasource.sql;\n\n    const newDatasource = {\n      ...this.state.datasource,\n      sql,\n      columns: [...this.state.databaseColumns, ...this.state.calculatedColumns],\n    };\n    this.props.onChange(newDatasource, this.state.errors);\n  }\n\n  onChangeEditMode() {\n    this.setState(prevState => ({ isEditMode: !prevState.isEditMode }));\n  }\n\n  onDatasourceChange(datasource) {\n    this.setState({ datasource }, this.validateAndChange);\n  }\n\n  onDatasourcePropChange(attr, value) {\n    const datasource = { ...this.state.datasource, [attr]: value };\n    this.setState(\n      prevState => ({\n        datasource: { ...prevState.datasource, [attr]: value },\n      }),\n      this.onDatasourceChange(datasource),\n    );\n  }\n\n  onDatasourceTypeChange(datasourceType) {\n    this.setState({ datasourceType });\n  }\n\n  setColumns(obj) {\n    // update calculatedColumns or databaseColumns\n    this.setState(obj, this.validateAndChange);\n  }\n\n  validateAndChange() {\n    this.validate(this.onChange);\n  }\n\n  updateColumns(cols) {\n    const { databaseColumns } = this.state;\n    const databaseColumnNames = cols.map(col => col.name);\n    const currentCols = databaseColumns.reduce(\n      (agg, col) => ({\n        ...agg,\n        [col.column_name]: col,\n      }),\n      {},\n    );\n    const finalColumns = [];\n    const results = {\n      added: [],\n      modified: [],\n      removed: databaseColumns\n        .map(col => col.column_name)\n        .filter(col => !databaseColumnNames.includes(col)),\n    };\n    cols.forEach(col => {\n      const currentCol = currentCols[col.name];\n      if (!currentCol) {\n        // new column\n        finalColumns.push({\n          id: shortid.generate(),\n          column_name: col.name,\n          type: col.type,\n          groupby: true,\n          filterable: true,\n          is_dttm: col.is_dttm,\n        });\n        results.added.push(col.name);\n      } else if (\n        currentCol.type !== col.type ||\n        currentCol.is_dttm !== col.is_dttm\n      ) {\n        // modified column\n        finalColumns.push({\n          ...currentCol,\n          type: col.type,\n          is_dttm: col.is_dttm,\n        });\n        results.modified.push(col.name);\n      } else {\n        // unchanged\n        finalColumns.push(currentCol);\n      }\n    });\n    if (\n      results.added.length ||\n      results.modified.length ||\n      results.removed.length\n    ) {\n      this.setColumns({ databaseColumns: finalColumns });\n    }\n    return results;\n  }\n\n  syncMetadata() {\n    const { datasource } = this.state;\n    const endpoint = `/datasource/external_metadata/${\n      datasource.type || datasource.datasource_type\n    }/${datasource.id}/`;\n    this.setState({ metadataLoading: true });\n\n    SupersetClient.get({ endpoint })\n      .then(({ json }) => {\n        const results = this.updateColumns(json);\n        if (results.modified.length) {\n          this.props.addSuccessToast(\n            t('Modified columns: %s', results.modified.join(', ')),\n          );\n        }\n        if (results.removed.length) {\n          this.props.addSuccessToast(\n            t('Removed columns: %s', results.removed.join(', ')),\n          );\n        }\n        if (results.added.length) {\n          this.props.addSuccessToast(\n            t('New columns added: %s', results.added.join(', ')),\n          );\n        }\n        this.props.addSuccessToast(t('Metadata has been synced'));\n        this.setState({ metadataLoading: false });\n      })\n      .catch(response =>\n        getClientErrorObject(response).then(({ error, statusText }) => {\n          this.props.addDangerToast(\n            error || statusText || t('An error has occurred'),\n          );\n          this.setState({ metadataLoading: false });\n        }),\n      );\n  }\n\n  findDuplicates(arr, accessor) {\n    const seen = {};\n    const dups = [];\n    arr.forEach(obj => {\n      const item = accessor(obj);\n      if (item in seen) {\n        dups.push(item);\n      } else {\n        seen[item] = null;\n      }\n    });\n    return dups;\n  }\n\n  validate(callback) {\n    let errors = [];\n    let dups;\n    const { datasource } = this.state;\n\n    // Looking for duplicate column_name\n    dups = this.findDuplicates(datasource.columns, obj => obj.column_name);\n    errors = errors.concat(\n      dups.map(name => t('Column name [%s] is duplicated', name)),\n    );\n\n    // Looking for duplicate metric_name\n    dups = this.findDuplicates(datasource.metrics, obj => obj.metric_name);\n    errors = errors.concat(\n      dups.map(name => t('Metric name [%s] is duplicated', name)),\n    );\n\n    // Making sure calculatedColumns have an expression defined\n    const noFilterCalcCols = this.state.calculatedColumns.filter(\n      col => !col.expression && !col.json,\n    );\n    errors = errors.concat(\n      noFilterCalcCols.map(col =>\n        t('Calculated column [%s] requires an expression', col.column_name),\n      ),\n    );\n\n    this.setState({ errors }, callback);\n  }\n\n  handleTabSelect(activeTabKey) {\n    this.setState({ activeTabKey });\n  }\n\n  renderSettingsFieldset() {\n    const { datasource } = this.state;\n    return (\n      <Fieldset\n        title={t('Basic')}\n        item={datasource}\n        onChange={this.onDatasourceChange}\n      >\n        <Field\n          fieldKey=\"description\"\n          label={t('Description')}\n          control={\n            <TextAreaControl language=\"markdown\" offerEditInModal={false} />\n          }\n        />\n        <Field\n          fieldKey=\"default_endpoint\"\n          label={t('Default URL')}\n          description={t(\n            'Default URL to redirect to when accessing from the dataset list page',\n          )}\n          control={<TextControl controlId=\"default_endpoint\" />}\n        />\n        <Field\n          inline\n          fieldKey=\"filter_select_enabled\"\n          label={t('Autocomplete filters')}\n          description={t('Whether to populate autocomplete filters options')}\n          control={<CheckboxControl />}\n        />\n        {this.state.isSqla && (\n          <Field\n            fieldKey=\"fetch_values_predicate\"\n            label={t('Autocomplete query predicate')}\n            description={t(\n              'When using \"Autocomplete filters\", this can be used to improve performance ' +\n                'of the query fetching the values. Use this option to apply a ' +\n                'predicate (WHERE clause) to the query selecting the distinct ' +\n                'values from the table. Typically the intent would be to limit the scan ' +\n                'by applying a relative time filter on a partitioned or indexed time-related field.',\n            )}\n            control={<TextControl controlId=\"fetch_values_predicate\" />}\n          />\n        )}\n        {this.state.isSqla && (\n          <Field\n            fieldKey=\"extra\"\n            label={t('Extra')}\n            description={t(\n              'Extra data to specify table metadata. Currently supports ' +\n                'metadata of the format: `{ \"certification\": { \"certified_by\": ' +\n                '\"Data Platform Team\", \"details\": \"This table is the source of truth.\" ' +\n                '}, \"warning_markdown\": \"This is a warning.\" }`.',\n            )}\n            control={\n              <TextAreaControl\n                controlId=\"extra\"\n                language=\"json\"\n                offerEditInModal={false}\n              />\n            }\n          />\n        )}\n        <Field\n          fieldKey=\"owners\"\n          label={t('Owners')}\n          description={t('Owners of the dataset')}\n          control={\n            <SelectAsyncControl\n              dataEndpoint=\"api/v1/dataset/related/owners\"\n              multi\n              mutator={data =>\n                data.result.map(pk => ({\n                  value: pk.value,\n                  label: `${pk.text}`,\n                }))\n              }\n            />\n          }\n          controlProps={{}}\n        />\n      </Fieldset>\n    );\n  }\n\n  renderAdvancedFieldset() {\n    const { datasource } = this.state;\n    return (\n      <Fieldset\n        title={t('Advanced')}\n        item={datasource}\n        onChange={this.onDatasourceChange}\n      >\n        <Field\n          fieldKey=\"cache_timeout\"\n          label={t('Cache timeout')}\n          description={t(\n            'The duration of time in seconds before the cache is invalidated',\n          )}\n          control={<TextControl controlId=\"cache_timeout\" />}\n        />\n        <Field\n          fieldKey=\"offset\"\n          label={t('Hours offset')}\n          control={<TextControl controlId=\"offset\" />}\n          description={t(\n            'The number of hours, negative or positive, to shift the time column. This can be used to move UTC time to local time.',\n          )}\n        />\n        {this.state.isSqla && (\n          <Field\n            fieldKey=\"template_params\"\n            label={t('Template parameters')}\n            description={t(\n              'A set of parameters that become available in the query using Jinja templating syntax',\n            )}\n            control={<TextControl controlId=\"template_params\" />}\n          />\n        )}\n      </Fieldset>\n    );\n  }\n\n  renderSpatialTab() {\n    const { datasource } = this.state;\n    const { spatials, all_cols: allCols } = datasource;\n    return (\n      <Tabs.TabPane\n        tab={<CollectionTabTitle collection={spatials} title={t('Spatial')} />}\n        key={4}\n      >\n        <CollectionTable\n          tableColumns={['name', 'config']}\n          onChange={this.onDatasourcePropChange.bind(this, 'spatials')}\n          itemGenerator={() => ({\n            name: '<new spatial>',\n            type: '<no type>',\n            config: null,\n          })}\n          collection={spatials}\n          allowDeletes\n          itemRenderers={{\n            name: (d, onChange) => (\n              <EditableTitle canEdit title={d} onSaveTitle={onChange} />\n            ),\n            config: (v, onChange) => (\n              <SpatialControl value={v} onChange={onChange} choices={allCols} />\n            ),\n          }}\n        />\n      </Tabs.TabPane>\n    );\n  }\n\n  renderSourceFieldset() {\n    const { datasource } = this.state;\n    return (\n      <div>\n        <div className=\"m-l-10 m-t-20 m-b-10\">\n          {DATASOURCE_TYPES_ARR.map(type => (\n            <Radio\n              key={type.key}\n              value={type.key}\n              inline\n              onChange={this.onDatasourceTypeChange.bind(this, type.key)}\n              checked={this.state.datasourceType === type.key}\n              disabled={!this.state.isEditMode}\n            >\n              {type.label}\n            </Radio>\n          ))}\n        </div>\n        <hr />\n        <Fieldset item={datasource} onChange={this.onDatasourceChange} compact>\n          {this.state.datasourceType === DATASOURCE_TYPES.virtual.key && (\n            <div>\n              {this.state.isSqla && (\n                <>\n                  <Field\n                    fieldKey=\"databaseSelector\"\n                    label={t('virtual')}\n                    control={\n                      <DatabaseSelector\n                        dbId={datasource.database.id}\n                        schema={datasource.schema}\n                        onSchemaChange={schema =>\n                          this.state.isEditMode &&\n                          this.onDatasourcePropChange('schema', schema)\n                        }\n                        onDbChange={database =>\n                          this.state.isEditMode &&\n                          this.onDatasourcePropChange('database', database)\n                        }\n                        formMode={false}\n                        handleError={this.props.addDangerToast}\n                        readOnly={!this.state.isEditMode}\n                      />\n                    }\n                  />\n                  <Field\n                    fieldKey=\"table_name\"\n                    label={t('Dataset name')}\n                    control={\n                      <TextControl\n                        controlId=\"table_name\"\n                        onChange={table => {\n                          this.onDatasourcePropChange('table_name', table);\n                        }}\n                        placeholder={t('Dataset name')}\n                        disabled={!this.state.isEditMode}\n                      />\n                    }\n                  />\n                  <Field\n                    fieldKey=\"sql\"\n                    label={t('SQL')}\n                    description={t(\n                      'When specifying SQL, the datasource acts as a view. ' +\n                        'Superset will use this statement as a subquery while grouping and filtering ' +\n                        'on the generated parent queries.',\n                    )}\n                    control={\n                      <TextAreaControl\n                        language=\"sql\"\n                        offerEditInModal={false}\n                        minLines={20}\n                        maxLines={20}\n                        readOnly={!this.state.isEditMode}\n                      />\n                    }\n                  />\n                </>\n              )}\n              {this.state.isDruid && (\n                <Field\n                  fieldKey=\"json\"\n                  label={t('JSON')}\n                  description={\n                    <div>\n                      {t('The JSON metric or post aggregation definition.')}\n                    </div>\n                  }\n                  control={\n                    <TextAreaControl language=\"json\" offerEditInModal={false} />\n                  }\n                />\n              )}\n            </div>\n          )}\n          {this.state.datasourceType === DATASOURCE_TYPES.physical.key && (\n            <Col xs={24} md={12}>\n              {this.state.isSqla && (\n                <Field\n                  fieldKey=\"tableSelector\"\n                  label={t('Physical')}\n                  control={\n                    <TableSelector\n                      clearable={false}\n                      dbId={datasource.database.id}\n                      handleError={this.props.addDangerToast}\n                      schema={datasource.schema}\n                      sqlLabMode={false}\n                      tableName={datasource.table_name}\n                      onSchemaChange={\n                        this.state.isEditMode\n                          ? schema =>\n                              this.onDatasourcePropChange('schema', schema)\n                          : undefined\n                      }\n                      onDbChange={\n                        this.state.isEditMode\n                          ? database =>\n                              this.onDatasourcePropChange('database', database)\n                          : undefined\n                      }\n                      onTableChange={\n                        this.state.isEditMode\n                          ? table =>\n                              this.onDatasourcePropChange('table_name', table)\n                          : undefined\n                      }\n                      readOnly={!this.state.isEditMode}\n                    />\n                  }\n                  description={t(\n                    'The pointer to a physical table (or view). Keep in mind that the chart is ' +\n                      'associated to this Superset logical table, and this logical table points ' +\n                      'the physical table referenced here.',\n                  )}\n                />\n              )}\n            </Col>\n          )}\n        </Fieldset>\n        {this.allowEditSource && (\n          <EditLockContainer>\n            <span role=\"button\" tabIndex={0} onClick={this.onChangeEditMode}>\n              {this.state.isEditMode ? (\n                <Icons.LockUnlocked\n                  iconColor={supersetTheme.colors.grayscale.base}\n                />\n              ) : (\n                <Icons.LockLocked\n                  iconColor={supersetTheme.colors.grayscale.base}\n                />\n              )}\n            </span>\n            {!this.state.isEditMode && (\n              <div>{t('Click the lock to make changes.')}</div>\n            )}\n            {this.state.isEditMode && (\n              <div>{t('Click the lock to prevent further changes.')}</div>\n            )}\n          </EditLockContainer>\n        )}\n      </div>\n    );\n  }\n\n  renderErrors() {\n    if (this.state.errors.length > 0) {\n      return (\n        <Alert\n          css={theme => ({ marginBottom: theme.gridUnit * 4 })}\n          type=\"error\"\n          message={\n            <>\n              {this.state.errors.map(err => (\n                <div key={err}>{err}</div>\n              ))}\n            </>\n          }\n        />\n      );\n    }\n    return null;\n  }\n\n  renderMetricCollection() {\n    return (\n      <CollectionTable\n        tableColumns={['metric_name', 'verbose_name', 'expression']}\n        sortColumns={['metric_name', 'verbose_name', 'expression']}\n        columnLabels={{\n          metric_name: t('Metric'),\n          verbose_name: t('Label'),\n          expression: t('SQL expression'),\n        }}\n        expandFieldset={\n          <FormContainer>\n            <Fieldset compact>\n              <Field\n                fieldKey=\"verbose_name\"\n                label={t('Label')}\n                control={<TextControl controlId=\"verbose_name\" />}\n              />\n              <Field\n                fieldKey=\"description\"\n                label={t('Description')}\n                control={\n                  <TextControl\n                    controlId=\"description\"\n                    placeholder={t('Description')}\n                  />\n                }\n              />\n              <Field\n                fieldKey=\"d3format\"\n                label={t('D3 format')}\n                control={\n                  <TextControl controlId=\"d3format\" placeholder=\"%y/%m/%d\" />\n                }\n              />\n              <Field\n                label={t('Certified by')}\n                fieldKey=\"certified_by\"\n                description={t(\n                  'Person or group that has certified this metric',\n                )}\n                control={\n                  <TextControl\n                    controlId=\"certified_by\"\n                    placeholder={t('Certified by')}\n                  />\n                }\n              />\n              <Field\n                label={t('Certification details')}\n                fieldKey=\"certification_details\"\n                description={t('Details of the certification')}\n                control={\n                  <TextControl\n                    controlId=\"certification_details\"\n                    placeholder={t('Certification details')}\n                  />\n                }\n              />\n              <Field\n                label={t('Warning')}\n                fieldKey=\"warning_markdown\"\n                description={t('Optional warning about use of this metric')}\n                control={\n                  <TextAreaControl\n                    controlId=\"warning_markdown\"\n                    language=\"markdown\"\n                    offerEditInModal={false}\n                  />\n                }\n              />\n            </Fieldset>\n          </FormContainer>\n        }\n        collection={this.state.datasource.metrics}\n        allowAddItem\n        onChange={this.onDatasourcePropChange.bind(this, 'metrics')}\n        itemGenerator={() => ({\n          metric_name: '<new metric>',\n          verbose_name: '',\n          expression: '',\n        })}\n        itemRenderers={{\n          metric_name: (v, onChange, _, record) => (\n            <FlexRowContainer>\n              {record.is_certified && (\n                <CertifiedIcon\n                  certifiedBy={record.certified_by}\n                  details={record.certification_details}\n                />\n              )}\n              {record.warning_markdown && (\n                <WarningIconWithTooltip\n                  warningMarkdown={record.warning_markdown}\n                />\n              )}\n              <EditableTitle canEdit title={v} onSaveTitle={onChange} />\n            </FlexRowContainer>\n          ),\n          verbose_name: (v, onChange) => (\n            <EditableTitle canEdit title={v} onSaveTitle={onChange} />\n          ),\n          expression: (v, onChange) => (\n            <EditableTitle\n              canEdit\n              title={v}\n              onSaveTitle={onChange}\n              extraClasses={['datasource-sql-expression']}\n              multiLine\n            />\n          ),\n          description: (v, onChange, label) => (\n            <StackedField\n              label={label}\n              formElement={<TextControl value={v} onChange={onChange} />}\n            />\n          ),\n          d3format: (v, onChange, label) => (\n            <StackedField\n              label={label}\n              formElement={<TextControl value={v} onChange={onChange} />}\n            />\n          ),\n        }}\n        allowDeletes\n        stickyHeader\n      />\n    );\n  }\n\n  render() {\n    const { datasource, activeTabKey } = this.state;\n    return (\n      <DatasourceContainer>\n        {this.renderErrors()}\n        <Alert\n          css={theme => ({ marginBottom: theme.gridUnit * 4 })}\n          type=\"warning\"\n          message={\n            <>\n              {' '}\n              <strong>{t('Be careful.')} </strong>\n              {t(\n                'Changing these settings will affect all charts using this dataset, including charts owned by other people.',\n              )}\n            </>\n          }\n        />\n        <StyledTableTabs\n          fullWidth={false}\n          id=\"table-tabs\"\n          data-test=\"edit-dataset-tabs\"\n          onChange={this.handleTabSelect}\n          defaultActiveKey={activeTabKey}\n        >\n          <Tabs.TabPane key={0} tab={t('Source')}>\n            {this.renderSourceFieldset()}\n          </Tabs.TabPane>\n          <Tabs.TabPane\n            tab={\n              <CollectionTabTitle\n                collection={datasource.metrics}\n                title={t('Metrics')}\n              />\n            }\n            key={1}\n          >\n            {this.renderMetricCollection()}\n          </Tabs.TabPane>\n          <Tabs.TabPane\n            tab={\n              <CollectionTabTitle\n                collection={this.state.databaseColumns}\n                title={t('Columns')}\n              />\n            }\n            key={2}\n          >\n            <div>\n              <ColumnButtonWrapper>\n                <span className=\"m-t-10 m-r-10\">\n                  <Button\n                    buttonSize=\"small\"\n                    buttonStyle=\"primary\"\n                    onClick={this.syncMetadata}\n                    className=\"sync-from-source\"\n                  >\n                    <i className=\"fa fa-database\" />{' '}\n                    {t('Sync columns from source')}\n                  </Button>\n                </span>\n              </ColumnButtonWrapper>\n              <ColumnCollectionTable\n                className=\"columns-table\"\n                columns={this.state.databaseColumns}\n                onChange={databaseColumns =>\n                  this.setColumns({ databaseColumns })\n                }\n              />\n              {this.state.metadataLoading && <Loading />}\n            </div>\n          </Tabs.TabPane>\n          <Tabs.TabPane\n            tab={\n              <CollectionTabTitle\n                collection={this.state.calculatedColumns}\n                title={t('Calculated columns')}\n              />\n            }\n            key={3}\n          >\n            <ColumnCollectionTable\n              columns={this.state.calculatedColumns}\n              onChange={calculatedColumns =>\n                this.setColumns({ calculatedColumns })\n              }\n              editableColumnName\n              showExpression\n              allowAddItem\n              allowEditDataType\n              itemGenerator={() => ({\n                column_name: '<new column>',\n                filterable: true,\n                groupby: true,\n                expression: '<enter SQL expression here>',\n                __expanded: true,\n              })}\n            />\n          </Tabs.TabPane>\n          <Tabs.TabPane key={4} tab={t('Settings')}>\n            <Row gutter={16}>\n              <Col xs={24} md={12}>\n                <FormContainer>{this.renderSettingsFieldset()}</FormContainer>\n              </Col>\n              <Col xs={24} md={12}>\n                <FormContainer>{this.renderAdvancedFieldset()}</FormContainer>\n              </Col>\n            </Row>\n          </Tabs.TabPane>\n        </StyledTableTabs>\n      </DatasourceContainer>\n    );\n  }\n}\n\nDatasourceEditor.defaultProps = defaultProps;\nDatasourceEditor.propTypes = propTypes;\n\nexport default withToasts(DatasourceEditor);\n"]},"metadata":{},"sourceType":"module"}