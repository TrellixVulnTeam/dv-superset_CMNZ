{"ast":null,"code":"import \"core-js/modules/web.dom-collections.iterator.js\";import _mapInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/map\";import _filter from \"lodash/filter\";var _jsxFileName = \"/Users/frankhe/projects/superset/superset-frontend/src/views/CRUD/welcome/DashboardTable.tsx\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState, useMemo, useEffect } from 'react';\nimport { SupersetClient, t } from '@superset-ui/core';\n\nimport { useListViewResource, useFavoriteStatus } from 'src/views/CRUD/hooks';\nimport { TableTabTypes } from 'src/views/CRUD/types';\nimport handleResourceExport from 'src/utils/export';\nimport { useHistory } from 'react-router-dom';\nimport { setInLocalStorage, getFromLocalStorage } from 'src/utils/localStorageHelpers';\nimport { createErrorHandler, CardContainer, PAGE_SIZE } from 'src/views/CRUD/utils';\nimport { HOMEPAGE_DASHBOARD_FILTER } from 'src/views/CRUD/storageKeys';\nimport withToasts from 'src/messageToasts/enhancers/withToasts';\nimport Loading from 'src/components/Loading';\nimport PropertiesModal from 'src/dashboard/components/PropertiesModal';\nimport DashboardCard from 'src/views/CRUD/dashboard/DashboardCard';\nimport SubMenu from 'src/components/Menu/SubMenu';\nimport EmptyState from './EmptyState';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nfunction DashboardTable({ user, addDangerToast, addSuccessToast, mine, showThumbnails, examples }) {\n  const history = useHistory();\n  const filterStore = getFromLocalStorage(HOMEPAGE_DASHBOARD_FILTER, null);\n  const defaultFilter = filterStore || TableTabTypes.EXAMPLES;\n  const filteredExamples = _filter(examples, (obj) => !('viz_type' in obj));\n  const { state: { loading, resourceCollection: dashboards }, setResourceCollection: setDashboards, hasPerm, refreshData, fetchData } = useListViewResource('dashboard', t('dashboard'), addDangerToast, true, defaultFilter === 'Mine' ? mine : filteredExamples, [], false);\n  const dashboardIds = useMemo(() => _mapInstanceProperty(dashboards).call(dashboards, (c) => c.id), [dashboards]);\n  const [saveFavoriteStatus, favoriteStatus] = useFavoriteStatus('dashboard', dashboardIds, addDangerToast);\n  const [editModal, setEditModal] = useState();\n  const [dashboardFilter, setDashboardFilter] = useState(defaultFilter);\n  const [preparingExport, setPreparingExport] = useState(false);\n  const [loaded, setLoaded] = useState(false);\n  useEffect(() => {\n    if (loaded || dashboardFilter === 'Favorite') {\n      getData(dashboardFilter);\n    }\n    setLoaded(true);\n  }, [dashboardFilter]);\n  const handleBulkDashboardExport = (dashboardsToExport) => {\n    const ids = _mapInstanceProperty(dashboardsToExport).call(dashboardsToExport, ({ id }) => id);\n    handleResourceExport('dashboard', ids, () => {\n      setPreparingExport(false);\n    });\n    setPreparingExport(true);\n  };\n  const handleDashboardEdit = (edits) => SupersetClient.get({\n    endpoint: `/api/v1/dashboard/${edits.id}` }).\n  then(({ json = {} }) => {\n    setDashboards(_mapInstanceProperty(dashboards).call(dashboards, (dashboard) => {\n      if (dashboard.id === json.id) {\n        return json.result;\n      }\n      return dashboard;\n    }));\n  }, createErrorHandler((errMsg) => addDangerToast(t('An error occurred while fetching dashboards: %s', errMsg))));\n  const getFilters = (filterName) => {\n    const filters = [];\n    if (filterName === 'Mine') {\n      filters.push({\n        id: 'owners',\n        operator: 'rel_m_m',\n        value: `${user == null ? void 0 : user.userId}` });\n\n    } else\n    if (filterName === 'Favorite') {\n      filters.push({\n        id: 'id',\n        operator: 'dashboard_is_favorite',\n        value: true });\n\n    }\n    return filters;\n  };\n  const menuTabs = [\n  {\n    name: 'Favorite',\n    label: t('Favorite'),\n    onClick: () => {\n      setDashboardFilter(TableTabTypes.FAVORITE);\n      setInLocalStorage(HOMEPAGE_DASHBOARD_FILTER, TableTabTypes.FAVORITE);\n    } },\n\n  {\n    name: 'Mine',\n    label: t('Mine'),\n    onClick: () => {\n      setDashboardFilter(TableTabTypes.MINE);\n      setInLocalStorage(HOMEPAGE_DASHBOARD_FILTER, TableTabTypes.MINE);\n    } }];\n\n\n  if (examples) {\n    menuTabs.push({\n      name: 'Examples',\n      label: t('Examples'),\n      onClick: () => {\n        setDashboardFilter(TableTabTypes.EXAMPLES);\n        setInLocalStorage(HOMEPAGE_DASHBOARD_FILTER, TableTabTypes.EXAMPLES);\n      } });\n\n  }\n  const getData = (filter) => fetchData({\n    pageIndex: 0,\n    pageSize: PAGE_SIZE,\n    sortBy: [\n    {\n      id: 'changed_on_delta_humanized',\n      desc: true }],\n\n\n    filters: getFilters(filter) });\n\n  if (loading)\n  return ___EmotionJSX(Loading, { position: \"inline\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 128, columnNumber: 16 } });\n  return ___EmotionJSX(React.Fragment, null,\n  ___EmotionJSX(SubMenu, { activeChild: dashboardFilter, tabs: menuTabs, buttons: [\n    {\n      name: ___EmotionJSX(React.Fragment, null,\n      ___EmotionJSX(\"i\", { className: \"fa fa-plus\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 133, columnNumber: 17 } }), \"Dashboard\"),\n\n\n      buttonStyle: 'tertiary',\n      onClick: () => {\n        window.location.assign('/dashboard/new');\n      } },\n\n    {\n      name: 'View All Â»',\n      buttonStyle: 'link',\n      onClick: () => {\n        const target = dashboardFilter === 'Favorite' ?\n        '/dashboard/list/?filters=(favorite:!t)' :\n        '/dashboard/list/';\n        history.push(target);\n      } }], __self: this, __source: { fileName: _jsxFileName, lineNumber: 130, columnNumber: 7 } }),\n\n\n  editModal && ___EmotionJSX(PropertiesModal, { dashboardId: editModal == null ? void 0 : editModal.id, show: true, onHide: () => setEditModal(undefined), onSubmit: handleDashboardEdit, __self: this, __source: { fileName: _jsxFileName, lineNumber: 152, columnNumber: 22 } }),\n  dashboards.length > 0 && ___EmotionJSX(CardContainer, { showThumbnails: showThumbnails, __self: this, __source: { fileName: _jsxFileName, lineNumber: 153, columnNumber: 34 } },\n  _mapInstanceProperty(dashboards).call(dashboards, (e) => ___EmotionJSX(DashboardCard, { key: e.id, dashboard: e, hasPerm: hasPerm, bulkSelectEnabled: false, showThumbnails: showThumbnails, dashboardFilter: dashboardFilter, refreshData: refreshData, addDangerToast: addDangerToast, addSuccessToast: addSuccessToast, userId: user == null ? void 0 : user.userId, loading: loading, openDashboardEditModal: (dashboard) => setEditModal(dashboard), saveFavoriteStatus: saveFavoriteStatus, favoriteStatus: favoriteStatus[e.id], handleBulkDashboardExport: handleBulkDashboardExport, __self: this, __source: { fileName: _jsxFileName, lineNumber: 154, columnNumber: 33 } }))),\n\n  dashboards.length === 0 && ___EmotionJSX(EmptyState, { tableName: \"DASHBOARDS\", tab: dashboardFilter, __self: this, __source: { fileName: _jsxFileName, lineNumber: 156, columnNumber: 36 } }),\n  preparingExport && ___EmotionJSX(Loading, { __self: this, __source: { fileName: _jsxFileName, lineNumber: 157, columnNumber: 27 } }));\n\n}__signature__(DashboardTable, \"useHistory{history}\\nuseListViewResource{{ state: { loading, resourceCollection: dashboards }, setResourceCollection: setDashboards, hasPerm, refreshData, fetchData, }}\\nuseMemo{dashboardIds}\\nuseFavoriteStatus{[saveFavoriteStatus, favoriteStatus]}\\nuseState{[editModal, setEditModal]}\\nuseState{[dashboardFilter, setDashboardFilter](defaultFilter)}\\nuseState{[preparingExport, setPreparingExport](false)}\\nuseState{[loaded, setLoaded](false)}\\nuseEffect{}\", () => [useHistory, useListViewResource, useFavoriteStatus]);const _default =\nwithToasts(DashboardTable);export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(DashboardTable, \"DashboardTable\", \"/Users/frankhe/projects/superset/superset-frontend/src/views/CRUD/welcome/DashboardTable.tsx\");reactHotLoader.register(_default, \"default\", \"/Users/frankhe/projects/superset/superset-frontend/src/views/CRUD/welcome/DashboardTable.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/Users/frankhe/projects/superset/superset-frontend/src/views/CRUD/welcome/DashboardTable.tsx"],"names":[],"mappings":"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","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState, useMemo, useEffect } from 'react';\nimport { SupersetClient, t } from '@superset-ui/core';\nimport { filter } from 'lodash';\nimport { useListViewResource, useFavoriteStatus } from 'src/views/CRUD/hooks';\nimport {\n  Dashboard,\n  DashboardTableProps,\n  TableTabTypes,\n} from 'src/views/CRUD/types';\nimport handleResourceExport from 'src/utils/export';\nimport { useHistory } from 'react-router-dom';\nimport {\n  setInLocalStorage,\n  getFromLocalStorage,\n} from 'src/utils/localStorageHelpers';\nimport {\n  createErrorHandler,\n  CardContainer,\n  PAGE_SIZE,\n} from 'src/views/CRUD/utils';\nimport { HOMEPAGE_DASHBOARD_FILTER } from 'src/views/CRUD/storageKeys';\n\nimport withToasts from 'src/messageToasts/enhancers/withToasts';\nimport Loading from 'src/components/Loading';\nimport PropertiesModal from 'src/dashboard/components/PropertiesModal';\nimport DashboardCard from 'src/views/CRUD/dashboard/DashboardCard';\nimport SubMenu from 'src/components/Menu/SubMenu';\nimport EmptyState from './EmptyState';\n\nexport interface FilterValue {\n  col: string;\n  operator: string;\n  value: string | boolean | number | null | undefined;\n}\n\nfunction DashboardTable({\n  user,\n  addDangerToast,\n  addSuccessToast,\n  mine,\n  showThumbnails,\n  examples,\n}: DashboardTableProps) {\n  const history = useHistory();\n  const filterStore = getFromLocalStorage(HOMEPAGE_DASHBOARD_FILTER, null);\n  const defaultFilter = filterStore || TableTabTypes.EXAMPLES;\n\n  const filteredExamples = filter(examples, obj => !('viz_type' in obj));\n\n  const {\n    state: { loading, resourceCollection: dashboards },\n    setResourceCollection: setDashboards,\n    hasPerm,\n    refreshData,\n    fetchData,\n  } = useListViewResource<Dashboard>(\n    'dashboard',\n    t('dashboard'),\n    addDangerToast,\n    true,\n    defaultFilter === 'Mine' ? mine : filteredExamples,\n    [],\n    false,\n  );\n  const dashboardIds = useMemo(() => dashboards.map(c => c.id), [dashboards]);\n  const [saveFavoriteStatus, favoriteStatus] = useFavoriteStatus(\n    'dashboard',\n    dashboardIds,\n    addDangerToast,\n  );\n\n  const [editModal, setEditModal] = useState<Dashboard>();\n  const [dashboardFilter, setDashboardFilter] = useState(defaultFilter);\n  const [preparingExport, setPreparingExport] = useState<boolean>(false);\n  const [loaded, setLoaded] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (loaded || dashboardFilter === 'Favorite') {\n      getData(dashboardFilter);\n    }\n    setLoaded(true);\n  }, [dashboardFilter]);\n\n  const handleBulkDashboardExport = (dashboardsToExport: Dashboard[]) => {\n    const ids = dashboardsToExport.map(({ id }) => id);\n    handleResourceExport('dashboard', ids, () => {\n      setPreparingExport(false);\n    });\n    setPreparingExport(true);\n  };\n\n  const handleDashboardEdit = (edits: Dashboard) =>\n    SupersetClient.get({\n      endpoint: `/api/v1/dashboard/${edits.id}`,\n    }).then(\n      ({ json = {} }) => {\n        setDashboards(\n          dashboards.map(dashboard => {\n            if (dashboard.id === json.id) {\n              return json.result;\n            }\n            return dashboard;\n          }),\n        );\n      },\n      createErrorHandler(errMsg =>\n        addDangerToast(\n          t('An error occurred while fetching dashboards: %s', errMsg),\n        ),\n      ),\n    );\n\n  const getFilters = (filterName: string) => {\n    const filters = [];\n    if (filterName === 'Mine') {\n      filters.push({\n        id: 'owners',\n        operator: 'rel_m_m',\n        value: `${user?.userId}`,\n      });\n    } else if (filterName === 'Favorite') {\n      filters.push({\n        id: 'id',\n        operator: 'dashboard_is_favorite',\n        value: true,\n      });\n    }\n    return filters;\n  };\n\n  const menuTabs = [\n    {\n      name: 'Favorite',\n      label: t('Favorite'),\n      onClick: () => {\n        setDashboardFilter(TableTabTypes.FAVORITE);\n        setInLocalStorage(HOMEPAGE_DASHBOARD_FILTER, TableTabTypes.FAVORITE);\n      },\n    },\n    {\n      name: 'Mine',\n      label: t('Mine'),\n      onClick: () => {\n        setDashboardFilter(TableTabTypes.MINE);\n        setInLocalStorage(HOMEPAGE_DASHBOARD_FILTER, TableTabTypes.MINE);\n      },\n    },\n  ];\n\n  if (examples) {\n    menuTabs.push({\n      name: 'Examples',\n      label: t('Examples'),\n      onClick: () => {\n        setDashboardFilter(TableTabTypes.EXAMPLES);\n        setInLocalStorage(HOMEPAGE_DASHBOARD_FILTER, TableTabTypes.EXAMPLES);\n      },\n    });\n  }\n\n  const getData = (filter: string) =>\n    fetchData({\n      pageIndex: 0,\n      pageSize: PAGE_SIZE,\n      sortBy: [\n        {\n          id: 'changed_on_delta_humanized',\n          desc: true,\n        },\n      ],\n      filters: getFilters(filter),\n    });\n\n  if (loading) return <Loading position=\"inline\" />;\n  return (\n    <>\n      <SubMenu\n        activeChild={dashboardFilter}\n        tabs={menuTabs}\n        buttons={[\n          {\n            name: (\n              <>\n                <i className=\"fa fa-plus\" />\n                Dashboard\n              </>\n            ),\n            buttonStyle: 'tertiary',\n            onClick: () => {\n              window.location.assign('/dashboard/new');\n            },\n          },\n          {\n            name: 'View All Â»',\n            buttonStyle: 'link',\n            onClick: () => {\n              const target =\n                dashboardFilter === 'Favorite'\n                  ? '/dashboard/list/?filters=(favorite:!t)'\n                  : '/dashboard/list/';\n              history.push(target);\n            },\n          },\n        ]}\n      />\n      {editModal && (\n        <PropertiesModal\n          dashboardId={editModal?.id}\n          show\n          onHide={() => setEditModal(undefined)}\n          onSubmit={handleDashboardEdit}\n        />\n      )}\n      {dashboards.length > 0 && (\n        <CardContainer showThumbnails={showThumbnails}>\n          {dashboards.map(e => (\n            <DashboardCard\n              key={e.id}\n              dashboard={e}\n              hasPerm={hasPerm}\n              bulkSelectEnabled={false}\n              showThumbnails={showThumbnails}\n              dashboardFilter={dashboardFilter}\n              refreshData={refreshData}\n              addDangerToast={addDangerToast}\n              addSuccessToast={addSuccessToast}\n              userId={user?.userId}\n              loading={loading}\n              openDashboardEditModal={(dashboard: Dashboard) =>\n                setEditModal(dashboard)\n              }\n              saveFavoriteStatus={saveFavoriteStatus}\n              favoriteStatus={favoriteStatus[e.id]}\n              handleBulkDashboardExport={handleBulkDashboardExport}\n            />\n          ))}\n        </CardContainer>\n      )}\n      {dashboards.length === 0 && (\n        <EmptyState tableName=\"DASHBOARDS\" tab={dashboardFilter} />\n      )}\n      {preparingExport && <Loading />}\n    </>\n  );\n}\n\nexport default withToasts(DashboardTable);\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}