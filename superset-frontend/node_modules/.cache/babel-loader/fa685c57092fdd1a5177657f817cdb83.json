{"ast":null,"code":"import \"core-js/modules/web.dom-collections.iterator.js\";import _Object$keys from \"@babel/runtime-corejs3/core-js-stable/object/keys\";import _includesInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/includes\";import _filterInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/filter\";import _mapInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/map\";var _jsxFileName = \"/Users/frankhe/projects/superset/superset-frontend/src/views/CRUD/data/database/DatabaseModal/DatabaseConnectionForm.tsx\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();function _EMOTION_STRINGIFIED_CSS_ERROR__() {return \"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\";}var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState } from 'react';\nimport { t } from '@superset-ui/core';\nimport { Input, Switch, Select, Button } from 'src/common/components';\nimport InfoTooltip from 'src/components/InfoTooltip';\nimport ValidatedInput from 'src/components/Form/LabeledErrorBoundInput';\nimport FormLabel from 'src/components/Form/FormLabel';\nimport { DeleteFilled, CloseOutlined } from '@ant-design/icons';\nimport { formScrollableStyles, validatedFormStyles, CredentialInfoForm, toggleStyle, infoTooltip, StyledFooterButton, StyledCatalogTable } from './styles';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nvar CredentialInfoOptions;\n(function (CredentialInfoOptions) {\n  CredentialInfoOptions[CredentialInfoOptions[\"jsonUpload\"] = 0] = \"jsonUpload\";\n  CredentialInfoOptions[CredentialInfoOptions[\"copyPaste\"] = 1] = \"copyPaste\";\n})(CredentialInfoOptions || (CredentialInfoOptions = {}));\nexport const FormFieldOrder = [\n'host',\n'port',\n'database',\n'username',\n'password',\n'database_name',\n'credentials_info',\n'catalog',\n'query',\n'encryption'];var _ref = process.env.NODE_ENV === \"production\" ? { name: \"s5xdrg\", styles: \"display:flex;align-items:center\" } : { name: \"1s62nco-CredentialsInfo\", styles: \"display:flex;align-items:center;label:CredentialsInfo;\", map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\", toString: _EMOTION_STRINGIFIED_CSS_ERROR__ };\n\nconst CredentialsInfo = ({ changeMethods, isEditMode, db, editNewDb }) => {var _db$parameters;\n  const [uploadOption, setUploadOption] = useState(CredentialInfoOptions.jsonUpload.valueOf());\n  const [fileToUpload, setFileToUpload] = useState(null);\n  return ___EmotionJSX(CredentialInfoForm, { __self: this, __source: { fileName: _jsxFileName, lineNumber: 47, columnNumber: 13 } },\n  !isEditMode && ___EmotionJSX(React.Fragment, null,\n  ___EmotionJSX(FormLabel, { required: true, __self: this, __source: { fileName: _jsxFileName, lineNumber: 49, columnNumber: 11 } },\n  t('How do you want to enter service account credentials?')),\n\n  ___EmotionJSX(Select, { defaultValue: uploadOption, style: { width: '100%' }, onChange: (option) => setUploadOption(option), __self: this, __source: { fileName: _jsxFileName, lineNumber: 52, columnNumber: 11 } },\n  ___EmotionJSX(Select.Option, { value: CredentialInfoOptions.jsonUpload, __self: this, __source: { fileName: _jsxFileName, lineNumber: 53, columnNumber: 13 } },\n  t('Upload JSON file')),\n\n\n  ___EmotionJSX(Select.Option, { value: CredentialInfoOptions.copyPaste, __self: this, __source: { fileName: _jsxFileName, lineNumber: 57, columnNumber: 13 } },\n  t('Copy and Paste JSON credentials')))),\n\n\n\n  uploadOption === CredentialInfoOptions.copyPaste ||\n  isEditMode ||\n  editNewDb ? ___EmotionJSX(\"div\", { className: \"input-container\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 64, columnNumber: 26 } },\n  ___EmotionJSX(FormLabel, { required: true, __self: this, __source: { fileName: _jsxFileName, lineNumber: 65, columnNumber: 11 } }, t('Service Account')),\n  ___EmotionJSX(\"textarea\", { className: \"input-form\", name: \"credentials_info\", value: db == null ? void 0 : (_db$parameters = db.parameters) == null ? void 0 : _db$parameters.credentials_info, onChange: changeMethods.onParametersChange, placeholder: \"Paste content of service credentials JSON file here\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 66, columnNumber: 11 } }),\n  ___EmotionJSX(\"span\", { className: \"label-paste\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 67, columnNumber: 11 } },\n  t('Copy and paste the entire service account .json file here'))) :\n\n  ___EmotionJSX(\"div\", { className: \"input-container\", css: (theme) => infoTooltip(theme), __self: this, __source: { fileName: _jsxFileName, lineNumber: 70, columnNumber: 20 } },\n  ___EmotionJSX(\"div\", { css: _ref, __self: this, __source: { fileName: _jsxFileName, lineNumber: 71, columnNumber: 11 } },\n  ___EmotionJSX(FormLabel, { required: true, __self: this, __source: { fileName: _jsxFileName, lineNumber: 72, columnNumber: 13 } }, t('Upload Credentials')),\n  ___EmotionJSX(InfoTooltip, { tooltip: t('Use the JSON file you automatically downloaded when creating your service account in Google BigQuery.'), viewBox: \"0 0 24 24\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 73, columnNumber: 13 } })),\n\n\n  !fileToUpload && ___EmotionJSX(Button, { className: \"input-upload-btn\", onClick: () => {var _document, _document$getElementB;return (_document = document) == null ? void 0 : (_document$getElementB = _document.getElementById('selectedFile')) == null ? void 0 : _document$getElementB.click();}, __self: this, __source: { fileName: _jsxFileName, lineNumber: 76, columnNumber: 30 } },\n  t('Choose File')),\n\n  fileToUpload && ___EmotionJSX(\"div\", { className: \"input-upload-current\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 79, columnNumber: 29 } },\n  fileToUpload,\n  ___EmotionJSX(DeleteFilled, { onClick: () => {\n      setFileToUpload(null);\n      changeMethods.onParametersChange({\n        target: {\n          name: 'credentials_info',\n          value: '' } });\n\n\n    }, __self: this, __source: { fileName: _jsxFileName, lineNumber: 81, columnNumber: 15 } })),\n\n\n  ___EmotionJSX(\"input\", { id: \"selectedFile\", className: \"input-upload\", type: \"file\", onChange: async (event) => {var _file, _file2;\n      let file;\n      if (event.target.files) {\n        file = event.target.files[0];\n      }\n      setFileToUpload((_file = file) == null ? void 0 : _file.name);\n      changeMethods.onParametersChange({\n        target: {\n          type: null,\n          name: 'credentials_info',\n          value: await ((_file2 = file) == null ? void 0 : _file2.text()),\n          checked: false } });\n\n\n      document.getElementById('selectedFile').value = null;\n    }, __self: this, __source: { fileName: _jsxFileName, lineNumber: 92, columnNumber: 11 } })));\n\n\n};__signature__(CredentialsInfo, \"useState{[uploadOption, setUploadOption](CredentialInfoOptions.jsonUpload.valueOf())}\\nuseState{[fileToUpload, setFileToUpload](null)}\");\nconst TableCatalog = ({ required, changeMethods, getValidation, validationErrors, db }) => {\n  const tableCatalog = (db == null ? void 0 : db.catalog) || [];\n  const catalogError = validationErrors || {};\n  return ___EmotionJSX(StyledCatalogTable, { __self: this, __source: { fileName: _jsxFileName, lineNumber: 114, columnNumber: 13 } },\n  ___EmotionJSX(\"div\", { className: \"catalog-type-select\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 115, columnNumber: 7 } },\n  ___EmotionJSX(FormLabel, { required: true, __self: this, __source: { fileName: _jsxFileName, lineNumber: 116, columnNumber: 9 } }, t('Type of Google Sheets Allowed')),\n  ___EmotionJSX(Select, { style: { width: '100%' }, defaultValue: \"true\", disabled: true, __self: this, __source: { fileName: _jsxFileName, lineNumber: 117, columnNumber: 9 } },\n  ___EmotionJSX(Select.Option, { value: \"true\", key: 1, __self: this, __source: { fileName: _jsxFileName, lineNumber: 118, columnNumber: 11 } },\n  t('Publicly shared sheets only')))),\n\n\n\n  ___EmotionJSX(\"h4\", { className: \"gsheet-title\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 123, columnNumber: 7 } },\n  t('Connect Google Sheets as tables to this database')),\n\n  ___EmotionJSX(\"div\", { __self: this, __source: { fileName: _jsxFileName, lineNumber: 126, columnNumber: 7 } },\n  tableCatalog == null ? void 0 : _mapInstanceProperty(tableCatalog).call(tableCatalog, (sheet, idx) => ___EmotionJSX(React.Fragment, null,\n  ___EmotionJSX(FormLabel, { className: \"catalog-label\", required: true, __self: this, __source: { fileName: _jsxFileName, lineNumber: 128, columnNumber: 13 } },\n  t('Google Sheet Name and URL')),\n\n  ___EmotionJSX(\"div\", { className: \"catalog-name\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 131, columnNumber: 13 } },\n  ___EmotionJSX(Input, { className: \"catalog-name-input\", placeholder: t('Enter a name for this sheet'), onChange: (e) => {\n      changeMethods.onParametersChange({\n        target: {\n          type: `catalog-${idx}`,\n          name: 'name',\n          value: e.target.value } });\n\n\n    }, value: sheet.name, __self: this, __source: { fileName: _jsxFileName, lineNumber: 132, columnNumber: 15 } }),\n\n  (tableCatalog == null ? void 0 : tableCatalog.length) > 1 && ___EmotionJSX(CloseOutlined, { className: \"catalog-delete\", onClick: () => changeMethods.onRemoveTableCatalog(idx), __self: this, __source: { fileName: _jsxFileName, lineNumber: 142, columnNumber: 45 } })),\n\n  ___EmotionJSX(ValidatedInput, { className: \"catalog-name-url\", required: required, validationMethods: { onBlur: getValidation }, errorMessage: catalogError[sheet.name], placeholder: t('Paste the shareable Google Sheet URL here'), onChange: (e) => changeMethods.onParametersChange({\n      target: {\n        type: `catalog-${idx}`,\n        name: 'value',\n        value: e.target.value } }),\n\n    value: sheet.value, __self: this, __source: { fileName: _jsxFileName, lineNumber: 144, columnNumber: 13 } }))),\n\n  ___EmotionJSX(StyledFooterButton, { className: \"catalog-add-btn\", onClick: () => {\n      changeMethods.onAddTableCatalog();\n    }, __self: this, __source: { fileName: _jsxFileName, lineNumber: 152, columnNumber: 9 } }, \"+ \",\n  t('Add sheet'))));\n\n\n\n};\nconst hostField = ({ required, changeMethods, getValidation, validationErrors, db }) => {var _db$parameters2;return ___EmotionJSX(ValidatedInput, { id: \"host\", name: \"host\", value: db == null ? void 0 : (_db$parameters2 = db.parameters) == null ? void 0 : _db$parameters2.host, required: required, hasTooltip: true, tooltipText: t('This can be either an IP address (e.g. 127.0.0.1) or a domain name (e.g. mydatabase.com).'), validationMethods: { onBlur: getValidation }, errorMessage: validationErrors == null ? void 0 : validationErrors.host, placeholder: \"e.g. 127.0.0.1\", className: \"form-group-w-50\", label: \"Host\", onChange: changeMethods.onParametersChange, __self: this, __source: { fileName: _jsxFileName, lineNumber: 160, columnNumber: 91 } });};\nconst portField = ({ required, changeMethods, getValidation, validationErrors, db }) => {var _db$parameters3;return ___EmotionJSX(React.Fragment, null,\n  ___EmotionJSX(ValidatedInput, { id: \"port\", name: \"port\", type: \"number\", required: required, value: db == null ? void 0 : (_db$parameters3 = db.parameters) == null ? void 0 : _db$parameters3.port, validationMethods: { onBlur: getValidation }, errorMessage: validationErrors == null ? void 0 : validationErrors.port, placeholder: \"e.g. 5432\", className: \"form-group-w-50\", label: \"Port\", onChange: changeMethods.onParametersChange, __self: this, __source: { fileName: _jsxFileName, lineNumber: 162, columnNumber: 5 } }));};\n\nconst databaseField = ({ required, changeMethods, getValidation, validationErrors, db }) => {var _db$parameters4;return ___EmotionJSX(ValidatedInput, { id: \"database\", name: \"database\", required: required, value: db == null ? void 0 : (_db$parameters4 = db.parameters) == null ? void 0 : _db$parameters4.database, validationMethods: { onBlur: getValidation }, errorMessage: validationErrors == null ? void 0 : validationErrors.database, placeholder: \"e.g. world_population\", label: \"Database name\", onChange: changeMethods.onParametersChange, helpText: t('Copy the name of the  database you are trying to connect to.'), __self: this, __source: { fileName: _jsxFileName, lineNumber: 164, columnNumber: 95 } });};\nconst usernameField = ({ required, changeMethods, getValidation, validationErrors, db }) => {var _db$parameters5;return ___EmotionJSX(ValidatedInput, { id: \"username\", name: \"username\", required: required, value: db == null ? void 0 : (_db$parameters5 = db.parameters) == null ? void 0 : _db$parameters5.username, validationMethods: { onBlur: getValidation }, errorMessage: validationErrors == null ? void 0 : validationErrors.username, placeholder: \"e.g. Analytics\", label: \"Username\", onChange: changeMethods.onParametersChange, __self: this, __source: { fileName: _jsxFileName, lineNumber: 165, columnNumber: 95 } });};\nconst passwordField = ({ required, changeMethods, getValidation, validationErrors, db, isEditMode }) => {var _db$parameters6;return ___EmotionJSX(ValidatedInput, { id: \"password\", name: \"password\", required: required, type: isEditMode && 'password', value: db == null ? void 0 : (_db$parameters6 = db.parameters) == null ? void 0 : _db$parameters6.password, validationMethods: { onBlur: getValidation }, errorMessage: validationErrors == null ? void 0 : validationErrors.password, placeholder: \"e.g. ********\", label: \"Password\", onChange: changeMethods.onParametersChange, __self: this, __source: { fileName: _jsxFileName, lineNumber: 166, columnNumber: 107 } });};\nconst displayField = ({ changeMethods, getValidation, validationErrors, db }) => ___EmotionJSX(React.Fragment, null,\n___EmotionJSX(ValidatedInput, { id: \"database_name\", name: \"database_name\", required: true, value: db == null ? void 0 : db.database_name, validationMethods: { onBlur: getValidation }, errorMessage: validationErrors == null ? void 0 : validationErrors.database_name, placeholder: \"\", label: t('Display Name'), onChange: changeMethods.onChange, helpText: t('Pick a nickname for this database to display as in Superset.'), __self: this, __source: { fileName: _jsxFileName, lineNumber: 168, columnNumber: 5 } }));\n\nconst queryField = ({ required, changeMethods, getValidation, validationErrors, db }) => {var _db$parameters7;return ___EmotionJSX(ValidatedInput, { id: \"query\", name: \"query\", required: required, value: db == null ? void 0 : (_db$parameters7 = db.parameters) == null ? void 0 : _db$parameters7.query, validationMethods: { onBlur: getValidation }, errorMessage: validationErrors == null ? void 0 : validationErrors.query, placeholder: \"e.g. param1=value1&param2=value2\", label: \"Additional Parameters\", onChange: changeMethods.onParametersChange, helpText: t('Add additional custom parameters'), __self: this, __source: { fileName: _jsxFileName, lineNumber: 170, columnNumber: 92 } });};\nconst forceSSLField = ({ isEditMode, changeMethods, db, sslForced }) => {var _db$parameters8;return ___EmotionJSX(\"div\", { css: (theme) => infoTooltip(theme), __self: this, __source: { fileName: _jsxFileName, lineNumber: 171, columnNumber: 75 } },\n  ___EmotionJSX(Switch, { disabled: sslForced && !isEditMode, checked: (db == null ? void 0 : (_db$parameters8 = db.parameters) == null ? void 0 : _db$parameters8.encryption) || sslForced, onChange: (changed) => {\n      changeMethods.onParametersChange({\n        target: {\n          type: 'toggle',\n          name: 'encryption',\n          checked: true,\n          value: changed } });\n\n\n    }, __self: this, __source: { fileName: _jsxFileName, lineNumber: 172, columnNumber: 5 } }),\n  ___EmotionJSX(\"span\", { css: toggleStyle, __self: this, __source: { fileName: _jsxFileName, lineNumber: 182, columnNumber: 5 } }, \"SSL\"),\n  ___EmotionJSX(InfoTooltip, { tooltip: t('SSL Mode \"require\" will be used.'), placement: \"right\", viewBox: \"0 -5 24 24\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 183, columnNumber: 5 } }));};\n\nconst FORM_FIELD_MAP = {\n  host: hostField,\n  port: portField,\n  database: databaseField,\n  username: usernameField,\n  password: passwordField,\n  database_name: displayField,\n  query: queryField,\n  encryption: forceSSLField,\n  credentials_info: CredentialsInfo,\n  catalog: TableCatalog };\n\nconst DatabaseConnectionForm = ({ dbModel: { parameters }, onParametersChange, onChange, onParametersUploadFileChange, onAddTableCatalog, onRemoveTableCatalog, validationErrors, getValidation, db, isEditMode = false, sslForced, editNewDb }) => {var _context;return ___EmotionJSX(React.Fragment, null,\n  ___EmotionJSX(\"div\", {\n    // @ts-ignore\n    css: (theme) => [\n    formScrollableStyles,\n    validatedFormStyles(theme)], __self: this, __source: { fileName: _jsxFileName, lineNumber: 198, columnNumber: 5 } },\n\n  parameters &&\n  _mapInstanceProperty(_context = _filterInstanceProperty(FormFieldOrder).call(FormFieldOrder, (key) => {var _context2;return _includesInstanceProperty(_context2 = _Object$keys(parameters.properties)).call(_context2, key) ||\n    key === 'database_name';})).call(_context, (field) => {var _parameters$required;return FORM_FIELD_MAP[field]({\n      required: (_parameters$required = parameters.required) == null ? void 0 : _includesInstanceProperty(_parameters$required).call(_parameters$required, field),\n      changeMethods: {\n        onParametersChange,\n        onChange,\n        onParametersUploadFileChange,\n        onAddTableCatalog,\n        onRemoveTableCatalog },\n\n      validationErrors,\n      getValidation,\n      db,\n      key: field,\n      isEditMode,\n      sslForced,\n      editNewDb });})));};\n\n\n\nexport const FormFieldMap = FORM_FIELD_MAP;const _default =\nDatabaseConnectionForm;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(CredentialInfoOptions, \"CredentialInfoOptions\", \"/Users/frankhe/projects/superset/superset-frontend/src/views/CRUD/data/database/DatabaseModal/DatabaseConnectionForm.tsx\");reactHotLoader.register(FormFieldOrder, \"FormFieldOrder\", \"/Users/frankhe/projects/superset/superset-frontend/src/views/CRUD/data/database/DatabaseModal/DatabaseConnectionForm.tsx\");reactHotLoader.register(CredentialsInfo, \"CredentialsInfo\", \"/Users/frankhe/projects/superset/superset-frontend/src/views/CRUD/data/database/DatabaseModal/DatabaseConnectionForm.tsx\");reactHotLoader.register(TableCatalog, \"TableCatalog\", \"/Users/frankhe/projects/superset/superset-frontend/src/views/CRUD/data/database/DatabaseModal/DatabaseConnectionForm.tsx\");reactHotLoader.register(hostField, \"hostField\", \"/Users/frankhe/projects/superset/superset-frontend/src/views/CRUD/data/database/DatabaseModal/DatabaseConnectionForm.tsx\");reactHotLoader.register(portField, \"portField\", \"/Users/frankhe/projects/superset/superset-frontend/src/views/CRUD/data/database/DatabaseModal/DatabaseConnectionForm.tsx\");reactHotLoader.register(databaseField, \"databaseField\", \"/Users/frankhe/projects/superset/superset-frontend/src/views/CRUD/data/database/DatabaseModal/DatabaseConnectionForm.tsx\");reactHotLoader.register(usernameField, \"usernameField\", \"/Users/frankhe/projects/superset/superset-frontend/src/views/CRUD/data/database/DatabaseModal/DatabaseConnectionForm.tsx\");reactHotLoader.register(passwordField, \"passwordField\", \"/Users/frankhe/projects/superset/superset-frontend/src/views/CRUD/data/database/DatabaseModal/DatabaseConnectionForm.tsx\");reactHotLoader.register(displayField, \"displayField\", \"/Users/frankhe/projects/superset/superset-frontend/src/views/CRUD/data/database/DatabaseModal/DatabaseConnectionForm.tsx\");reactHotLoader.register(queryField, \"queryField\", \"/Users/frankhe/projects/superset/superset-frontend/src/views/CRUD/data/database/DatabaseModal/DatabaseConnectionForm.tsx\");reactHotLoader.register(forceSSLField, \"forceSSLField\", \"/Users/frankhe/projects/superset/superset-frontend/src/views/CRUD/data/database/DatabaseModal/DatabaseConnectionForm.tsx\");reactHotLoader.register(FORM_FIELD_MAP, \"FORM_FIELD_MAP\", \"/Users/frankhe/projects/superset/superset-frontend/src/views/CRUD/data/database/DatabaseModal/DatabaseConnectionForm.tsx\");reactHotLoader.register(DatabaseConnectionForm, \"DatabaseConnectionForm\", \"/Users/frankhe/projects/superset/superset-frontend/src/views/CRUD/data/database/DatabaseModal/DatabaseConnectionForm.tsx\");reactHotLoader.register(FormFieldMap, \"FormFieldMap\", \"/Users/frankhe/projects/superset/superset-frontend/src/views/CRUD/data/database/DatabaseModal/DatabaseConnectionForm.tsx\");reactHotLoader.register(_default, \"default\", \"/Users/frankhe/projects/superset/superset-frontend/src/views/CRUD/data/database/DatabaseModal/DatabaseConnectionForm.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/Users/frankhe/projects/superset/superset-frontend/src/views/CRUD/data/database/DatabaseModal/DatabaseConnectionForm.tsx"],"names":[],"mappings":"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","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { FormEvent, useState } from 'react';\nimport { SupersetTheme, JsonObject, t } from '@superset-ui/core';\nimport { InputProps } from 'antd/lib/input';\nimport { Input, Switch, Select, Button } from 'src/common/components';\nimport InfoTooltip from 'src/components/InfoTooltip';\nimport ValidatedInput from 'src/components/Form/LabeledErrorBoundInput';\nimport FormLabel from 'src/components/Form/FormLabel';\nimport { DeleteFilled, CloseOutlined } from '@ant-design/icons';\nimport {\n  formScrollableStyles,\n  validatedFormStyles,\n  CredentialInfoForm,\n  toggleStyle,\n  infoTooltip,\n  StyledFooterButton,\n  StyledCatalogTable,\n} from './styles';\nimport { CatalogObject, DatabaseForm, DatabaseObject } from '../types';\n\nenum CredentialInfoOptions {\n  jsonUpload,\n  copyPaste,\n}\n\nexport const FormFieldOrder = [\n  'host',\n  'port',\n  'database',\n  'username',\n  'password',\n  'database_name',\n  'credentials_info',\n  'catalog',\n  'query',\n  'encryption',\n];\n\ninterface FieldPropTypes {\n  required: boolean;\n  hasTooltip?: boolean;\n  tooltipText?: (valuse: any) => string;\n  onParametersChange: (value: any) => string;\n  onParametersUploadFileChange: (value: any) => string;\n  changeMethods: { onParametersChange: (value: any) => string } & {\n    onChange: (value: any) => string;\n  } & { onParametersUploadFileChange: (value: any) => string } & {\n    onAddTableCatalog: () => void;\n    onRemoveTableCatalog: (idx: number) => void;\n  };\n  validationErrors: JsonObject | null;\n  getValidation: () => void;\n  db?: DatabaseObject;\n  isEditMode?: boolean;\n  sslForced?: boolean;\n  defaultDBName?: string;\n  editNewDb?: boolean;\n}\n\nconst CredentialsInfo = ({\n  changeMethods,\n  isEditMode,\n  db,\n  editNewDb,\n}: FieldPropTypes) => {\n  const [uploadOption, setUploadOption] = useState<number>(\n    CredentialInfoOptions.jsonUpload.valueOf(),\n  );\n  const [fileToUpload, setFileToUpload] = useState<string | null | undefined>(\n    null,\n  );\n  return (\n    <CredentialInfoForm>\n      {!isEditMode && (\n        <>\n          <FormLabel required>\n            {t('How do you want to enter service account credentials?')}\n          </FormLabel>\n          <Select\n            defaultValue={uploadOption}\n            style={{ width: '100%' }}\n            onChange={option => setUploadOption(option)}\n          >\n            <Select.Option value={CredentialInfoOptions.jsonUpload}>\n              {t('Upload JSON file')}\n            </Select.Option>\n\n            <Select.Option value={CredentialInfoOptions.copyPaste}>\n              {t('Copy and Paste JSON credentials')}\n            </Select.Option>\n          </Select>\n        </>\n      )}\n      {uploadOption === CredentialInfoOptions.copyPaste ||\n      isEditMode ||\n      editNewDb ? (\n        <div className=\"input-container\">\n          <FormLabel required>{t('Service Account')}</FormLabel>\n          <textarea\n            className=\"input-form\"\n            name=\"credentials_info\"\n            value={db?.parameters?.credentials_info}\n            onChange={changeMethods.onParametersChange}\n            placeholder=\"Paste content of service credentials JSON file here\"\n          />\n          <span className=\"label-paste\">\n            {t('Copy and paste the entire service account .json file here')}\n          </span>\n        </div>\n      ) : (\n        <div\n          className=\"input-container\"\n          css={(theme: SupersetTheme) => infoTooltip(theme)}\n        >\n          <div css={{ display: 'flex', alignItems: 'center' }}>\n            <FormLabel required>{t('Upload Credentials')}</FormLabel>\n            <InfoTooltip\n              tooltip={t(\n                'Use the JSON file you automatically downloaded when creating your service account in Google BigQuery.',\n              )}\n              viewBox=\"0 0 24 24\"\n            />\n          </div>\n\n          {!fileToUpload && (\n            <Button\n              className=\"input-upload-btn\"\n              onClick={() => document?.getElementById('selectedFile')?.click()}\n            >\n              {t('Choose File')}\n            </Button>\n          )}\n          {fileToUpload && (\n            <div className=\"input-upload-current\">\n              {fileToUpload}\n              <DeleteFilled\n                onClick={() => {\n                  setFileToUpload(null);\n                  changeMethods.onParametersChange({\n                    target: {\n                      name: 'credentials_info',\n                      value: '',\n                    },\n                  });\n                }}\n              />\n            </div>\n          )}\n\n          <input\n            id=\"selectedFile\"\n            className=\"input-upload\"\n            type=\"file\"\n            onChange={async event => {\n              let file;\n              if (event.target.files) {\n                file = event.target.files[0];\n              }\n              setFileToUpload(file?.name);\n              changeMethods.onParametersChange({\n                target: {\n                  type: null,\n                  name: 'credentials_info',\n                  value: await file?.text(),\n                  checked: false,\n                },\n              });\n              (document.getElementById(\n                'selectedFile',\n              ) as HTMLInputElement).value = null as any;\n            }}\n          />\n        </div>\n      )}\n    </CredentialInfoForm>\n  );\n};\n\nconst TableCatalog = ({\n  required,\n  changeMethods,\n  getValidation,\n  validationErrors,\n  db,\n}: FieldPropTypes) => {\n  const tableCatalog = db?.catalog || [];\n  const catalogError = validationErrors || {};\n  return (\n    <StyledCatalogTable>\n      <div className=\"catalog-type-select\">\n        <FormLabel required>{t('Type of Google Sheets Allowed')}</FormLabel>\n        <Select style={{ width: '100%' }} defaultValue=\"true\" disabled>\n          <Select.Option value=\"true\" key={1}>\n            {t('Publicly shared sheets only')}\n          </Select.Option>\n        </Select>\n      </div>\n      <h4 className=\"gsheet-title\">\n        {t('Connect Google Sheets as tables to this database')}\n      </h4>\n      <div>\n        {tableCatalog?.map((sheet: CatalogObject, idx: number) => (\n          <>\n            <FormLabel className=\"catalog-label\" required>\n              {t('Google Sheet Name and URL')}\n            </FormLabel>\n            <div className=\"catalog-name\">\n              <Input\n                className=\"catalog-name-input\"\n                placeholder={t('Enter a name for this sheet')}\n                onChange={e => {\n                  changeMethods.onParametersChange({\n                    target: {\n                      type: `catalog-${idx}`,\n                      name: 'name',\n                      value: e.target.value,\n                    },\n                  });\n                }}\n                value={sheet.name}\n              />\n\n              {tableCatalog?.length > 1 && (\n                <CloseOutlined\n                  className=\"catalog-delete\"\n                  onClick={() => changeMethods.onRemoveTableCatalog(idx)}\n                />\n              )}\n            </div>\n            <ValidatedInput\n              className=\"catalog-name-url\"\n              required={required}\n              validationMethods={{ onBlur: getValidation }}\n              errorMessage={catalogError[sheet.name]}\n              placeholder={t('Paste the shareable Google Sheet URL here')}\n              onChange={(e: { target: { value: any } }) =>\n                changeMethods.onParametersChange({\n                  target: {\n                    type: `catalog-${idx}`,\n                    name: 'value',\n                    value: e.target.value,\n                  },\n                })\n              }\n              value={sheet.value}\n            />\n          </>\n        ))}\n        <StyledFooterButton\n          className=\"catalog-add-btn\"\n          onClick={() => {\n            changeMethods.onAddTableCatalog();\n          }}\n        >\n          + {t('Add sheet')}\n        </StyledFooterButton>\n      </div>\n    </StyledCatalogTable>\n  );\n};\n\nconst hostField = ({\n  required,\n  changeMethods,\n  getValidation,\n  validationErrors,\n  db,\n}: FieldPropTypes) => (\n  <ValidatedInput\n    id=\"host\"\n    name=\"host\"\n    value={db?.parameters?.host}\n    required={required}\n    hasTooltip\n    tooltipText={t(\n      'This can be either an IP address (e.g. 127.0.0.1) or a domain name (e.g. mydatabase.com).',\n    )}\n    validationMethods={{ onBlur: getValidation }}\n    errorMessage={validationErrors?.host}\n    placeholder=\"e.g. 127.0.0.1\"\n    className=\"form-group-w-50\"\n    label=\"Host\"\n    onChange={changeMethods.onParametersChange}\n  />\n);\nconst portField = ({\n  required,\n  changeMethods,\n  getValidation,\n  validationErrors,\n  db,\n}: FieldPropTypes) => (\n  <>\n    <ValidatedInput\n      id=\"port\"\n      name=\"port\"\n      type=\"number\"\n      required={required}\n      value={db?.parameters?.port as number}\n      validationMethods={{ onBlur: getValidation }}\n      errorMessage={validationErrors?.port}\n      placeholder=\"e.g. 5432\"\n      className=\"form-group-w-50\"\n      label=\"Port\"\n      onChange={changeMethods.onParametersChange}\n    />\n  </>\n);\nconst databaseField = ({\n  required,\n  changeMethods,\n  getValidation,\n  validationErrors,\n  db,\n}: FieldPropTypes) => (\n  <ValidatedInput\n    id=\"database\"\n    name=\"database\"\n    required={required}\n    value={db?.parameters?.database}\n    validationMethods={{ onBlur: getValidation }}\n    errorMessage={validationErrors?.database}\n    placeholder=\"e.g. world_population\"\n    label=\"Database name\"\n    onChange={changeMethods.onParametersChange}\n    helpText={t('Copy the name of the  database you are trying to connect to.')}\n  />\n);\nconst usernameField = ({\n  required,\n  changeMethods,\n  getValidation,\n  validationErrors,\n  db,\n}: FieldPropTypes) => (\n  <ValidatedInput\n    id=\"username\"\n    name=\"username\"\n    required={required}\n    value={db?.parameters?.username}\n    validationMethods={{ onBlur: getValidation }}\n    errorMessage={validationErrors?.username}\n    placeholder=\"e.g. Analytics\"\n    label=\"Username\"\n    onChange={changeMethods.onParametersChange}\n  />\n);\nconst passwordField = ({\n  required,\n  changeMethods,\n  getValidation,\n  validationErrors,\n  db,\n  isEditMode,\n}: FieldPropTypes) => (\n  <ValidatedInput\n    id=\"password\"\n    name=\"password\"\n    required={required}\n    type={isEditMode && 'password'}\n    value={db?.parameters?.password}\n    validationMethods={{ onBlur: getValidation }}\n    errorMessage={validationErrors?.password}\n    placeholder=\"e.g. ********\"\n    label=\"Password\"\n    onChange={changeMethods.onParametersChange}\n  />\n);\nconst displayField = ({\n  changeMethods,\n  getValidation,\n  validationErrors,\n  db,\n}: FieldPropTypes) => (\n  <>\n    <ValidatedInput\n      id=\"database_name\"\n      name=\"database_name\"\n      required\n      value={db?.database_name}\n      validationMethods={{ onBlur: getValidation }}\n      errorMessage={validationErrors?.database_name}\n      placeholder=\"\"\n      label={t('Display Name')}\n      onChange={changeMethods.onChange}\n      helpText={t(\n        'Pick a nickname for this database to display as in Superset.',\n      )}\n    />\n  </>\n);\n\nconst queryField = ({\n  required,\n  changeMethods,\n  getValidation,\n  validationErrors,\n  db,\n}: FieldPropTypes) => (\n  <ValidatedInput\n    id=\"query\"\n    name=\"query\"\n    required={required}\n    value={db?.parameters?.query}\n    validationMethods={{ onBlur: getValidation }}\n    errorMessage={validationErrors?.query}\n    placeholder=\"e.g. param1=value1&param2=value2\"\n    label=\"Additional Parameters\"\n    onChange={changeMethods.onParametersChange}\n    helpText={t('Add additional custom parameters')}\n  />\n);\n\nconst forceSSLField = ({\n  isEditMode,\n  changeMethods,\n  db,\n  sslForced,\n}: FieldPropTypes) => (\n  <div css={(theme: SupersetTheme) => infoTooltip(theme)}>\n    <Switch\n      disabled={sslForced && !isEditMode}\n      checked={db?.parameters?.encryption || sslForced}\n      onChange={changed => {\n        changeMethods.onParametersChange({\n          target: {\n            type: 'toggle',\n            name: 'encryption',\n            checked: true,\n            value: changed,\n          },\n        });\n      }}\n    />\n    <span css={toggleStyle}>SSL</span>\n    <InfoTooltip\n      tooltip={t('SSL Mode \"require\" will be used.')}\n      placement=\"right\"\n      viewBox=\"0 -5 24 24\"\n    />\n  </div>\n);\n\nconst FORM_FIELD_MAP = {\n  host: hostField,\n  port: portField,\n  database: databaseField,\n  username: usernameField,\n  password: passwordField,\n  database_name: displayField,\n  query: queryField,\n  encryption: forceSSLField,\n  credentials_info: CredentialsInfo,\n  catalog: TableCatalog,\n};\n\nconst DatabaseConnectionForm = ({\n  dbModel: { parameters },\n  onParametersChange,\n  onChange,\n  onParametersUploadFileChange,\n  onAddTableCatalog,\n  onRemoveTableCatalog,\n  validationErrors,\n  getValidation,\n  db,\n  isEditMode = false,\n  sslForced,\n  editNewDb,\n}: {\n  isEditMode?: boolean;\n  sslForced: boolean;\n  editNewDb?: boolean;\n  dbModel: DatabaseForm;\n  db: Partial<DatabaseObject> | null;\n  onParametersChange: (\n    event: FormEvent<InputProps> | { target: HTMLInputElement },\n  ) => void;\n  onChange: (\n    event: FormEvent<InputProps> | { target: HTMLInputElement },\n  ) => void;\n  onParametersUploadFileChange?: (\n    event: FormEvent<InputProps> | { target: HTMLInputElement },\n  ) => void;\n  onAddTableCatalog: () => void;\n  onRemoveTableCatalog: (idx: number) => void;\n  validationErrors: JsonObject | null;\n  getValidation: () => void;\n}) => (\n  <>\n    <div\n      // @ts-ignore\n      css={(theme: SupersetTheme) => [\n        formScrollableStyles,\n        validatedFormStyles(theme),\n      ]}\n    >\n      {parameters &&\n        FormFieldOrder.filter(\n          (key: string) =>\n            Object.keys(parameters.properties).includes(key) ||\n            key === 'database_name',\n        ).map(field =>\n          FORM_FIELD_MAP[field]({\n            required: parameters.required?.includes(field),\n            changeMethods: {\n              onParametersChange,\n              onChange,\n              onParametersUploadFileChange,\n              onAddTableCatalog,\n              onRemoveTableCatalog,\n            },\n            validationErrors,\n            getValidation,\n            db,\n            key: field,\n            isEditMode,\n            sslForced,\n            editNewDb,\n          }),\n        )}\n    </div>\n  </>\n);\nexport const FormFieldMap = FORM_FIELD_MAP;\n\nexport default DatabaseConnectionForm;\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}