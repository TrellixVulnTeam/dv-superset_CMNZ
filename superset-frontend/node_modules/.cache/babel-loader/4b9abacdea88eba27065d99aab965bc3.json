{"ast":null,"code":"import _mapInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/map\";import _setTimeout from \"@babel/runtime-corejs3/core-js-stable/set-timeout\";import _bindInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/bind\";import _sliceInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/slice\";import _Set from \"@babel/runtime-corejs3/core-js-stable/set\";import _Object$keys from \"@babel/runtime-corejs3/core-js-stable/object/keys\";import _filterInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/filter\";var _jsxFileName = \"/Users/frankhe/projects/superset/superset-frontend/src/dashboard/components/gridComponents/Chart.jsx\",_context;(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport cx from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { styled } from '@superset-ui/core';\n\nimport { exportChart, getExploreLongUrl } from 'src/explore/exploreUtils';\nimport ChartContainer from 'src/chart/ChartContainer';\nimport {\nLOG_ACTIONS_CHANGE_DASHBOARD_FILTER,\nLOG_ACTIONS_EXPLORE_DASHBOARD_CHART,\nLOG_ACTIONS_EXPORT_CSV_DASHBOARD_CHART,\nLOG_ACTIONS_FORCE_REFRESH_CHART } from\n'src/logger/LogUtils';\nimport { areObjectsEqual } from 'src/reduxUtils';\n\nimport SliceHeader from '../SliceHeader';\nimport MissingChart from '../MissingChart';\nimport { slicePropShape, chartPropShape } from '../../util/propShapes';\n\nimport { isFilterBox } from '../../util/activeDashboardFilters';\nimport getFilterValuesByFilterId from '../../util/getFilterValuesByFilterId';import { jsx as ___EmotionJSX } from \"@emotion/react\";\n\nconst propTypes = {\n  id: PropTypes.number.isRequired,\n  componentId: PropTypes.string.isRequired,\n  dashboardId: PropTypes.number.isRequired,\n  width: PropTypes.number.isRequired,\n  height: PropTypes.number.isRequired,\n  updateSliceName: PropTypes.func.isRequired,\n  isComponentVisible: PropTypes.bool,\n  handleToggleFullSize: PropTypes.func.isRequired,\n\n  // from redux\n  chart: chartPropShape.isRequired,\n  formData: PropTypes.object.isRequired,\n  datasource: PropTypes.object,\n  slice: slicePropShape.isRequired,\n  sliceName: PropTypes.string.isRequired,\n  timeout: PropTypes.number.isRequired,\n  maxRows: PropTypes.number.isRequired,\n  // all active filter fields in dashboard\n  filters: PropTypes.object.isRequired,\n  refreshChart: PropTypes.func.isRequired,\n  logEvent: PropTypes.func.isRequired,\n  toggleExpandSlice: PropTypes.func.isRequired,\n  changeFilter: PropTypes.func.isRequired,\n  setFocusedFilterField: PropTypes.func.isRequired,\n  unsetFocusedFilterField: PropTypes.func.isRequired,\n  editMode: PropTypes.bool.isRequired,\n  isExpanded: PropTypes.bool.isRequired,\n  isCached: PropTypes.bool,\n  supersetCanExplore: PropTypes.bool.isRequired,\n  supersetCanShare: PropTypes.bool.isRequired,\n  supersetCanCSV: PropTypes.bool.isRequired,\n  sliceCanEdit: PropTypes.bool.isRequired,\n  addSuccessToast: PropTypes.func.isRequired,\n  addDangerToast: PropTypes.func.isRequired,\n  ownState: PropTypes.object,\n  filterState: PropTypes.object };\n\n\nconst defaultProps = {\n  isCached: false,\n  isComponentVisible: true };\n\n\n// we use state + shouldComponentUpdate() logic to prevent perf-wrecking\n// resizing across all slices on a dashboard on every update\nconst RESIZE_TIMEOUT = 350;\nconst SHOULD_UPDATE_ON_PROP_CHANGES = _filterInstanceProperty(_context = _Object$keys(propTypes)).call(_context,\n(prop) => prop !== 'width' && prop !== 'height');\n\nconst OVERFLOWABLE_VIZ_TYPES = new _Set(['filter_box']);\nconst DEFAULT_HEADER_HEIGHT = 22;\n\nconst ChartOverlay = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  z-index: 5;\n`;\n\nexport default class Chart extends React.Component {\n  constructor(props) {var _context2, _context3, _context4, _context5, _context6, _context7, _context8, _context9, _context10;\n    super(props);this.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    logExploreChart = () => {\n      this.props.logEvent(LOG_ACTIONS_EXPLORE_DASHBOARD_CHART, {\n        slice_id: _sliceInstanceProperty(this.props).slice_id,\n        is_cached: this.props.isCached });\n\n    };this.\n\n    getChartUrl = () => getExploreLongUrl(this.props.formData);this.state = { width: props.width, height: props.height, descriptionHeight: 0 };this.changeFilter = _bindInstanceProperty(_context2 = this.changeFilter).call(_context2, this);this.handleFilterMenuOpen = _bindInstanceProperty(_context3 = this.handleFilterMenuOpen).call(_context3, this);this.handleFilterMenuClose = _bindInstanceProperty(_context4 = this.handleFilterMenuClose).call(_context4, this);this.exportCSV = _bindInstanceProperty(_context5 = this.exportCSV).call(_context5, this);this.exportFullCSV = _bindInstanceProperty(_context6 = this.exportFullCSV).call(_context6, this);this.forceRefresh = _bindInstanceProperty(_context7 = this.forceRefresh).call(_context7, this);this.resize = _bindInstanceProperty(_context8 = this.resize).call(_context8, this);this.setDescriptionRef = _bindInstanceProperty(_context9 = this.setDescriptionRef).call(_context9, this);this.setHeaderRef = _bindInstanceProperty(_context10 = this.setHeaderRef).call(_context10, this);}shouldComponentUpdate(nextProps, nextState) {// this logic mostly pertains to chart resizing. we keep a copy of the dimensions in\n    // state so that we can buffer component size updates and only update on the final call\n    // which improves performance significantly\n    if (nextState.width !== this.state.width || nextState.height !== this.state.height || nextState.descriptionHeight !== this.state.descriptionHeight || nextProps.datasource !== this.props.datasource) {return true;} // allow chart update/re-render only if visible:\n    // under selected tab or no tab layout\n    if (nextProps.isComponentVisible) {if (nextProps.chart.triggerQuery) {return true;}if (nextProps.isFullSize !== this.props.isFullSize) {clearTimeout(this.resizeTimeout);this.resizeTimeout = _setTimeout(this.resize, RESIZE_TIMEOUT);return false;}if (nextProps.width !== this.props.width || nextProps.height !== this.props.height) {clearTimeout(this.resizeTimeout);this.resizeTimeout = _setTimeout(this.resize, RESIZE_TIMEOUT);}for (let i = 0; i < SHOULD_UPDATE_ON_PROP_CHANGES.length; i += 1) {const prop = SHOULD_UPDATE_ON_PROP_CHANGES[i]; // use deep objects equality comparison to prevent\n        // unneccessary updates when objects references change\n        if (!areObjectsEqual(nextProps[prop], this.props[prop])) {return true;}}} // `cacheBusterProp` is jected by react-hot-loader\n    return this.props.cacheBusterProp !== nextProps.cacheBusterProp;}componentWillUnmount() {clearTimeout(this.resizeTimeout);}componentDidUpdate(prevProps) {if (this.props.isExpanded !== prevProps.isExpanded) {const descriptionHeight = this.props.isExpanded && this.descriptionRef ? this.descriptionRef.offsetHeight : 0; // eslint-disable-next-line react/no-did-update-set-state\n      this.setState({ descriptionHeight });}}getChartHeight() {const headerHeight = this.getHeaderHeight();return this.state.height - headerHeight - this.state.descriptionHeight;}getHeaderHeight() {return this.headerRef && this.headerRef.offsetHeight || DEFAULT_HEADER_HEIGHT;}setDescriptionRef(ref) {this.descriptionRef = ref;}setHeaderRef(ref) {this.headerRef = ref;}resize() {const { width, height } = this.props;this.setState(() => ({ width, height }));}changeFilter(newSelectedValues = {}) {this.props.logEvent(LOG_ACTIONS_CHANGE_DASHBOARD_FILTER, { id: this.props.chart.id, columns: _Object$keys(newSelectedValues) });this.props.changeFilter(this.props.chart.id, newSelectedValues);}handleFilterMenuOpen(chartId, column) {this.props.setFocusedFilterField(chartId, column);}handleFilterMenuClose(chartId, column) {this.props.unsetFocusedFilterField(chartId, column);}exportCSV(isFullCSV = false) {this.props.logEvent(LOG_ACTIONS_EXPORT_CSV_DASHBOARD_CHART, { slice_id: _sliceInstanceProperty(this.props).slice_id, is_cached: this.props.isCached });exportChart({ formData: isFullCSV ? { ...this.props.formData, row_limit: this.props.maxRows } :\n      this.props.formData,\n      resultType: 'results',\n      resultFormat: 'csv' });\n\n  }\n\n  exportFullCSV() {\n    this.exportCSV(true);\n  }\n\n  forceRefresh() {\n    this.props.logEvent(LOG_ACTIONS_FORCE_REFRESH_CHART, {\n      slice_id: _sliceInstanceProperty(this.props).slice_id,\n      is_cached: this.props.isCached });\n\n    return this.props.refreshChart(\n    this.props.chart.id,\n    true,\n    this.props.dashboardId);\n\n  }\n\n  render() {\n    const {\n      id,\n      componentId,\n      dashboardId,\n      chart,\n      slice,\n      datasource,\n      isExpanded,\n      editMode,\n      filters,\n      formData,\n      updateSliceName,\n      sliceName,\n      toggleExpandSlice,\n      timeout,\n      supersetCanExplore,\n      supersetCanShare,\n      supersetCanCSV,\n      sliceCanEdit,\n      addSuccessToast,\n      addDangerToast,\n      ownState,\n      filterState,\n      handleToggleFullSize,\n      isFullSize } =\n    this.props;\n\n    const { width } = this.state;\n    // this prevents throwing in the case that a gridComponent\n    // references a chart that is not associated with the dashboard\n    if (!chart || !slice) {\n      return ___EmotionJSX(MissingChart, { height: this.getChartHeight(), __self: this, __source: { fileName: _jsxFileName, lineNumber: 295, columnNumber: 14 } });\n    }\n\n    const { queriesResponse, chartUpdateEndTime, chartStatus } = chart;\n    const isLoading = chartStatus === 'loading';\n    // eslint-disable-next-line camelcase\n    const isCached = (queriesResponse == null ? void 0 : _mapInstanceProperty(queriesResponse).call(queriesResponse, ({ is_cached }) => is_cached)) || [];\n    const cachedDttm =\n    // eslint-disable-next-line camelcase\n    (queriesResponse == null ? void 0 : _mapInstanceProperty(queriesResponse).call(queriesResponse, ({ cached_dttm }) => cached_dttm)) || [];\n    const isOverflowable = OVERFLOWABLE_VIZ_TYPES.has(slice.viz_type);\n    const initialValues = isFilterBox(id) ?\n    getFilterValuesByFilterId({\n      activeFilters: filters,\n      filterId: id }) :\n\n    {};\n    return (\n      ___EmotionJSX(\"div\", {\n        className: \"chart-slice\",\n        \"data-test\": \"chart-grid-component\",\n        \"data-test-chart-id\": id,\n        \"data-test-viz-type\": slice.viz_type,\n        \"data-test-chart-name\": slice.slice_name, __self: this, __source: { fileName: _jsxFileName, lineNumber: 313, columnNumber: 7 } },\n\n      ___EmotionJSX(SliceHeader, {\n        innerRef: this.setHeaderRef,\n        slice: slice,\n        isExpanded: !!isExpanded,\n        isCached: isCached,\n        cachedDttm: cachedDttm,\n        updatedDttm: chartUpdateEndTime,\n        toggleExpandSlice: toggleExpandSlice,\n        forceRefresh: this.forceRefresh,\n        editMode: editMode,\n        annotationQuery: chart.annotationQuery,\n        logExploreChart: this.logExploreChart,\n        exploreUrl: this.getChartUrl(),\n        exportCSV: this.exportCSV,\n        exportFullCSV: this.exportFullCSV,\n        updateSliceName: updateSliceName,\n        sliceName: sliceName,\n        supersetCanExplore: supersetCanExplore,\n        supersetCanShare: supersetCanShare,\n        supersetCanCSV: supersetCanCSV,\n        sliceCanEdit: sliceCanEdit,\n        componentId: componentId,\n        dashboardId: dashboardId,\n        filters: filters,\n        addSuccessToast: addSuccessToast,\n        addDangerToast: addDangerToast,\n        handleToggleFullSize: handleToggleFullSize,\n        isFullSize: isFullSize,\n        chartStatus: chart.chartStatus,\n        formData: formData, __self: this, __source: { fileName: _jsxFileName, lineNumber: 320, columnNumber: 9 } }),\n\n\n\n\n\n\n\n\n\n      isExpanded && slice.description_markeddown &&\n      ___EmotionJSX(\"div\", {\n        className: \"slice_description bs-callout bs-callout-default\",\n        ref: this.setDescriptionRef\n        // eslint-disable-next-line react/no-danger\n        , dangerouslySetInnerHTML: { __html: slice.description_markeddown }, __self: this, __source: { fileName: _jsxFileName, lineNumber: 360, columnNumber: 11 } }),\n\n\n\n      ___EmotionJSX(\"div\", {\n        className: cx(\n        'dashboard-chart',\n        isOverflowable && 'dashboard-chart--overflowable'), __self: this, __source: { fileName: _jsxFileName, lineNumber: 368, columnNumber: 9 } },\n\n\n      isLoading &&\n      ___EmotionJSX(ChartOverlay, {\n        style: {\n          width,\n          height: this.getChartHeight() }, __self: this, __source: { fileName: _jsxFileName, lineNumber: 375, columnNumber: 13 } }),\n\n\n\n\n      ___EmotionJSX(ChartContainer, {\n        width: width,\n        height: this.getChartHeight(),\n        addFilter: this.changeFilter,\n        onFilterMenuOpen: this.handleFilterMenuOpen,\n        onFilterMenuClose: this.handleFilterMenuClose,\n        annotationData: chart.annotationData,\n        chartAlert: chart.chartAlert,\n        chartId: id,\n        chartStatus: chartStatus,\n        datasource: datasource,\n        dashboardId: dashboardId,\n        initialValues: initialValues,\n        formData: formData,\n        ownState: ownState,\n        filterState: filterState,\n        queriesResponse: chart.queriesResponse,\n        timeout: timeout,\n        triggerQuery: chart.triggerQuery,\n        vizType: slice.viz_type, __self: this, __source: { fileName: _jsxFileName, lineNumber: 383, columnNumber: 11 } }))));\n\n\n\n\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}}\nChart.propTypes = propTypes;\nChart.defaultProps = defaultProps;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(propTypes, \"propTypes\", \"/Users/frankhe/projects/superset/superset-frontend/src/dashboard/components/gridComponents/Chart.jsx\");reactHotLoader.register(defaultProps, \"defaultProps\", \"/Users/frankhe/projects/superset/superset-frontend/src/dashboard/components/gridComponents/Chart.jsx\");reactHotLoader.register(RESIZE_TIMEOUT, \"RESIZE_TIMEOUT\", \"/Users/frankhe/projects/superset/superset-frontend/src/dashboard/components/gridComponents/Chart.jsx\");reactHotLoader.register(SHOULD_UPDATE_ON_PROP_CHANGES, \"SHOULD_UPDATE_ON_PROP_CHANGES\", \"/Users/frankhe/projects/superset/superset-frontend/src/dashboard/components/gridComponents/Chart.jsx\");reactHotLoader.register(OVERFLOWABLE_VIZ_TYPES, \"OVERFLOWABLE_VIZ_TYPES\", \"/Users/frankhe/projects/superset/superset-frontend/src/dashboard/components/gridComponents/Chart.jsx\");reactHotLoader.register(DEFAULT_HEADER_HEIGHT, \"DEFAULT_HEADER_HEIGHT\", \"/Users/frankhe/projects/superset/superset-frontend/src/dashboard/components/gridComponents/Chart.jsx\");reactHotLoader.register(ChartOverlay, \"ChartOverlay\", \"/Users/frankhe/projects/superset/superset-frontend/src/dashboard/components/gridComponents/Chart.jsx\");reactHotLoader.register(Chart, \"Chart\", \"/Users/frankhe/projects/superset/superset-frontend/src/dashboard/components/gridComponents/Chart.jsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/Users/frankhe/projects/superset/superset-frontend/src/dashboard/components/gridComponents/Chart.jsx"],"names":["cx","React","PropTypes","styled","exportChart","getExploreLongUrl","ChartContainer","LOG_ACTIONS_CHANGE_DASHBOARD_FILTER","LOG_ACTIONS_EXPLORE_DASHBOARD_CHART","LOG_ACTIONS_EXPORT_CSV_DASHBOARD_CHART","LOG_ACTIONS_FORCE_REFRESH_CHART","areObjectsEqual","SliceHeader","MissingChart","slicePropShape","chartPropShape","isFilterBox","getFilterValuesByFilterId","propTypes","id","number","isRequired","componentId","string","dashboardId","width","height","updateSliceName","func","isComponentVisible","bool","handleToggleFullSize","chart","formData","object","datasource","slice","sliceName","timeout","maxRows","filters","refreshChart","logEvent","toggleExpandSlice","changeFilter","setFocusedFilterField","unsetFocusedFilterField","editMode","isExpanded","isCached","supersetCanExplore","supersetCanShare","supersetCanCSV","sliceCanEdit","addSuccessToast","addDangerToast","ownState","filterState","defaultProps","RESIZE_TIMEOUT","SHOULD_UPDATE_ON_PROP_CHANGES","prop","OVERFLOWABLE_VIZ_TYPES","DEFAULT_HEADER_HEIGHT","ChartOverlay","div","Chart","Component","constructor","props","logExploreChart","slice_id","is_cached","getChartUrl","state","descriptionHeight","handleFilterMenuOpen","handleFilterMenuClose","exportCSV","exportFullCSV","forceRefresh","resize","setDescriptionRef","setHeaderRef","shouldComponentUpdate","nextProps","nextState","triggerQuery","isFullSize","clearTimeout","resizeTimeout","i","length","cacheBusterProp","componentWillUnmount","componentDidUpdate","prevProps","descriptionRef","offsetHeight","setState","getChartHeight","headerHeight","getHeaderHeight","headerRef","ref","newSelectedValues","columns","chartId","column","isFullCSV","row_limit","resultType","resultFormat","render","queriesResponse","chartUpdateEndTime","chartStatus","isLoading","cachedDttm","cached_dttm","isOverflowable","has","viz_type","initialValues","activeFilters","filterId","slice_name","annotationQuery","description_markeddown","__html","annotationData","chartAlert"],"mappings":"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","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport cx from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { styled } from '@superset-ui/core';\n\nimport { exportChart, getExploreLongUrl } from 'src/explore/exploreUtils';\nimport ChartContainer from 'src/chart/ChartContainer';\nimport {\n  LOG_ACTIONS_CHANGE_DASHBOARD_FILTER,\n  LOG_ACTIONS_EXPLORE_DASHBOARD_CHART,\n  LOG_ACTIONS_EXPORT_CSV_DASHBOARD_CHART,\n  LOG_ACTIONS_FORCE_REFRESH_CHART,\n} from 'src/logger/LogUtils';\nimport { areObjectsEqual } from 'src/reduxUtils';\n\nimport SliceHeader from '../SliceHeader';\nimport MissingChart from '../MissingChart';\nimport { slicePropShape, chartPropShape } from '../../util/propShapes';\n\nimport { isFilterBox } from '../../util/activeDashboardFilters';\nimport getFilterValuesByFilterId from '../../util/getFilterValuesByFilterId';\n\nconst propTypes = {\n  id: PropTypes.number.isRequired,\n  componentId: PropTypes.string.isRequired,\n  dashboardId: PropTypes.number.isRequired,\n  width: PropTypes.number.isRequired,\n  height: PropTypes.number.isRequired,\n  updateSliceName: PropTypes.func.isRequired,\n  isComponentVisible: PropTypes.bool,\n  handleToggleFullSize: PropTypes.func.isRequired,\n\n  // from redux\n  chart: chartPropShape.isRequired,\n  formData: PropTypes.object.isRequired,\n  datasource: PropTypes.object,\n  slice: slicePropShape.isRequired,\n  sliceName: PropTypes.string.isRequired,\n  timeout: PropTypes.number.isRequired,\n  maxRows: PropTypes.number.isRequired,\n  // all active filter fields in dashboard\n  filters: PropTypes.object.isRequired,\n  refreshChart: PropTypes.func.isRequired,\n  logEvent: PropTypes.func.isRequired,\n  toggleExpandSlice: PropTypes.func.isRequired,\n  changeFilter: PropTypes.func.isRequired,\n  setFocusedFilterField: PropTypes.func.isRequired,\n  unsetFocusedFilterField: PropTypes.func.isRequired,\n  editMode: PropTypes.bool.isRequired,\n  isExpanded: PropTypes.bool.isRequired,\n  isCached: PropTypes.bool,\n  supersetCanExplore: PropTypes.bool.isRequired,\n  supersetCanShare: PropTypes.bool.isRequired,\n  supersetCanCSV: PropTypes.bool.isRequired,\n  sliceCanEdit: PropTypes.bool.isRequired,\n  addSuccessToast: PropTypes.func.isRequired,\n  addDangerToast: PropTypes.func.isRequired,\n  ownState: PropTypes.object,\n  filterState: PropTypes.object,\n};\n\nconst defaultProps = {\n  isCached: false,\n  isComponentVisible: true,\n};\n\n// we use state + shouldComponentUpdate() logic to prevent perf-wrecking\n// resizing across all slices on a dashboard on every update\nconst RESIZE_TIMEOUT = 350;\nconst SHOULD_UPDATE_ON_PROP_CHANGES = Object.keys(propTypes).filter(\n  prop => prop !== 'width' && prop !== 'height',\n);\nconst OVERFLOWABLE_VIZ_TYPES = new Set(['filter_box']);\nconst DEFAULT_HEADER_HEIGHT = 22;\n\nconst ChartOverlay = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  z-index: 5;\n`;\n\nexport default class Chart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      width: props.width,\n      height: props.height,\n      descriptionHeight: 0,\n    };\n\n    this.changeFilter = this.changeFilter.bind(this);\n    this.handleFilterMenuOpen = this.handleFilterMenuOpen.bind(this);\n    this.handleFilterMenuClose = this.handleFilterMenuClose.bind(this);\n    this.exportCSV = this.exportCSV.bind(this);\n    this.exportFullCSV = this.exportFullCSV.bind(this);\n    this.forceRefresh = this.forceRefresh.bind(this);\n    this.resize = this.resize.bind(this);\n    this.setDescriptionRef = this.setDescriptionRef.bind(this);\n    this.setHeaderRef = this.setHeaderRef.bind(this);\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    // this logic mostly pertains to chart resizing. we keep a copy of the dimensions in\n    // state so that we can buffer component size updates and only update on the final call\n    // which improves performance significantly\n    if (\n      nextState.width !== this.state.width ||\n      nextState.height !== this.state.height ||\n      nextState.descriptionHeight !== this.state.descriptionHeight ||\n      nextProps.datasource !== this.props.datasource\n    ) {\n      return true;\n    }\n\n    // allow chart update/re-render only if visible:\n    // under selected tab or no tab layout\n    if (nextProps.isComponentVisible) {\n      if (nextProps.chart.triggerQuery) {\n        return true;\n      }\n\n      if (nextProps.isFullSize !== this.props.isFullSize) {\n        clearTimeout(this.resizeTimeout);\n        this.resizeTimeout = setTimeout(this.resize, RESIZE_TIMEOUT);\n        return false;\n      }\n\n      if (\n        nextProps.width !== this.props.width ||\n        nextProps.height !== this.props.height\n      ) {\n        clearTimeout(this.resizeTimeout);\n        this.resizeTimeout = setTimeout(this.resize, RESIZE_TIMEOUT);\n      }\n\n      for (let i = 0; i < SHOULD_UPDATE_ON_PROP_CHANGES.length; i += 1) {\n        const prop = SHOULD_UPDATE_ON_PROP_CHANGES[i];\n        // use deep objects equality comparison to prevent\n        // unneccessary updates when objects references change\n        if (!areObjectsEqual(nextProps[prop], this.props[prop])) {\n          return true;\n        }\n      }\n    }\n\n    // `cacheBusterProp` is jected by react-hot-loader\n    return this.props.cacheBusterProp !== nextProps.cacheBusterProp;\n  }\n\n  componentWillUnmount() {\n    clearTimeout(this.resizeTimeout);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.isExpanded !== prevProps.isExpanded) {\n      const descriptionHeight =\n        this.props.isExpanded && this.descriptionRef\n          ? this.descriptionRef.offsetHeight\n          : 0;\n      // eslint-disable-next-line react/no-did-update-set-state\n      this.setState({ descriptionHeight });\n    }\n  }\n\n  getChartHeight() {\n    const headerHeight = this.getHeaderHeight();\n    return this.state.height - headerHeight - this.state.descriptionHeight;\n  }\n\n  getHeaderHeight() {\n    return (\n      (this.headerRef && this.headerRef.offsetHeight) || DEFAULT_HEADER_HEIGHT\n    );\n  }\n\n  setDescriptionRef(ref) {\n    this.descriptionRef = ref;\n  }\n\n  setHeaderRef(ref) {\n    this.headerRef = ref;\n  }\n\n  resize() {\n    const { width, height } = this.props;\n    this.setState(() => ({ width, height }));\n  }\n\n  changeFilter(newSelectedValues = {}) {\n    this.props.logEvent(LOG_ACTIONS_CHANGE_DASHBOARD_FILTER, {\n      id: this.props.chart.id,\n      columns: Object.keys(newSelectedValues),\n    });\n    this.props.changeFilter(this.props.chart.id, newSelectedValues);\n  }\n\n  handleFilterMenuOpen(chartId, column) {\n    this.props.setFocusedFilterField(chartId, column);\n  }\n\n  handleFilterMenuClose(chartId, column) {\n    this.props.unsetFocusedFilterField(chartId, column);\n  }\n\n  logExploreChart = () => {\n    this.props.logEvent(LOG_ACTIONS_EXPLORE_DASHBOARD_CHART, {\n      slice_id: this.props.slice.slice_id,\n      is_cached: this.props.isCached,\n    });\n  };\n\n  getChartUrl = () => getExploreLongUrl(this.props.formData);\n\n  exportCSV(isFullCSV = false) {\n    this.props.logEvent(LOG_ACTIONS_EXPORT_CSV_DASHBOARD_CHART, {\n      slice_id: this.props.slice.slice_id,\n      is_cached: this.props.isCached,\n    });\n    exportChart({\n      formData: isFullCSV\n        ? { ...this.props.formData, row_limit: this.props.maxRows }\n        : this.props.formData,\n      resultType: 'results',\n      resultFormat: 'csv',\n    });\n  }\n\n  exportFullCSV() {\n    this.exportCSV(true);\n  }\n\n  forceRefresh() {\n    this.props.logEvent(LOG_ACTIONS_FORCE_REFRESH_CHART, {\n      slice_id: this.props.slice.slice_id,\n      is_cached: this.props.isCached,\n    });\n    return this.props.refreshChart(\n      this.props.chart.id,\n      true,\n      this.props.dashboardId,\n    );\n  }\n\n  render() {\n    const {\n      id,\n      componentId,\n      dashboardId,\n      chart,\n      slice,\n      datasource,\n      isExpanded,\n      editMode,\n      filters,\n      formData,\n      updateSliceName,\n      sliceName,\n      toggleExpandSlice,\n      timeout,\n      supersetCanExplore,\n      supersetCanShare,\n      supersetCanCSV,\n      sliceCanEdit,\n      addSuccessToast,\n      addDangerToast,\n      ownState,\n      filterState,\n      handleToggleFullSize,\n      isFullSize,\n    } = this.props;\n\n    const { width } = this.state;\n    // this prevents throwing in the case that a gridComponent\n    // references a chart that is not associated with the dashboard\n    if (!chart || !slice) {\n      return <MissingChart height={this.getChartHeight()} />;\n    }\n\n    const { queriesResponse, chartUpdateEndTime, chartStatus } = chart;\n    const isLoading = chartStatus === 'loading';\n    // eslint-disable-next-line camelcase\n    const isCached = queriesResponse?.map(({ is_cached }) => is_cached) || [];\n    const cachedDttm =\n      // eslint-disable-next-line camelcase\n      queriesResponse?.map(({ cached_dttm }) => cached_dttm) || [];\n    const isOverflowable = OVERFLOWABLE_VIZ_TYPES.has(slice.viz_type);\n    const initialValues = isFilterBox(id)\n      ? getFilterValuesByFilterId({\n          activeFilters: filters,\n          filterId: id,\n        })\n      : {};\n    return (\n      <div\n        className=\"chart-slice\"\n        data-test=\"chart-grid-component\"\n        data-test-chart-id={id}\n        data-test-viz-type={slice.viz_type}\n        data-test-chart-name={slice.slice_name}\n      >\n        <SliceHeader\n          innerRef={this.setHeaderRef}\n          slice={slice}\n          isExpanded={!!isExpanded}\n          isCached={isCached}\n          cachedDttm={cachedDttm}\n          updatedDttm={chartUpdateEndTime}\n          toggleExpandSlice={toggleExpandSlice}\n          forceRefresh={this.forceRefresh}\n          editMode={editMode}\n          annotationQuery={chart.annotationQuery}\n          logExploreChart={this.logExploreChart}\n          exploreUrl={this.getChartUrl()}\n          exportCSV={this.exportCSV}\n          exportFullCSV={this.exportFullCSV}\n          updateSliceName={updateSliceName}\n          sliceName={sliceName}\n          supersetCanExplore={supersetCanExplore}\n          supersetCanShare={supersetCanShare}\n          supersetCanCSV={supersetCanCSV}\n          sliceCanEdit={sliceCanEdit}\n          componentId={componentId}\n          dashboardId={dashboardId}\n          filters={filters}\n          addSuccessToast={addSuccessToast}\n          addDangerToast={addDangerToast}\n          handleToggleFullSize={handleToggleFullSize}\n          isFullSize={isFullSize}\n          chartStatus={chart.chartStatus}\n          formData={formData}\n        />\n\n        {/*\n          This usage of dangerouslySetInnerHTML is safe since it is being used to render\n          markdown that is sanitized with bleach. See:\n             https://github.com/apache/superset/pull/4390\n          and\n             https://github.com/apache/superset/commit/b6fcc22d5a2cb7a5e92599ed5795a0169385a825\n        */}\n        {isExpanded && slice.description_markeddown && (\n          <div\n            className=\"slice_description bs-callout bs-callout-default\"\n            ref={this.setDescriptionRef}\n            // eslint-disable-next-line react/no-danger\n            dangerouslySetInnerHTML={{ __html: slice.description_markeddown }}\n          />\n        )}\n\n        <div\n          className={cx(\n            'dashboard-chart',\n            isOverflowable && 'dashboard-chart--overflowable',\n          )}\n        >\n          {isLoading && (\n            <ChartOverlay\n              style={{\n                width,\n                height: this.getChartHeight(),\n              }}\n            />\n          )}\n\n          <ChartContainer\n            width={width}\n            height={this.getChartHeight()}\n            addFilter={this.changeFilter}\n            onFilterMenuOpen={this.handleFilterMenuOpen}\n            onFilterMenuClose={this.handleFilterMenuClose}\n            annotationData={chart.annotationData}\n            chartAlert={chart.chartAlert}\n            chartId={id}\n            chartStatus={chartStatus}\n            datasource={datasource}\n            dashboardId={dashboardId}\n            initialValues={initialValues}\n            formData={formData}\n            ownState={ownState}\n            filterState={filterState}\n            queriesResponse={chart.queriesResponse}\n            timeout={timeout}\n            triggerQuery={chart.triggerQuery}\n            vizType={slice.viz_type}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nChart.propTypes = propTypes;\nChart.defaultProps = defaultProps;\n"]},"metadata":{},"sourceType":"module"}