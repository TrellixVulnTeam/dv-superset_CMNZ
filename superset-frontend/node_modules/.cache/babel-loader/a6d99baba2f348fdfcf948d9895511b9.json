{"ast":null,"code":"import \"core-js/modules/es.string.replace.js\";import \"core-js/modules/web.dom-collections.iterator.js\";import _extends from \"@babel/runtime-corejs3/helpers/extends\";import _sliceInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/slice\";import _mapInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/map\";import _sortInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/sort\";import _debounce from \"lodash/debounce\";var _jsxFileName = \"/Users/frankhe/projects/superset/superset-frontend/src/explore/components/DatasourcePanel/index.tsx\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useEffect, useMemo, useState } from 'react';\nimport { styled, t } from '@superset-ui/core';\nimport Collapse from 'src/components/Collapse';\n\nimport { matchSorter, rankings } from 'match-sorter';\nimport { FAST_DEBOUNCE } from 'src/constants';\nimport { FeatureFlag, isFeatureEnabled } from 'src/featureFlags';\nimport Control from 'src/explore/components/Control';\nimport DatasourcePanelDragWrapper from './DatasourcePanelDragWrapper';\nimport { DndItemType } from '../DndItemType';\nimport { StyledColumnOption, StyledMetricOption } from '../optionRenderers';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst Button = styled.button`\n  background: none;\n  border: none;\n  text-decoration: underline;\n  color: ${({ theme }) => theme.colors.primary.dark1};\n`;\nconst ButtonContainer = styled.div`\n  text-align: center;\n  padding-top: 2px;\n`;\nconst DatasourceContainer = styled.div`\n  background-color: ${({ theme }) => theme.colors.grayscale.light4};\n  position: relative;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  max-height: 100%;\n  .ant-collapse {\n    height: auto;\n  }\n  .field-selections {\n    padding: ${({ theme }) => `0 0 ${4 * theme.gridUnit}px`};\n    overflow: auto;\n  }\n  .field-length {\n    margin-bottom: ${({ theme }) => theme.gridUnit * 2}px;\n    font-size: ${({ theme }) => theme.typography.sizes.s}px;\n    color: ${({ theme }) => theme.colors.grayscale.light1};\n  }\n  .form-control.input-md {\n    width: calc(100% - ${({ theme }) => theme.gridUnit * 4}px);\n    margin: ${({ theme }) => theme.gridUnit * 2}px auto;\n  }\n  .type-label {\n    font-weight: ${({ theme }) => theme.typography.weights.light};\n    font-size: ${({ theme }) => theme.typography.sizes.s}px;\n    color: ${({ theme }) => theme.colors.grayscale.base};\n  }\n  .Control {\n    padding-bottom: 0;\n  }\n`;\nconst LabelContainer = styled.div`\n  overflow: hidden;\n  text-overflow: ellipsis;\n\n  & > span {\n    white-space: nowrap;\n  }\n\n  .option-label {\n    display: inline;\n  }\n\n  .metric-option {\n    & > svg {\n      min-width: ${({ theme }) => `${theme.gridUnit * 4}px`};\n    }\n    & > .option-label {\n      overflow: hidden;\n      text-overflow: ellipsis;\n    }\n  }\n`;\nconst enableExploreDnd = isFeatureEnabled(FeatureFlag.ENABLE_EXPLORE_DRAG_AND_DROP);\nexport default function DataSourcePanel({ datasource, controls: { datasource: datasourceControl }, actions }) {var _context4, _context5;\n  const { columns: _columns, metrics } = datasource;\n  // display temporal column first\n  const columns = useMemo(() => {var _context;return _sortInstanceProperty(_context = [..._columns]).call(_context, (col1, col2) => {\n      if (col1.is_dttm && !col2.is_dttm) {\n        return -1;\n      }\n      if (col2.is_dttm && !col1.is_dttm) {\n        return 1;\n      }\n      return 0;\n    });}, [_columns]);\n  const [inputValue, setInputValue] = useState('');\n  const [lists, setList] = useState({\n    columns,\n    metrics });\n\n  const [showAllMetrics, setShowAllMetrics] = useState(false);\n  const [showAllColumns, setShowAllColumns] = useState(false);\n  const DEFAULT_MAX_COLUMNS_LENGTH = 50;\n  const DEFAULT_MAX_METRICS_LENGTH = 50;\n  const search = _debounce((value) => {\n    if (value === '') {\n      setList({ columns, metrics });\n      return;\n    }\n    setList({\n      columns: matchSorter(columns, value, {\n        keys: [\n        {\n          key: 'verbose_name',\n          threshold: rankings.CONTAINS },\n\n        {\n          key: 'column_name',\n          threshold: rankings.CONTAINS },\n\n        {\n          key: (item) => {var _context2;return _mapInstanceProperty(_context2 = [item.description, item.expression]).call(_context2, (x) => (x == null ? void 0 : x.replace(/[_\\n\\s]+/g, ' ')) || '');},\n          threshold: rankings.CONTAINS,\n          maxRanking: rankings.CONTAINS }],\n\n\n        keepDiacritics: true }),\n\n      metrics: matchSorter(metrics, value, {\n        keys: [\n        {\n          key: 'verbose_name',\n          threshold: rankings.CONTAINS },\n\n        {\n          key: 'metric_name',\n          threshold: rankings.CONTAINS },\n\n        {\n          key: (item) => {var _context3;return _mapInstanceProperty(_context3 = [item.description, item.expression]).call(_context3, (x) => (x == null ? void 0 : x.replace(/[_\\n\\s]+/g, ' ')) || '');},\n          threshold: rankings.CONTAINS,\n          maxRanking: rankings.CONTAINS }],\n\n\n        keepDiacritics: true,\n        baseSort: (a, b) => Number(b.item.is_certified) - Number(a.item.is_certified) ||\n        String(a.rankedValue).localeCompare(b.rankedValue) }) });\n\n\n  }, FAST_DEBOUNCE);\n  useEffect(() => {\n    setList({\n      columns,\n      metrics });\n\n    setInputValue('');\n  }, [columns, datasource, metrics]);\n  const metricSlice = showAllMetrics ?\n  lists.metrics :\n  _sliceInstanceProperty(_context4 = lists.metrics).call(_context4, 0, DEFAULT_MAX_COLUMNS_LENGTH);\n  const columnSlice = showAllColumns ?\n  lists.columns :\n  _sliceInstanceProperty(_context5 = lists.columns).call(_context5, 0, DEFAULT_MAX_METRICS_LENGTH);\n  const mainBody = ___EmotionJSX(React.Fragment, null,\n  ___EmotionJSX(\"input\", { type: \"text\", onChange: (evt) => {\n      setInputValue(evt.target.value);\n      search(evt.target.value);\n    }, value: inputValue, className: \"form-control input-md\", placeholder: t('Search Metrics & Columns'), __self: this, __source: { fileName: _jsxFileName, lineNumber: 176, columnNumber: 7 } }),\n  ___EmotionJSX(\"div\", { className: \"field-selections\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 180, columnNumber: 7 } },\n  ___EmotionJSX(Collapse, { bordered: true, defaultActiveKey: ['metrics', 'column'], expandIconPosition: \"right\", ghost: true, __self: this, __source: { fileName: _jsxFileName, lineNumber: 181, columnNumber: 9 } },\n  ___EmotionJSX(Collapse.Panel, { header: ___EmotionJSX(\"span\", { className: \"header\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 182, columnNumber: 35 } }, t('Metrics')), key: \"metrics\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 182, columnNumber: 11 } },\n  ___EmotionJSX(\"div\", { className: \"field-length\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 183, columnNumber: 13 } },\n  t(`Showing %s of %s`, metricSlice.length, lists.metrics.length)),\n\n  _mapInstanceProperty(metricSlice).call(metricSlice, (m) => ___EmotionJSX(LabelContainer, { key: m.metric_name, className: \"column\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 186, columnNumber: 36 } },\n  enableExploreDnd ? ___EmotionJSX(DatasourcePanelDragWrapper, { value: m, type: DndItemType.Metric, __self: this, __source: { fileName: _jsxFileName, lineNumber: 187, columnNumber: 38 } },\n  ___EmotionJSX(StyledMetricOption, { metric: m, showType: true, __self: this, __source: { fileName: _jsxFileName, lineNumber: 188, columnNumber: 21 } })) :\n  ___EmotionJSX(StyledMetricOption, { metric: m, showType: true, __self: this, __source: { fileName: _jsxFileName, lineNumber: 189, columnNumber: 53 } }))),\n\n  lists.metrics.length > DEFAULT_MAX_METRICS_LENGTH ? ___EmotionJSX(ButtonContainer, { __self: this, __source: { fileName: _jsxFileName, lineNumber: 191, columnNumber: 67 } },\n  ___EmotionJSX(Button, { onClick: () => setShowAllMetrics(!showAllMetrics), __self: this, __source: { fileName: _jsxFileName, lineNumber: 192, columnNumber: 17 } },\n  showAllMetrics ? t('Show less...') : t('Show all...'))) :\n\n  ___EmotionJSX(React.Fragment, null)),\n\n  ___EmotionJSX(Collapse.Panel, { header: ___EmotionJSX(\"span\", { className: \"header\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 197, columnNumber: 35 } }, t('Columns')), key: \"column\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 197, columnNumber: 11 } },\n  ___EmotionJSX(\"div\", { className: \"field-length\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 198, columnNumber: 13 } },\n  t(`Showing %s of %s`, columnSlice.length, lists.columns.length)),\n\n  _mapInstanceProperty(columnSlice).call(columnSlice, (col) => ___EmotionJSX(LabelContainer, { key: col.column_name, className: \"column\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 201, columnNumber: 38 } },\n  enableExploreDnd ? ___EmotionJSX(DatasourcePanelDragWrapper, { value: col, type: DndItemType.Column, __self: this, __source: { fileName: _jsxFileName, lineNumber: 202, columnNumber: 38 } },\n  ___EmotionJSX(StyledColumnOption, { column: col, showType: true, __self: this, __source: { fileName: _jsxFileName, lineNumber: 203, columnNumber: 21 } })) :\n  ___EmotionJSX(StyledColumnOption, { column: col, showType: true, __self: this, __source: { fileName: _jsxFileName, lineNumber: 204, columnNumber: 53 } }))),\n\n  lists.columns.length > DEFAULT_MAX_COLUMNS_LENGTH ? ___EmotionJSX(ButtonContainer, { __self: this, __source: { fileName: _jsxFileName, lineNumber: 206, columnNumber: 67 } },\n  ___EmotionJSX(Button, { onClick: () => setShowAllColumns(!showAllColumns), __self: this, __source: { fileName: _jsxFileName, lineNumber: 207, columnNumber: 17 } },\n  showAllColumns ? t('Show Less...') : t('Show all...'))) :\n\n  ___EmotionJSX(React.Fragment, null)))));\n\n\n\n\n  return ___EmotionJSX(DatasourceContainer, { __self: this, __source: { fileName: _jsxFileName, lineNumber: 215, columnNumber: 13 } },\n  ___EmotionJSX(Control, _extends({}, datasourceControl, { name: \"datasource\", actions: actions, __self: this, __source: { fileName: _jsxFileName, lineNumber: 216, columnNumber: 7 } })),\n  datasource.id != null && mainBody);\n\n}__signature__(DataSourcePanel, \"useMemo{columns}\\nuseState{[inputValue, setInputValue]('')}\\nuseState{[lists, setList]({\\n        columns,\\n        metrics,\\n    })}\\nuseState{[showAllMetrics, setShowAllMetrics](false)}\\nuseState{[showAllColumns, setShowAllColumns](false)}\\nuseEffect{}\");;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(Button, \"Button\", \"/Users/frankhe/projects/superset/superset-frontend/src/explore/components/DatasourcePanel/index.tsx\");reactHotLoader.register(ButtonContainer, \"ButtonContainer\", \"/Users/frankhe/projects/superset/superset-frontend/src/explore/components/DatasourcePanel/index.tsx\");reactHotLoader.register(DatasourceContainer, \"DatasourceContainer\", \"/Users/frankhe/projects/superset/superset-frontend/src/explore/components/DatasourcePanel/index.tsx\");reactHotLoader.register(LabelContainer, \"LabelContainer\", \"/Users/frankhe/projects/superset/superset-frontend/src/explore/components/DatasourcePanel/index.tsx\");reactHotLoader.register(enableExploreDnd, \"enableExploreDnd\", \"/Users/frankhe/projects/superset/superset-frontend/src/explore/components/DatasourcePanel/index.tsx\");reactHotLoader.register(DataSourcePanel, \"DataSourcePanel\", \"/Users/frankhe/projects/superset/superset-frontend/src/explore/components/DatasourcePanel/index.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/Users/frankhe/projects/superset/superset-frontend/src/explore/components/DatasourcePanel/index.tsx"],"names":[],"mappings":"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","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useEffect, useMemo, useState } from 'react';\nimport { styled, t } from '@superset-ui/core';\nimport Collapse from 'src/components/Collapse';\nimport { ControlConfig, DatasourceMeta } from '@superset-ui/chart-controls';\nimport { debounce } from 'lodash';\nimport { matchSorter, rankings } from 'match-sorter';\nimport { FAST_DEBOUNCE } from 'src/constants';\nimport { FeatureFlag, isFeatureEnabled } from 'src/featureFlags';\nimport { ExploreActions } from 'src/explore/actions/exploreActions';\nimport Control from 'src/explore/components/Control';\nimport DatasourcePanelDragWrapper from './DatasourcePanelDragWrapper';\nimport { DndItemType } from '../DndItemType';\nimport { StyledColumnOption, StyledMetricOption } from '../optionRenderers';\n\ninterface DatasourceControl extends ControlConfig {\n  datasource?: DatasourceMeta;\n}\n\nexport interface Props {\n  datasource: DatasourceMeta;\n  controls: {\n    datasource: DatasourceControl;\n  };\n  actions: Partial<ExploreActions> & Pick<ExploreActions, 'setControlValue'>;\n}\n\nconst Button = styled.button`\n  background: none;\n  border: none;\n  text-decoration: underline;\n  color: ${({ theme }) => theme.colors.primary.dark1};\n`;\n\nconst ButtonContainer = styled.div`\n  text-align: center;\n  padding-top: 2px;\n`;\n\nconst DatasourceContainer = styled.div`\n  background-color: ${({ theme }) => theme.colors.grayscale.light4};\n  position: relative;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  max-height: 100%;\n  .ant-collapse {\n    height: auto;\n  }\n  .field-selections {\n    padding: ${({ theme }) => `0 0 ${4 * theme.gridUnit}px`};\n    overflow: auto;\n  }\n  .field-length {\n    margin-bottom: ${({ theme }) => theme.gridUnit * 2}px;\n    font-size: ${({ theme }) => theme.typography.sizes.s}px;\n    color: ${({ theme }) => theme.colors.grayscale.light1};\n  }\n  .form-control.input-md {\n    width: calc(100% - ${({ theme }) => theme.gridUnit * 4}px);\n    margin: ${({ theme }) => theme.gridUnit * 2}px auto;\n  }\n  .type-label {\n    font-weight: ${({ theme }) => theme.typography.weights.light};\n    font-size: ${({ theme }) => theme.typography.sizes.s}px;\n    color: ${({ theme }) => theme.colors.grayscale.base};\n  }\n  .Control {\n    padding-bottom: 0;\n  }\n`;\n\nconst LabelContainer = styled.div`\n  overflow: hidden;\n  text-overflow: ellipsis;\n\n  & > span {\n    white-space: nowrap;\n  }\n\n  .option-label {\n    display: inline;\n  }\n\n  .metric-option {\n    & > svg {\n      min-width: ${({ theme }) => `${theme.gridUnit * 4}px`};\n    }\n    & > .option-label {\n      overflow: hidden;\n      text-overflow: ellipsis;\n    }\n  }\n`;\n\nconst enableExploreDnd = isFeatureEnabled(\n  FeatureFlag.ENABLE_EXPLORE_DRAG_AND_DROP,\n);\n\nexport default function DataSourcePanel({\n  datasource,\n  controls: { datasource: datasourceControl },\n  actions,\n}: Props) {\n  const { columns: _columns, metrics } = datasource;\n\n  // display temporal column first\n  const columns = useMemo(\n    () =>\n      [..._columns].sort((col1, col2) => {\n        if (col1.is_dttm && !col2.is_dttm) {\n          return -1;\n        }\n        if (col2.is_dttm && !col1.is_dttm) {\n          return 1;\n        }\n        return 0;\n      }),\n    [_columns],\n  );\n\n  const [inputValue, setInputValue] = useState('');\n  const [lists, setList] = useState({\n    columns,\n    metrics,\n  });\n  const [showAllMetrics, setShowAllMetrics] = useState(false);\n  const [showAllColumns, setShowAllColumns] = useState(false);\n\n  const DEFAULT_MAX_COLUMNS_LENGTH = 50;\n  const DEFAULT_MAX_METRICS_LENGTH = 50;\n\n  const search = debounce((value: string) => {\n    if (value === '') {\n      setList({ columns, metrics });\n      return;\n    }\n    setList({\n      columns: matchSorter(columns, value, {\n        keys: [\n          {\n            key: 'verbose_name',\n            threshold: rankings.CONTAINS,\n          },\n          {\n            key: 'column_name',\n            threshold: rankings.CONTAINS,\n          },\n          {\n            key: item =>\n              [item.description, item.expression].map(\n                x => x?.replace(/[_\\n\\s]+/g, ' ') || '',\n              ),\n            threshold: rankings.CONTAINS,\n            maxRanking: rankings.CONTAINS,\n          },\n        ],\n        keepDiacritics: true,\n      }),\n      metrics: matchSorter(metrics, value, {\n        keys: [\n          {\n            key: 'verbose_name',\n            threshold: rankings.CONTAINS,\n          },\n          {\n            key: 'metric_name',\n            threshold: rankings.CONTAINS,\n          },\n          {\n            key: item =>\n              [item.description, item.expression].map(\n                x => x?.replace(/[_\\n\\s]+/g, ' ') || '',\n              ),\n            threshold: rankings.CONTAINS,\n            maxRanking: rankings.CONTAINS,\n          },\n        ],\n        keepDiacritics: true,\n        baseSort: (a, b) =>\n          Number(b.item.is_certified) - Number(a.item.is_certified) ||\n          String(a.rankedValue).localeCompare(b.rankedValue),\n      }),\n    });\n  }, FAST_DEBOUNCE);\n\n  useEffect(() => {\n    setList({\n      columns,\n      metrics,\n    });\n    setInputValue('');\n  }, [columns, datasource, metrics]);\n\n  const metricSlice = showAllMetrics\n    ? lists.metrics\n    : lists.metrics.slice(0, DEFAULT_MAX_COLUMNS_LENGTH);\n  const columnSlice = showAllColumns\n    ? lists.columns\n    : lists.columns.slice(0, DEFAULT_MAX_METRICS_LENGTH);\n\n  const mainBody = (\n    <>\n      <input\n        type=\"text\"\n        onChange={evt => {\n          setInputValue(evt.target.value);\n          search(evt.target.value);\n        }}\n        value={inputValue}\n        className=\"form-control input-md\"\n        placeholder={t('Search Metrics & Columns')}\n      />\n      <div className=\"field-selections\">\n        <Collapse\n          bordered\n          defaultActiveKey={['metrics', 'column']}\n          expandIconPosition=\"right\"\n          ghost\n        >\n          <Collapse.Panel\n            header={<span className=\"header\">{t('Metrics')}</span>}\n            key=\"metrics\"\n          >\n            <div className=\"field-length\">\n              {t(`Showing %s of %s`, metricSlice.length, lists.metrics.length)}\n            </div>\n            {metricSlice.map(m => (\n              <LabelContainer key={m.metric_name} className=\"column\">\n                {enableExploreDnd ? (\n                  <DatasourcePanelDragWrapper\n                    value={m}\n                    type={DndItemType.Metric}\n                  >\n                    <StyledMetricOption metric={m} showType />\n                  </DatasourcePanelDragWrapper>\n                ) : (\n                  <StyledMetricOption metric={m} showType />\n                )}\n              </LabelContainer>\n            ))}\n            {lists.metrics.length > DEFAULT_MAX_METRICS_LENGTH ? (\n              <ButtonContainer>\n                <Button onClick={() => setShowAllMetrics(!showAllMetrics)}>\n                  {showAllMetrics ? t('Show less...') : t('Show all...')}\n                </Button>\n              </ButtonContainer>\n            ) : (\n              <></>\n            )}\n          </Collapse.Panel>\n          <Collapse.Panel\n            header={<span className=\"header\">{t('Columns')}</span>}\n            key=\"column\"\n          >\n            <div className=\"field-length\">\n              {t(`Showing %s of %s`, columnSlice.length, lists.columns.length)}\n            </div>\n            {columnSlice.map(col => (\n              <LabelContainer key={col.column_name} className=\"column\">\n                {enableExploreDnd ? (\n                  <DatasourcePanelDragWrapper\n                    value={col}\n                    type={DndItemType.Column}\n                  >\n                    <StyledColumnOption column={col} showType />\n                  </DatasourcePanelDragWrapper>\n                ) : (\n                  <StyledColumnOption column={col} showType />\n                )}\n              </LabelContainer>\n            ))}\n            {lists.columns.length > DEFAULT_MAX_COLUMNS_LENGTH ? (\n              <ButtonContainer>\n                <Button onClick={() => setShowAllColumns(!showAllColumns)}>\n                  {showAllColumns ? t('Show Less...') : t('Show all...')}\n                </Button>\n              </ButtonContainer>\n            ) : (\n              <></>\n            )}\n          </Collapse.Panel>\n        </Collapse>\n      </div>\n    </>\n  );\n\n  return (\n    <DatasourceContainer>\n      <Control {...datasourceControl} name=\"datasource\" actions={actions} />\n      {datasource.id != null && mainBody}\n    </DatasourceContainer>\n  );\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}